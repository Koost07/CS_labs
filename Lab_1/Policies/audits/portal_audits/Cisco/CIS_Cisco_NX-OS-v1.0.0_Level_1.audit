#
# This script is Copyright (C) 2004-2021 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2021/06/17 $
#
# Description : This document implements the security configuration as recommended by the
#               CIS Cisco NX-OS Becnhmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS Cisco NX-OS L1 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Cisco NX-OS L1</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/3102</link>
#</spec>
#<labels>cisco,cis,nx-os</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7,CIS_Recommendation</benchmark_refs>
#<variables>
#  <variable>
#    <name>ACL_VTY</name>
#    <default>acl-mgt</default>
#    <description>ACL for VTY Connections</description>
#    <info>The ACL for trusted subnets and/or stations for VTY connections.</info>
#  </variable>
#  <variable>
#    <name>PASSWORD_MIN_LENGTH</name>
#    <default>20</default>
#    <description>Password minimum length</description>
#    <info>The minimum length for global passwords.</info>
#  </variable>
#  <variable>
#    <name>PASSWORD_MAX_LENGTH</name>
#    <default>127</default>
#    <description>Password maximum length</description>
#    <info>The maximum length for global passwords.</info>
#  </variable>
#  <variable>
#    <name>SNMPV2_ACL</name>
#    <default>ACL-SNMPv2</default>
#    <description>SNMPv2 ACL</description>
#    <info>If using SNMPv2, the inbound ACL for SNMP access.</info>
#  </variable>
#  <variable>
#    <name>BANNER_MOTD_CONTENT</name>
#    <default>All use of this device is monitored and logged.</default>
#    <description>MOTD Banner</description>
#    <info>Message of the Day banner configured on the target.</info>
#  </variable>
#  <variable>
#    <name>BANNER_EXEC_CONTENT</name>
#    <default>All use of this device is monitored and logged.</default>
#    <description>EXEC Banner</description>
#    <info>EXEC (post login) banner configured on the target.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Cisco">

<item>
  type        : CONFIG_CHECK
  description : "1.1.1 Configure AAA Authentication - TACACS - feature tacacs+"
  info        : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution    : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.1.1,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.2,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,LEVEL|2A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "feature tacacs\+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - tacacs-server"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|1.1.1,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,LEVEL|2A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,PCI-DSSv3.2|8.1,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "tacacs-server host .+ key .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - aaa group"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.1,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  context         : "aaa group server tacacs\+ .+"
  item            : "server .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - aaa authentication"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "CIS_Recommendation|1.1.1,CSCv7|16.2,LEVEL|1A,LEVEL|2A,PCI-DSSv3.2|8.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "aaa authentication login (default|console) group .+ local"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - radius-server host"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.2,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,PCI-DSSv3.2|8.1,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "radius-server host .+ key .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - aaa group"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.2,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  context         : "aaa group server radius .+"
  item            : "server .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - aaa authentication"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "CIS_Recommendation|1.1.2,CSCv7|16.2,LEVEL|1A,LEVEL|2A,PCI-DSSv3.2|8.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "aaa authentication login (default|console) group .+ local"
  min_occurrences : "2"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.1.3 Configure AAA Authentication - Local SSH keys"
  info        : "Using the client's public key to authenticate their SSH sessions circumvents the need for using passwords for an administrative login to the switch.

Rationale:

This is primarily an ease-of-use feature. It means that the administrators don't need to remember or key in passwords. It also can be used to significantly improve the security of any scripts or API calls that might use SSH.

Impact:

There are pros and cons to this approach.

Pro:

Scripts and API calls that use SSH no longer need to have credentials embedded in them. While this can be done securely (using password vaults for instance), all to often the credentials are in clear-text, in the code or in an input file.

This is popular with network administrators, as they no longer need to key in passwords, or 'grab' their password from a password manager application.

It means that administrators can no longer configure easy to guess passwords.

Con:

The private half of the PKI exchange (client side) can be available if the administrator's workstation or account is compromised

An inventory of SSH hosts that use key based authentication needs to be maintained if this approach is used. This is so that if a key needs to be replaced or deleted, the list of hosts that need to be updated is easily accessed. This can be time sensitive if an administrator has left the organization, or if a laptop is lost or stolen. Even if this is just due to regular hardware replacement or a policy that expires keys at regular intervals, missing a device can be a 'time bomb' that is often not found until the worst possible moment

Normally the best recommendation is to use a back-end authentication source (such as AD), with RADIUS or TACACS+ as the authentication protocol. The back end directory can then enforce whatever complexity or password change requirements are needed. In particular if an administrator leaves the organization or changes departments, those situations can be managed by changing AD Group membership or by disabling the account in question.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Create the client's SSH public and private keys. The keys must be in OpenSSH format for the NX-OS switch to interpret them correctly. Use either RSA or DSA algorithms, and be sure to specify enough bits for entropy (2048 minimum, more is of course better)

Upload the client's SSH public key, and store it on the bootflash of the switch.

Be sure that the file has a meaningful name, often the users's initials and the key algorithm (RSA or DSA) is in the filename. This makes it easier to remove or replace that file as keys are expired out, workstations migrate or administrators leave the organization.

To enable key-based authentication for one local user (for instance, Davey Jones), enter the command:

switch(config)# username djadmin sshkey file bootflash:dj_rsa.pub

Alternatively, the ssh key can be defined in the username configuration line:

switch(config)# username djadmin sshkey ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIEAy19oF6QaZl9G+3f1XswK3OiW4H7YyUyuA50rv7gsEPjhOBYmsi6PAVKui1nIf/DQhum+lJNqJP/eLowb7ubO+lVKRXFY/G+lJNIQW3g9igG30c6k6+XVn+NjnI1B7ihvpVh7dLddMOXwOnXHYshXmSiH3UD/vKyziEh5S4Tplx8=

The file based method is usually preferred, as they keys can be changed without modifying the configuration of the switch. Also, the keys are not stored in any archived copy of the configuration.
Note that the username and file name will vary depending on your organization's policies, procedures and standards

Default Value:

SSH keys are not created or defined by default."
  reference   : "800-171|3.5.3,800-53|IA-2(1),CIS_Recommendation|1.1.3,CN-L3|7.1.2.7(b),CSF|PR.AC-1,ITSG-33|IA-2(1),LEVEL|1M,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "username .+ sshkey .+"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.1 Ensure Idle Timeout for Login Sessions is set to 5 minutes - ssh idle-timeout"
  info        : "Verify device is configured to automatically disconnect sessions after a fixed idle time.

Rationale:

This prevents unauthorized users from misusing abandoned sessions. For example, if the network administrator leaves for the day and leaves a computer open with an enabled login session accessible. There is a trade-off here between security (shorter timeouts) and usability (longer timeouts). Review your local policies and operational needs to determine the best timeout value. In most cases, this should be no more than 10 minutes.

Impact:

Not having a timeout on idle sessions has several impacts:

Unattended sessions on an unlocked administrative workstation are susceptible to passers-by entering commands

If multiple sessions are exited by closing the session rather than logging out, the virtual sessions will remain active forever. When the maximum number of sessions is reached, additional administrative sessions will be denied.

If a console session is left open by simply disconnecting the console or USB cable, that session will remain available and logged in, in the state it was abandoned in for the next person who connects.

While a short timeout is typically desired, this can be changed temporarily during long-running operations (scheduled NX-OS updates for instance)."
  solution    : "Configure ssh and console timeouts to 120 seconds (2 minutes) to disconnect sessions after a fixed idle time.

switch(config)# ssh idle-timeout 120

switch(config) line console
switch(config-line)# exec-timeout 120

Default Value:

The default value for 'exec-timeout' is 0 (disabled) for both the vty and console lines"
  reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|1.2.1,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.5,ITSG-33|AC-12,LEVEL|1A,LEVEL|2A,NIAv2|NS49"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ssh idle-timeout ([1-9]|[1-9][0-9]|[12][0-9]{2}|300)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.1 Ensure Idle Timeout for Login Sessions is set to 5 minutes - console exec-timeout"
  info        : "Verify device is configured to automatically disconnect sessions after a fixed idle time.

Rationale:

This prevents unauthorized users from misusing abandoned sessions. For example, if the network administrator leaves for the day and leaves a computer open with an enabled login session accessible. There is a trade-off here between security (shorter timeouts) and usability (longer timeouts). Review your local policies and operational needs to determine the best timeout value. In most cases, this should be no more than 10 minutes.

Impact:

Not having a timeout on idle sessions has several impacts:

Unattended sessions on an unlocked administrative workstation are susceptible to passers-by entering commands

If multiple sessions are exited by closing the session rather than logging out, the virtual sessions will remain active forever. When the maximum number of sessions is reached, additional administrative sessions will be denied.

If a console session is left open by simply disconnecting the console or USB cable, that session will remain available and logged in, in the state it was abandoned in for the next person who connects.

While a short timeout is typically desired, this can be changed temporarily during long-running operations (scheduled NX-OS updates for instance)."
  solution    : "Configure ssh and console timeouts to 120 seconds (2 minutes) to disconnect sessions after a fixed idle time.

switch(config)# ssh idle-timeout 120

switch(config) line console
switch(config-line)# exec-timeout 120

Default Value:

The default value for 'exec-timeout' is 0 (disabled) for both the vty and console lines"
  reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|1.2.1,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv6|16.5,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,LEVEL|2A,NIAv2|NS49,PCI-DSSv3.1|8.1.8,PCI-DSSv3.1|12.3.8,PCI-DSSv3.2|8.1.8,PCI-DSSv3.2|12.3.8"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "line console"
  item        : "exec-timeout ([1-9]|[1-9][0-9]|[12][0-9]{2}|300)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.2 Restrict Access to VTY Sessions - VTY ACL"
  info        : "Restrict Management Access to trusted management stations and VLANs.

Rationale:

Exposing the management interface too broadly exposes that interface to MiTM (Monkey in the Middle) attacks as well as to credential stuffing attacks. The question 'should your receptionist have access to your core switch?' usually illustrates the need for this if there are any disagreements.

Impact:

Not restricting access to the management interface has several risks:

exposes your interface to credential stuffing attacks from commodity malware (such as Mirai)

highlights your device as missing simple security remediations to even simple scans. This invites other attacks in addition to credential stuffing.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Create an access-list that defines the various trusted subnets and/or stations:

switch(config)# ip access-list ACL-MGT
switch(config-acl)# remark access-class ACL
switch(config-acl)# permit ip 192.168.12.0/24 any
switch(config-acl)# deny ip any any log

It is suggested that all ACLs are commented to help self-document the configuration.
The last line in the ACL should read deny ip any any log to record all attempts to reach the management interface from unauthorized stations.
Apply the Access-Class to the VTY interface:

switch(config)# line vty
switch(config-line)# access-class ACL-MGT in

Default Value:

No access-class is applied by default"
  reference   : "CIS_Recommendation|1.2.2,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|1.2.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @ACL_VTY@ replaced with "acl-mgt" in field "context".
  context     : "ip access-list acl-mgt"
  item        : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.2 Restrict Access to VTY Sessions - line vty access-class"
  info        : "Restrict Management Access to trusted management stations and VLANs.

Rationale:

Exposing the management interface too broadly exposes that interface to MiTM (Monkey in the Middle) attacks as well as to credential stuffing attacks. The question 'should your receptionist have access to your core switch?' usually illustrates the need for this if there are any disagreements.

Impact:

Not restricting access to the management interface has several risks:

exposes your interface to credential stuffing attacks from commodity malware (such as Mirai)

highlights your device as missing simple security remediations to even simple scans. This invites other attacks in addition to credential stuffing."
  solution    : "Create an access-list that defines the various trusted subnets and/or stations:

switch(config)# ip access-list ACL-MGT
switch(config-acl)# remark access-class ACL
switch(config-acl)# permit ip 192.168.12.0/24 any
switch(config-acl)# deny ip any any log

It is suggested that all ACLs are commented to help self-document the configuration.
The last line in the ACL should read deny ip any any log to record all attempts to reach the management interface from unauthorized stations.
Apply the Access-Class to the VTY interface:

switch(config)# line vty
switch(config-line)# access-class ACL-MGT in

Default Value:

No access-class is applied by default"
  reference   : "CIS_Recommendation|1.2.2,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|1.2.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "line vty"
# Note: Variable @ACL_VTY@ replaced with "acl-mgt" in field "item".
  item        : "access-list acl-mgt in"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.1 Enable Password Complexity Requirements for Local Credentials"
  info        : "While configuring a back-end authentication store is the recommended configuration, at least one local administrative account must be configured. For this reason, ensuring a minimum bar for password strength for all local administrative accounts is important. Enabling this setting enforces passwords that conform to the following rules:

At least eight characters long

Does not contain many consecutive characters (such as 'abcd')

Does not contain many repeating characters (such as 'aaabbb')

Does not contain dictionary words

Does not contain proper names

Contains both uppercase and lowercase characters

Contains numbers

Rationale:

While in ideal conditions local credentials won't be used, there are many scenarios (such as deployed on a purely public network or on an air gapped network) where this is the only option. Even if a back-end authentication source is used, if that service is not available the fall-back authentication is often to local credentials.

Impact:

Having a simple password (for instance, based on a dictionary word) for administrative credentials makes that account susceptible to credential stuffing attacks. Even if using a back-end credential store such as TACACS+ or RADIUS, an attacker can drill down to the local credentials by taking the back-end service offline."
  solution    : "A single command enables this:

switch(config)# password strength-check

Default Value:

Password strength checking is enabled by default. When enabled, this setting does not appear in the configuration. When enabled, the password strength settings are:

At least eight characters long

Does not contain many consecutive characters (such as 'abcd')

Does not contain many repeating characters (such as 'aaabbb')

Does not contain dictionary words

Does not contain proper names

Contains both uppercase and lowercase characters

Contains numbers

Additional Information:

https://www.cisco.com/c/en/us/td/docs/switches/datacenter/sw/4_0/nx-os/security/configuration/guide/sec_nx-os_config/sec_rbac.html#wp1314939"
  reference   : "800-171|3.5.2,800-53|IA-5(1),CIS_Recommendation|1.3.1,CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "password strength-check"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.3 Set password lifetime, warning time and grace time for local credentials"
  info        : "NX-OS has commands to adjust the permitted lifetime of passphrases for local credentials, as well as the 'warning time' before expiry and the 'grace time' after expiry. If local credentials are in use, it is recommended that these be set to a value appropriate to the organization. Note that these timers cannot be set for the 'admin' credential.

Rationale:

Impact:

If local credentials are in regular use, it is recommended that a reasonable (non default) value be set for the passphrase timer values.
The default of an infinite lifetime is of course not appropriate. Previous guidance of password changes on 30 or 60 day cycles however is also not appropriate if complex passwords are used and enforced. Some middle ground should be set - for instance, a password change cycle on a 6 or 12 month rotation is often easy to track.

This entire discussion illustrates clearly why it is most often advisable to use a back-end authentication source for credential storage. In an organization that has multiple switches and other infrastructure, setting a password rotation is a recipe that has the risk of missing or entirely forgetting the change date, or of missing one or more devices in the change procedure. Since password recovery after the grace period involves a reboot of the entire switch, this end result is undesirable in the extreme.

The best recommendation is to set a long, complex password for any local administrative accounts, then use a back-end authentication source, so that these local accounts are only used in the event that the back-end authentication source is not reachable.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To set passphrase timers globally:

switch(config)# userpassphrase default-warntime <days>
switch(config)# userpassphrase default-gracetime <days>
switch(config)# userpassphrase default-lifetime <days>

example:

switch(config)# userpassphrase default-warntime 10
switch(config)# userpassphrase default-gracetime 10
switch(config)# userpassphrase default-lifetime 180

To set passphrase time values per-user:

switch(config)# username <userid> passphrase lifetime <days> warntime <time in days> gradetime <time in days>

example

switch(config)# username test passphrase lifetime 180 warntime 10 gracetime 10

Default Value:

By default, the passphrase time values per-user are:

Lifetime: 99999 (this value indicates no expiry, or an infinite lifetime)

Gracetime: 3 days

Warntime: 14 days

By default, there are no global default values set, they are assigned per local user as the local accounts are created.

By default the 'admin' account does not have any associated timers, and these values cannot be set for this account."
  reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIS_Recommendation|1.3.3,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "(username.*passphrase|userpassphrase.*)"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.4 Set password length for local credentials"
  info        : "Password length should be set to some value that makes compromising any captured hashed difficult. This generally means that the maximum value of 127 should never be changed, and that the minimum value, which defaults to 8, should always be increased. Typical values for minimum passphrase length of administrative users are generally 20 characters or longer (values of 30 or 32 are often seen).
A specific value is not recommended, since then a savvy attacker may start their attack with 'only passwords of the exact length recommended in the CIS benchmark', which would reduce their attack time.

Rationale:

Passwords are stored in a non-reversible, hashed and salted format. If an attacker should 'harvest' a password hash, it is of course hashed in a non-reversible format - however, it can be decoded using dictionary and/or brute-force attacks using tools such as hashcat or John the Ripper (JtR). The single best obstacle to an attack of this type is password length - the longer the password the more difficult it is to decode.
Since the default password hash schema on the NX-OS version 9 platform is MD5, it's recommended that the password length be set to (and enforced at) some longer value, for instance 24, 32 or even longer values. This may seem lengthy, until you consider that with modern hardware running through the entire namespace of 8 or 9 characters is often easily done in less than an hour.

This discussion actually illustrates why the best recommendation is to not use local credentials at all, but rather to use a back-end authentication source (using RADIUS or TACACS+). In this scenario, local administrative accounts are only used if the back-end authentication source is unavailable. This makes any compromised local credentials much harder to use, a successful attack would have to also take back end authentication sources offline (or make them otherwise unavailable).





Impact:

Not setting a maximum value leaves administrators with the freedom to set short passwords. If a stored configuration file is collected by an attacker (perhaps from a file share), this means that any password hashes in the stored configuration will be more likely to be 'cracked', giving the attacker the unencrypted credential to the target switch."
  solution    : "Passphrase length values can only be set globally, not per-local user

switch(config)# userpassphrase min-length <minimum passphrase length>
switch(config)# userpassphrase max-length <maximum passphrase length>

or in a single command:
userpassphrase min-length max-length
example:

switch(config)# userpassphrase min-length 20
switch(config)# userpassphrase max-length 127

Or in a single command:

switch(config)# userpassphrase min-length 20 max-length 127

Default Value:

The default minimum passphrase length is 8. This has possible values between 8 and 127. The default maximum passphrase length is 127. This has possible values between 80 and 127."
  reference   : "800-171|3.5.7,800-53|IA-5(1)(a),CIS_Recommendation|1.3.4,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @PASSWORD_MAX_LENGTH@ replaced with "127" in field "item".
# Note: Variable @PASSWORD_MIN_LENGTH@ replaced with "20" in field "item".
  item        : "userpassphrase min-length 20 max-length 127"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for snmp-server community"
      item        : "snmp-server community .+"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "1.4.1 If SNMPv2 is in use, use a Complex Community String"
      info        : "SNMP v2 while similar to v1 aside from adding support for 64 bit counters and the ability to use complex strings.

  Rationale:

  Utilizing complex strings with SNMPv2 is no different then using complex passwords. By using the complex string you are making it more difficult for an attacker to guess the string. Strings should not contain dictionary words or rely on 'l33t-speak' spelling. Keep in mind that SNMPv2 is a clear-text protocol, so is subject to interception. This means that these strings are passed in clear-text during SNMPv2 operations, so can be 'harvested' by a well-positioned attacker. Also SNMP results are susceptible to capture or modification in transit.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "switch(config)# snmp-server community <SomeComplexString> ro"
      reference   : "CIS_Recommendation|1.4.1,CSCv7|5.1,LEVEL|1M,PCI-DSSv3.2|2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server community .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.4.2 If SNMPv2 is in use, set Restrictions on Access - ACL"
      info        : "NX-OS allows administrators to restrict SNMPv2 access to known management stations, usually servers with an NMS (Network Management System) installed. It is recommended that only known NMS servers have access to SNMPv2 functions on network infrastructure. While SNMP is not enabled by default on the NX-OS platform, historically the SNMP strings of 'public' (for read-only access) and 'private' (for read-write access) have been used. These well-known values should never be configured.

  Rationale:

  Since SNMPv2 is a clear-text UDP protocol, this combination means that even this precaution still exposes this traffic to spoofing, eavesdropping and in-flight modification attacks. It also means that the switch can be used as a DDOS amplification host if the NMS server's IP address is known.

  For all of these reasons, the best recommendation is in fact to disable SNMPv2 and use SNMPv3. Proceed with this recommendation only if you must use SNMPv2 for some reason.

  Impact:

  If SNMPv2 is configured, not restricting access to SNMPv2 allows an attacker to launch a dictionary and/or a brute force attack to compromise the SNMPv2 community string. This would then give the attacker the ability to collect key information from the target switch, including it's version, interface status and configuration parameters.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create the ACL:

  switch(config)# ip access-list ACL-IPV4-SNMPv2
  switch(config-acl)# permit udp 1.2.3.4/2 1.2.3.6/32 eq 161
  switch(config-acl)# deny ip any any log

  Then apply the ACL to the configured SNMP Community. The snmp-server community must be configured before applying the ACL.

  switch(config)# snmp-server community <somecomplexstring> ro
  switch(config)# snmp-server community <somecomplexstring> use-ipv4acl ACL-IPV4-SNMPV2

  For IPv6, the parameter 'use-ipv6acl' would be used instead. Note that either an IPv4 OR an IPv6 ACL can be applied to a given SNMP community string, not both.
  In releases prior to Cisco NX-OS Release 7.0(3)I4(1), this CLI command includes use-acl rather than use-ipv4acl.

  Default Value:

  By default SNMP is not configured on NX-OS platforms."
      reference   : "CIS_Recommendation|1.4.2,CSCv7|4.6,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,PCI-DSSv3.2|1.2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @SNMPV2_ACL@ replaced with "ACL-SNMPv2" in field "context".
      context     : "ip access-list ACL-SNMPv2"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.4.2 If SNMPv2 is in use, set Restrictions on Access - snmp-server"
      info        : "NX-OS allows administrators to restrict SNMPv2 access to known management stations, usually servers with an NMS (Network Management System) installed. It is recommended that only known NMS servers have access to SNMPv2 functions on network infrastructure. While SNMP is not enabled by default on the NX-OS platform, historically the SNMP strings of 'public' (for read-only access) and 'private' (for read-write access) have been used. These well-known values should never be configured.

  Rationale:

  Since SNMPv2 is a clear-text UDP protocol, this combination means that even this precaution still exposes this traffic to spoofing, eavesdropping and in-flight modification attacks. It also means that the switch can be used as a DDOS amplification host if the NMS server's IP address is known.

  For all of these reasons, the best recommendation is in fact to disable SNMPv2 and use SNMPv3. Proceed with this recommendation only if you must use SNMPv2 for some reason.

  Impact:

  If SNMPv2 is configured, not restricting access to SNMPv2 allows an attacker to launch a dictionary and/or a brute force attack to compromise the SNMPv2 community string. This would then give the attacker the ability to collect key information from the target switch, including it's version, interface status and configuration parameters."
      solution    : "Create the ACL:

  switch(config)# ip access-list ACL-IPV4-SNMPv2
  switch(config-acl)# permit udp 1.2.3.4/2 1.2.3.6/32 eq 161
  switch(config-acl)# deny ip any any log

  Then apply the ACL to the configured SNMP Community. The snmp-server community must be configured before applying the ACL.

  switch(config)# snmp-server community <somecomplexstring> ro
  switch(config)# snmp-server community <somecomplexstring> use-ipv4acl ACL-IPV4-SNMPV2

  For IPv6, the parameter 'use-ipv6acl' would be used instead. Note that either an IPv4 OR an IPv6 ACL can be applied to a given SNMP community string, not both.
  In releases prior to Cisco NX-OS Release 7.0(3)I4(1), this CLI command includes use-acl rather than use-ipv4acl.

  Default Value:

  By default SNMP is not configured on NX-OS platforms."
      reference   : "CIS_Recommendation|1.4.2,CSCv7|4.6,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,PCI-DSSv3.2|2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @SNMPV2_ACL@ replaced with "ACL-SNMPv2" in field "item".
      item        : "snmp-server community .+ (use-acl|use-ipv(4|6)acl) ACL-SNMPv2"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.4.1 If SNMPv2 is in use, use a Complex Community String"
      info        : "SNMP v2 while similar to v1 aside from adding support for 64 bit counters and the ability to use complex strings.

  Rationale:

  Utilizing complex strings with SNMPv2 is no different then using complex passwords. By using the complex string you are making it more difficult for an attacker to guess the string. Strings should not contain dictionary words or rely on 'l33t-speak' spelling. Keep in mind that SNMPv2 is a clear-text protocol, so is subject to interception. This means that these strings are passed in clear-text during SNMPv2 operations, so can be 'harvested' by a well-positioned attacker. Also SNMP results are susceptible to capture or modification in transit.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "switch(config)# snmp-server community <SomeComplexString> ro"
      reference   : "CIS_Recommendation|1.4.1,CSCv7|5.1,LEVEL|1M,PCI-DSSv3.2|2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.4.2 If SNMPv2 is in use, set Restrictions on Access - ACL"
      info        : "NX-OS allows administrators to restrict SNMPv2 access to known management stations, usually servers with an NMS (Network Management System) installed. It is recommended that only known NMS servers have access to SNMPv2 functions on network infrastructure. While SNMP is not enabled by default on the NX-OS platform, historically the SNMP strings of 'public' (for read-only access) and 'private' (for read-write access) have been used. These well-known values should never be configured.

  Rationale:

  Since SNMPv2 is a clear-text UDP protocol, this combination means that even this precaution still exposes this traffic to spoofing, eavesdropping and in-flight modification attacks. It also means that the switch can be used as a DDOS amplification host if the NMS server's IP address is known.

  For all of these reasons, the best recommendation is in fact to disable SNMPv2 and use SNMPv3. Proceed with this recommendation only if you must use SNMPv2 for some reason.

  Impact:

  If SNMPv2 is configured, not restricting access to SNMPv2 allows an attacker to launch a dictionary and/or a brute force attack to compromise the SNMPv2 community string. This would then give the attacker the ability to collect key information from the target switch, including it's version, interface status and configuration parameters.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create the ACL:

  switch(config)# ip access-list ACL-IPV4-SNMPv2
  switch(config-acl)# permit udp 1.2.3.4/2 1.2.3.6/32 eq 161
  switch(config-acl)# deny ip any any log

  Then apply the ACL to the configured SNMP Community. The snmp-server community must be configured before applying the ACL.

  switch(config)# snmp-server community <somecomplexstring> ro
  switch(config)# snmp-server community <somecomplexstring> use-ipv4acl ACL-IPV4-SNMPV2

  For IPv6, the parameter 'use-ipv6acl' would be used instead. Note that either an IPv4 OR an IPv6 ACL can be applied to a given SNMP community string, not both.
  In releases prior to Cisco NX-OS Release 7.0(3)I4(1), this CLI command includes use-acl rather than use-ipv4acl.

  Default Value:

  By default SNMP is not configured on NX-OS platforms."
      reference   : "CIS_Recommendation|1.4.2,CSCv7|4.6,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,PCI-DSSv3.2|1.2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.4.2 If SNMPv2 is in use, set Restrictions on Access - snmp-server"
      info        : "NX-OS allows administrators to restrict SNMPv2 access to known management stations, usually servers with an NMS (Network Management System) installed. It is recommended that only known NMS servers have access to SNMPv2 functions on network infrastructure. While SNMP is not enabled by default on the NX-OS platform, historically the SNMP strings of 'public' (for read-only access) and 'private' (for read-write access) have been used. These well-known values should never be configured.

  Rationale:

  Since SNMPv2 is a clear-text UDP protocol, this combination means that even this precaution still exposes this traffic to spoofing, eavesdropping and in-flight modification attacks. It also means that the switch can be used as a DDOS amplification host if the NMS server's IP address is known.

  For all of these reasons, the best recommendation is in fact to disable SNMPv2 and use SNMPv3. Proceed with this recommendation only if you must use SNMPv2 for some reason.

  Impact:

  If SNMPv2 is configured, not restricting access to SNMPv2 allows an attacker to launch a dictionary and/or a brute force attack to compromise the SNMPv2 community string. This would then give the attacker the ability to collect key information from the target switch, including it's version, interface status and configuration parameters."
      solution    : "Create the ACL:

  switch(config)# ip access-list ACL-IPV4-SNMPv2
  switch(config-acl)# permit udp 1.2.3.4/2 1.2.3.6/32 eq 161
  switch(config-acl)# deny ip any any log

  Then apply the ACL to the configured SNMP Community. The snmp-server community must be configured before applying the ACL.

  switch(config)# snmp-server community <somecomplexstring> ro
  switch(config)# snmp-server community <somecomplexstring> use-ipv4acl ACL-IPV4-SNMPV2

  For IPv6, the parameter 'use-ipv6acl' would be used instead. Note that either an IPv4 OR an IPv6 ACL can be applied to a given SNMP community string, not both.
  In releases prior to Cisco NX-OS Release 7.0(3)I4(1), this CLI command includes use-acl rather than use-ipv4acl.

  Default Value:

  By default SNMP is not configured on NX-OS platforms."
      reference   : "CIS_Recommendation|1.4.2,CSCv7|4.6,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,PCI-DSSv3.2|2.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"OR">
    <item>
      type        : CONFIG_CHECK
      description : "Check for SNMPv3 engineID"
      item        : "snmp-server engineID remote .+"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "Check for SNMPv3 group v3"
      item        : "snmp-server group .+ v3 .+"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "1.4.3 Configure SNMPv3 - group v3"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "CIS_Recommendation|1.4.3,CSCv7|11.5,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|7.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server group .+ v3 .+"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.4.3 Configure SNMPv3 - engineID"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.4.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|11.5,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server engineID remote .+"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.4.3 Configure SNMPv3 - group v3"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "CIS_Recommendation|1.4.3,CSCv7|11.5,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|7.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.4.3 Configure SNMPv3 - engineID"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.4.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|11.5,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "1.4.4 Configure SNMP Traps"
  info        : "SNMP relies on an architecture which consists of a manager and an agent. SNMP Managers can be any machine on the network that is running SNMP to collect and process information from the devices on either the LAN or WAN.

Rationale:

Utilizing traps can alert the user of issues or compromises in advance. For example if the device is overheating or if an admin users account is being utilized during odd hours."
  solution    : "Examples of traps
All notifications

switch(config)##switch(config)#snmp-server enable traps

CISCO-AAA-SERVER-MIB

switch(config)#switch(config)#snmp-server enable traps aaa

ENITY-MIB, CISCO-ENTITY-FRU-CONTROL-MIB, CISCO-ENTITY-SENSOR-MIB

switch(config)#switch(config)#snmp-server enable traps entity
switch(config)#switch(config)#snmp-server enable traps entity fru

CISCO-LICENSE-MGR-MIB

switch(config)#switch(config)#snmp-server enable traps license

IF-MIB

switch(config)#switch(config)#snmp-server enable traps link
switch(config)#CISCO-PSM-MIB
switch(config)#switch(config)#snmp-server enable traps port-security
switch(config)#snmpv2-MIB
switch(config)#switch(config)#snmp-server enable traps switch(config)#snmp
switch(config)#switch(config)#snmp-server enable traps switch(config)#snmp authentication

CISCO-FCC-MIB

switch(config)##switch(config)#snmp-server enable traps fcc

CISCO-DM-MIB

switch(config)#snmp-server enable traps fcdomain

CISCO-NS-MIB

switch(config)#snmp-server enable traps fcns

CISCO-FCS-MIB

switch(config)#snmp-server enable traps fcs discovery-complete
switch(config)#snmp-server enable traps fcs request-reject

CISCO-FDMI-MIB

switch(config)#snmp-server enable traps fdmi

CISCO-FSPF-MIB

switch(config)#snmp-server enable traps fspf

CISCO-PSM-MIB

switch(config)#snmp-server enable traps port-security

CISCO-RSCN-MIB

switch(config)#snmp-server enable traps rscn
switch(config)#snmp-server enable traps rscn els
switch(config)#snmp-server enable traps rscn ils

CISCO-ZS-MIB

switch(config)#snmp-server enable traps zone
switch(config)#snmp-server enable traps zone default-zone-behavior-change
switch(config)#snmp-server enable traps zone merge-failure
switch(config)#snmp-server enable traps zone merge-success
switch(config)#snmp-server enable traps zone request-reject
switch(config)#snmp-server enable traps zone unsupp-mem

Default Value:

Not configured"
  reference   : "800-171|3.4.2,800-53|CM-6.,CIS_Recommendation|1.4.4,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|12.5.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server enable traps .+"
  required    : NO
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.4.5 Configure SNMP Source Interface for Traps - snmp-server host"
  info        : "The administrator can configure SNMP to the interfaces source IP address for notifications

Rationale:

By using a source interface the administrator can ensure that the source IP of SNMP traps does not change as the network topology changes. For instance, if a link fails or is reconfigured, and a different IP address is now topologically 'closer' to the SNMP trap server. There are a few typical candidates for an SNMP source IP address:

A loopback address, as loopbacks are always up, and can then route over any transit interface.

The MGMT 0 address, as that provides an out-of-band path to the SNMP server. SNMP traffic volume will not affect traffic volumes, and SNMP cannot be 'starved' for bandwidth by production traffic. If the entire path is out-of-band, this also provides excellent protection from eavesdropping by malicious actors that may be on the 'production data side' of the switch.

A combination of the two (this is less common) - for instance a loopback address in the management VRF"
  solution    : "switch(config)# snmp-server host 1.2.3.4 source-interface mgmt 0

or

switch(config)# snmp-server host 1.2.3.4 source-interface loopback 0

SNMP Server traps or informs:

switch(config)# snmp-server source-interface traps loopback 0
switch(config)# snmp-server source-interface informs loopback 0

or

switch(config)# snmp-server source-interface traps mgmt 0
switch(config)# snmp-server source-interface informs mgmt 0

Default Value:

Not configured. By default SNMP traffic is sourced from the layer 3 interface that is topologically closest to the configured SNMP server"
  reference   : "CIS_Recommendation|1.4.5,CSCv7|5.1,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server host .+ source-interface .+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.4.5 Configure SNMP Source Interface for Traps - snmp-server traps/informs"
  info            : "The administrator can configure SNMP to the interfaces source IP address for notifications

Rationale:

By using a source interface the administrator can ensure that the source IP of SNMP traps does not change as the network topology changes. For instance, if a link fails or is reconfigured, and a different IP address is now topologically 'closer' to the SNMP trap server. There are a few typical candidates for an SNMP source IP address:

A loopback address, as loopbacks are always up, and can then route over any transit interface.

The MGMT 0 address, as that provides an out-of-band path to the SNMP server. SNMP traffic volume will not affect traffic volumes, and SNMP cannot be 'starved' for bandwidth by production traffic. If the entire path is out-of-band, this also provides excellent protection from eavesdropping by malicious actors that may be on the 'production data side' of the switch.

A combination of the two (this is less common) - for instance a loopback address in the management VRF"
  solution        : "switch(config)# snmp-server host 1.2.3.4 source-interface mgmt 0

or

switch(config)# snmp-server host 1.2.3.4 source-interface loopback 0

SNMP Server traps or informs:

switch(config)# snmp-server source-interface traps loopback 0
switch(config)# snmp-server source-interface informs loopback 0

or

switch(config)# snmp-server source-interface traps mgmt 0
switch(config)# snmp-server source-interface informs mgmt 0

Default Value:

Not configured. By default SNMP traffic is sourced from the layer 3 interface that is topologically closest to the configured SNMP server"
  reference       : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.4.5,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "snmp-server source-interface (traps|informs) .+"
  min_occurrences : "2"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "1.4.6 Do not Configure a Read Write SNMP Community String"
  info        : "SNMP RW (Read-Write) access allows stations with Management access to both read and write SNMP MIB objects.

Rationale:

SNMP is typically used for monitoring specific operational characteristics of the switch. These tasks typically only require read access. Permitting RW (Read-Write) access permits SNMP to modify some SNMP values.

Impact:

Permitting SNMP RW Access not only allows 'write' access to some SNMP MIB Objects, which allows a malicious attacker to modify some operational characterstics of the switch. By extension this access allows a malicious actor to collect the entire configuration of the device."
  solution    : "Only use RO groups for SNMPv2. The most common implementation is 'network-operator', because if you use the legacy syntax:

switch(config)# snmp-server community <some complex string> ro

the switch will translate this to the new syntax, using 'network-operator' group

switch(config)# snmp-server community <some complex string> group network-operator

Default Value:

SNMP is not configured by default. The default SNMP Groups and permissions are:

switch# sho snmp group



Role: aaa-db-admin

  Description: Predefined AAA DB admin, has no cli permissions. Allows RESTful A

PI

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: aaa-db-operator

  Description: Predefined AAA DB operator, has no cli permissions. Allows RESTfu

l API

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: l3-db-admin

  Description: Predefined L3 DB admin, has no cli permissions. Allows RESTful AP

I

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: l3-db-operator

  Description: Predefined L3 DB operator, has no cli permissions. Allows RESTful

 API

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: network-admin

  Description: Predefined network admin role has access to all commands

  on the switch

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: network-operator

  Description: Predefined network operator role has access to all read

  commands on the switch

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: nxdb-admin

  Description: Predefined nxdb-admin role has no cli permissions.

  Allows json-rpc get and set.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       deny    command



Role: nxdb-operator

  Description: Predefined nxdb-operator role has no cli permissions.

  Allows json-rpc get.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       deny    command



Role: vdc-admin

  Description: Predefined vdc admin role has access to all commands within

  a VDC instance

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: vdc-operator

  Description: Predefined vdc operator role has access to all read commands

  within a VDC instance

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: dev-ops

  Description: Predefined system role for devops access. This role

  cannot be modified.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  6       permit  command                         conf t ; username *

  5       permit  command                         attach module *

  4       permit  command                         slot *

  3       permit  command                         bcm module *

  2       permit  command                         run bash *

  1       permit  command                         python *



Role: priv-15

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: priv-14

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: priv-13

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-12

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-11

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-10

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-9

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-8

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-7

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-6

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-5

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-4

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-3

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-2

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-1

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-0

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  10      permit  command                         traceroute6 *

  9       permit  command                         traceroute *

  8       permit  command                         telnet6 *

  7       permit  command                         telnet *

  6       permit  command                         ping6 *

  5       permit  command                         ping *

  4       permit  command                         ssh6 *

  3       permit  command                         ssh *

  2       permit  command                         enable *

  1       permit  read"
  reference   : "800-171|3.1.5,800-53|AC-6.,CIS_Recommendation|1.4.6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|9.2,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1M,LEVEL|2M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server community .+ (rw|group network-admin)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.5.1 Ensure Syslog Logging is configured - logging server/source-interface"
  info        : "Logging should be configured such that: Logging level is set to a level sufficient for the target device Logs should be sent off the device to a syslog or trap server or servers Logs should be sourced from a consistent interface to ensure easy attribution of logs to the correct device Logging levels should be explicitly set to a level appropriate to the device.

Rationale:

Logging on any network device is always limited by how much storage can be set aside for logs. It's important for this reason to send all log entries to a central device that can collect and correlate all logs, either in a database or in flat text files. The key thing this approach contributes is central logs on a larger storage device (disk) Logging to an off-device target also makes clearing any incriminating logs more difficult for an attacker, or if an attempt is made to hide a mistake.
Logging off-device also ensures that any clearing of logs is also seen and can be alerted on. Sourcing all logs from a consistent interface ensures that log entries can be easily attributed to the correct device once they arrive at the log server. If a logging interface is not set, the source IP address of individual log entries can change as the network topology changes. This situation can make any subsequent log analysis more difficult.

Impact:

Because syslog traffic is not encrypted, it's recommended to ensure that the path the log traffic takes is not susceptible to any MiTM (Monkey in the Middle) attacks. Often this means assigning a dedicated management interface, which by default is in a separate VRF."
  solution    : "Configure a logging level and a syslog host:

switch(config)#logging server <server ip address or name>
switch(config)#logging level <service name> <logging level>

or

switch(config)#logging level all <logging level>
switch(config)#logging source-interface <interface name>
switch(config)#logging server <server ip address or name>

optionally:

switch(config)#logging server <server ip address or name>  vrf [management vrf name]
switch(config)#logging source-interface <mgmt 0 or other dedicated management interface>

Default Value:

By default syslog logging is not configured.

By default the source interface of all logs will be the interface in the 'default' vrf that is topologically closest to the logging host, if defined.

By default, the logging levels (by service or feature) are shown below:

switch# sho logging level



Facility        Default Severity        Current Session Severity

--------        ----------------        ------------------------

aaa                     3                       3

acllog                  2                       2

aclmgr                  3                       3

aclqos                  5                       5

adbm                    2                       2

arp                     3                       3

auth                    0                       0

authpriv                3                       3

bootvar                 5                       5

callhome                2                       2

capability              2                       2

cdp                     2                       2

cert_enroll             2                       2

cfs                     3                       3

clis                    3                       3

clk_mgr                 2                       2

confcheck               2                       2

copp                    2                       2

cron                    3                       3

daemon                  3                       3

device_test             3                       3

dhclient                2                       2

dhcp_snoop              2                       2

diag_port_lb            2                       2

diagclient              2                       2

diagmgr                 2                       2

ecp                     5                       5

eltm                    2                       2

eth_port_channel        5                       5

ethpm                   5                       5

evmc                    5                       5

evms                    2                       2

feature-mgr             2                       2

fs-daemon               2                       2

ftp                     3                       3

ifmgr                   5                       5

igmp_1                  5                       5

interface-vlan          2                       2

ip                      3                       3

ipfib                   2                       2

ipqosmgr                4                       4

ipv6                    3                       3

kern                    3                       3

l2fm                    2                       2

l2pt                    3                       3

l3vm                    5                       5

lacp                    2                       2

licmgr                  6                       6

lldp                    2                       2

local0                  3                       3

local1                  3                       3

local2                  3                       3

local3                  3                       3

local4                  3                       3

local5                  3                       3

local6                  3                       3

local7                  3                       3

lpr                     3                       3

m2rib                   2                       2

m6rib                   5                       5

mail                    3                       3

mcm                     2                       2

mfdm                    2                       2

mmode                   2                       2

module                  5                       5

monitor                 3                       3

mrib                    5                       5

mvsh                    2                       2

news                    3                       3

ntp                     2                       2

otm                     3                       3

pfstat                  2                       2

pixm_gl                 4                       4

pixm_vl                 4                       4

platform                5                       5

plcmgr                  2                       2

plugin                  2                       2

port-profile            2                       2

radius                  3                       3

res_mgr                 5                       5

rpm                     5                       5

sal                     2                       2

scheduler               5                       5

securityd               3                       3

sflow                   2                       2

sksd                    3                       3

smm                     4                       4

snmpd                   2                       2

span                    3                       3

spm                     2                       2

stp                     3                       3

syslog                  3                       3

sysmgr                  3                       3

tamnw                   2                       2

telemetry               3                       3

template_manager        2                       2

u6rib                   5                       5

ufdm                    3                       3

urib                    5                       5

user                    3                       3

uucp                    3                       3

vdc_mgr                 6                       6

virtual-service         5                       5

vlan_mgr                2                       2

vshd                    5                       5

xbar                    5                       5

xmlma                   3                       3



0(emergencies)          1(alerts)       2(critical)

3(errors)               4(warnings)     5(notifications)

6(information)          7(debugging)"
  reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.1,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging (server|source-interface) .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.5.1 Ensure Syslog Logging is configured - logging level"
  info        : "Logging should be configured such that: Logging level is set to a level sufficient for the target device Logs should be sent off the device to a syslog or trap server or servers Logs should be sourced from a consistent interface to ensure easy attribution of logs to the correct device Logging levels should be explicitly set to a level appropriate to the device.

Rationale:

Logging on any network device is always limited by how much storage can be set aside for logs. It's important for this reason to send all log entries to a central device that can collect and correlate all logs, either in a database or in flat text files. The key thing this approach contributes is central logs on a larger storage device (disk) Logging to an off-device target also makes clearing any incriminating logs more difficult for an attacker, or if an attempt is made to hide a mistake.
Logging off-device also ensures that any clearing of logs is also seen and can be alerted on. Sourcing all logs from a consistent interface ensures that log entries can be easily attributed to the correct device once they arrive at the log server. If a logging interface is not set, the source IP address of individual log entries can change as the network topology changes. This situation can make any subsequent log analysis more difficult.

Impact:

Because syslog traffic is not encrypted, it's recommended to ensure that the path the log traffic takes is not susceptible to any MiTM (Monkey in the Middle) attacks. Often this means assigning a dedicated management interface, which by default is in a separate VRF."
  solution    : "Configure a logging level and a syslog host:

switch(config)#logging server <server ip address or name>
switch(config)#logging level <service name> <logging level>

or

switch(config)#logging level all <logging level>
switch(config)#logging source-interface <interface name>
switch(config)#logging server <server ip address or name>

optionally:

switch(config)#logging server <server ip address or name>  vrf [management vrf name]
switch(config)#logging source-interface <mgmt 0 or other dedicated management interface>

Default Value:

By default syslog logging is not configured.

By default the source interface of all logs will be the interface in the 'default' vrf that is topologically closest to the logging host, if defined.

By default, the logging levels (by service or feature) are shown below:

switch# sho logging level



Facility        Default Severity        Current Session Severity

--------        ----------------        ------------------------

aaa                     3                       3

acllog                  2                       2

aclmgr                  3                       3

aclqos                  5                       5

adbm                    2                       2

arp                     3                       3

auth                    0                       0

authpriv                3                       3

bootvar                 5                       5

callhome                2                       2

capability              2                       2

cdp                     2                       2

cert_enroll             2                       2

cfs                     3                       3

clis                    3                       3

clk_mgr                 2                       2

confcheck               2                       2

copp                    2                       2

cron                    3                       3

daemon                  3                       3

device_test             3                       3

dhclient                2                       2

dhcp_snoop              2                       2

diag_port_lb            2                       2

diagclient              2                       2

diagmgr                 2                       2

ecp                     5                       5

eltm                    2                       2

eth_port_channel        5                       5

ethpm                   5                       5

evmc                    5                       5

evms                    2                       2

feature-mgr             2                       2

fs-daemon               2                       2

ftp                     3                       3

ifmgr                   5                       5

igmp_1                  5                       5

interface-vlan          2                       2

ip                      3                       3

ipfib                   2                       2

ipqosmgr                4                       4

ipv6                    3                       3

kern                    3                       3

l2fm                    2                       2

l2pt                    3                       3

l3vm                    5                       5

lacp                    2                       2

licmgr                  6                       6

lldp                    2                       2

local0                  3                       3

local1                  3                       3

local2                  3                       3

local3                  3                       3

local4                  3                       3

local5                  3                       3

local6                  3                       3

local7                  3                       3

lpr                     3                       3

m2rib                   2                       2

m6rib                   5                       5

mail                    3                       3

mcm                     2                       2

mfdm                    2                       2

mmode                   2                       2

module                  5                       5

monitor                 3                       3

mrib                    5                       5

mvsh                    2                       2

news                    3                       3

ntp                     2                       2

otm                     3                       3

pfstat                  2                       2

pixm_gl                 4                       4

pixm_vl                 4                       4

platform                5                       5

plcmgr                  2                       2

plugin                  2                       2

port-profile            2                       2

radius                  3                       3

res_mgr                 5                       5

rpm                     5                       5

sal                     2                       2

scheduler               5                       5

securityd               3                       3

sflow                   2                       2

sksd                    3                       3

smm                     4                       4

snmpd                   2                       2

span                    3                       3

spm                     2                       2

stp                     3                       3

syslog                  3                       3

sysmgr                  3                       3

tamnw                   2                       2

telemetry               3                       3

template_manager        2                       2

u6rib                   5                       5

ufdm                    3                       3

urib                    5                       5

user                    3                       3

uucp                    3                       3

vdc_mgr                 6                       6

virtual-service         5                       5

vlan_mgr                2                       2

vshd                    5                       5

xbar                    5                       5

xmlma                   3                       3



0(emergencies)          1(alerts)       2(critical)

3(errors)               4(warnings)     5(notifications)

6(information)          7(debugging)"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-2c.,CIS_Recommendation|1.5.1,CN-L3|8.1.4.3(a),CSCv7|6.3,CSF|PR.PT-1,ITSG-33|AU-2c.,LEVEL|1M,LEVEL|2M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging level (all .+|.+ .+)"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.5.2 Log all Successful and Failed Administrative Logins"
  info            : "By default failed logins are logged, but successful logins are not logged. This makes any configuration changes or successful malicious activity difficult to correctly attribute.

Rationale:

Logging of all device login attempts allows the security team to investigate all login attempts and successful logins as needed. In some organizations and for some switches, even successful logins will be configured to generate an alert that must be compared against authorized changes or assigned tickets. Without logging both successful and failed logins, several important components of any investigation may not be easily available for any subsequent investigation or analysis (userids, source IP addresses, login times and so on).

Impact:

Not logging successful logins means that unauthorized changes will be more difficult to attribute to the right person. It also means that otherwise suspicious logins (either because of the time of login, the source IP or other indicator) are not logged for further investigation. Logging successful logins means that any configuration errors that result in a service outage can also be attributed. Not logging unsuccessful logins means that brute force login attempts are not logged."
  solution        : "switch(config)# login on-failure log  ! set correctly by default
switch(config)# login on-success log

Note that login on-failure is set by default, so will not show in the configuration if properly set.

Default Value:

By default failed logins are logged and successful logins are not logged."
  reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.5.2,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|4.9,CSCv7|16.12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,LEVEL|2A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "login on-(failure|success) log"
  min_occurrences : "2"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature netflow"
      item        : "^feature netflow"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "1.5.3 Configure Netflow on Strategic Ports"
      info        : "Netflow allows for detailed logging of transit traffic. For a Layer 3 Netflow configuration, this outlines several values identified as 'keys': source and destination ports and protocols, source and destination IP addresses as well as traffic volumes in any combination. Sometimes QOS values (TOS bits only) is also used as a key. Each combination of Protocol, source port, destination port, source IP, destination IP is called a 'tuple'. The possible keys in a Layer 2 Tuple include source mac address, destination mac address, ethertype and vlan.

  In most cases logging to this level is not recommended for all ports of an NX-OS device, with 10G or faster ports there is just too much data to log and process in a meaningful way, even with sampling (which is required).

  However, for strategic ports (for instance, something facing a WAN link or traffic constrained server) this can be a good tool for troubleshooting. This sort of logging does take a fair amount of host resources, so if there is an upstream firewall or router, that device is often better suited to be a Netflow initiator, but if for instance the upstream device is owned by a carrier or a client, or is a host that needs this sort of telemetry, most NX-OS devices are certainly capable of providing Netflow telemetry.

  On many NX-OS platforms only inbound Netflow is supported.

  Rationale:

  Impact:

  If monitored graphically, often just a visual inspection of the netflow graphs will highlight anomalous traffic. For instance, a high volume exfiltration from a database server would show a spike of traffic from that database server to a host on the internet (which in most environments is not a normal pattern).

  In many cases the netflow database can be queried directly, so anomalies can be queried for programmatically. However, coding 'what is not normal' is not something that is easily done in procedural languages. AI or ML frameworks such as TensorFlow may be helpful in this situation.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If needed, either Layer 3 or Layer 2 netflow can be configured.
  Layer 3 IP and IPv6 flow monitors can be applied to VLANs, SVIs, Layer 3 routed interfaces or subinterfaces.
  Layer 2 flow monitors can be applied to a physical interface or trunks
  L3 netflow - typical application to a VLAN is shown
  First, enable the netflow feature:

  switch(config)#feature netflow

  The flow record defines what data to record and export. Typical settings are shown, the important thing is that a valid flow record setting exists:

  switch(config)# flow-record FLOW-RECORD
  switch(config-flow-record)#  match ipv4 protocol
  switch(config-flow-record)#  match ipv4 source address
  switch(config-flow-record)#  match ipv4 destination address
  switch(config-flow-record)#  match transport source-port
  switch(config-flow-record)#  match transport destination-port
  switch(config-flow-record)#  collect routing source as
  switch(config-flow-record)#  collect routing destination as
  switch(config-flow-record)#  collect transport tcp flags
  switch(config-flow-record)#  collect counter bytes
  switch(config-flow-record)#  collect counter packets

  The flow exporter defines the destination and options around sent data. Again, the specific values are not important. The VRF can be specified in the 'destination' line if needed.:

  switch(config)# flow exporter FLOW-EXPORT
  switch(config-flow-exporter)# transport udp 9996
  switch(config-flow-exporter)# destination 10.10.10.10
  switch(config-flow-exporter)# source mgmt 0
  switch(config-flow-exporter)# version 9
  switch(config-flow-exporter-version-9)# option exporter-stats timeout 120
  switch(config-flow-exporter-version-9)# option interface-table timeout 120

  The flow monitor 'ties' the exporter and record together:

  switch(config)# flow monitor FLOW-MONITOR
  switch(config-flow-monitor)# exporter FLOW-EXPORT
  switch(config-flow-monitor)#  record FLOW-RECORD

  The sampling rate, 'x packets out of y' can also be defined. Both should be a power of 2 (for instance, 8 out-of 64 is a valid combination)

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode 8 out-of 64

  Finally, apply the monitor and optionally the sampler to a layer 3 interface:

  switch(config-flow-monitor)# int vlan <interface number>
  10GCORE01(config-if)# ip flow monitor FLOW-MONITOR input sampler FLOWSAMPLER01

  =======================================
  **L2 netflow - typical application to physical interface shown **
  Because if it's reliance on MAC Addresses, L2 netflow implementations are much less often used

  switch(config)#feature netflow

  The exporter configuration remains the same as L3:

  switch(config)# flow exporter L2_FLOWEXPORTER01
  switch(config-flow-exporter)# destination <netflow server ip> [use-vrf management]
  switch(config-flow-exporter)# transport udp <netflow port>
  switch(config-flow-exporter)# source mgmt0
  switch(config-flow-exporter)# version 9

  The flow record reflects different (layer 2) tuple inputs:

  switch(config)# flow record L2_FLOWRECORD01
  switch(config-flow-record)#  match datalink ethertype
  switch(config-flow-record)#  match datalink mac source-address
  switch(config-flow-record)#  match datalink mac destination-address
  switch(config-flow-record)#  match datalink vlan

  The flow monitor remains similar:

  switch(config)# flow monitor L2_FLOWMONITOR01
  switch(config-flow-monitor)# record L2_FLOWRECORD01
  switch(config-flow-monitor)# exporter L2_FLOWEXPORTER01

  The flow sampler commands remain the same

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode <x> out-of <y>

  Finally, apply the L2 definition to an L2 interface:

  switch(config)# int Ethernet x/yy
  switch(config-if)# layer2-switched flow monitor L2_FLOWMONITOR01 input sampler FLOWSAMPLER01

  Default Value:

  Netflow is not defined by default."
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "flow (exporter|record|monitor)"
      item        : ".*"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.5.3 Configure Netflow on Strategic Ports"
      info        : "Netflow allows for detailed logging of transit traffic. For a Layer 3 Netflow configuration, this outlines several values identified as 'keys': source and destination ports and protocols, source and destination IP addresses as well as traffic volumes in any combination. Sometimes QOS values (TOS bits only) is also used as a key. Each combination of Protocol, source port, destination port, source IP, destination IP is called a 'tuple'. The possible keys in a Layer 2 Tuple include source mac address, destination mac address, ethertype and vlan.

  In most cases logging to this level is not recommended for all ports of an NX-OS device, with 10G or faster ports there is just too much data to log and process in a meaningful way, even with sampling (which is required).

  However, for strategic ports (for instance, something facing a WAN link or traffic constrained server) this can be a good tool for troubleshooting. This sort of logging does take a fair amount of host resources, so if there is an upstream firewall or router, that device is often better suited to be a Netflow initiator, but if for instance the upstream device is owned by a carrier or a client, or is a host that needs this sort of telemetry, most NX-OS devices are certainly capable of providing Netflow telemetry.

  On many NX-OS platforms only inbound Netflow is supported.

  Rationale:

  Impact:

  If monitored graphically, often just a visual inspection of the netflow graphs will highlight anomalous traffic. For instance, a high volume exfiltration from a database server would show a spike of traffic from that database server to a host on the internet (which in most environments is not a normal pattern).

  In many cases the netflow database can be queried directly, so anomalies can be queried for programmatically. However, coding 'what is not normal' is not something that is easily done in procedural languages. AI or ML frameworks such as TensorFlow may be helpful in this situation."
      solution    : "If needed, either Layer 3 or Layer 2 netflow can be configured.
  Layer 3 IP and IPv6 flow monitors can be applied to VLANs, SVIs, Layer 3 routed interfaces or subinterfaces.
  Layer 2 flow monitors can be applied to a physical interface or trunks
  L3 netflow - typical application to a VLAN is shown
  First, enable the netflow feature:

  switch(config)#feature netflow

  The flow record defines what data to record and export. Typical settings are shown, the important thing is that a valid flow record setting exists:

  switch(config)# flow-record FLOW-RECORD
  switch(config-flow-record)#  match ipv4 protocol
  switch(config-flow-record)#  match ipv4 source address
  switch(config-flow-record)#  match ipv4 destination address
  switch(config-flow-record)#  match transport source-port
  switch(config-flow-record)#  match transport destination-port
  switch(config-flow-record)#  collect routing source as
  switch(config-flow-record)#  collect routing destination as
  switch(config-flow-record)#  collect transport tcp flags
  switch(config-flow-record)#  collect counter bytes
  switch(config-flow-record)#  collect counter packets

  The flow exporter defines the destination and options around sent data. Again, the specific values are not important. The VRF can be specified in the 'destination' line if needed.:

  switch(config)# flow exporter FLOW-EXPORT
  switch(config-flow-exporter)# transport udp 9996
  switch(config-flow-exporter)# destination 10.10.10.10
  switch(config-flow-exporter)# source mgmt 0
  switch(config-flow-exporter)# version 9
  switch(config-flow-exporter-version-9)# option exporter-stats timeout 120
  switch(config-flow-exporter-version-9)# option interface-table timeout 120

  The flow monitor 'ties' the exporter and record together:

  switch(config)# flow monitor FLOW-MONITOR
  switch(config-flow-monitor)# exporter FLOW-EXPORT
  switch(config-flow-monitor)#  record FLOW-RECORD

  The sampling rate, 'x packets out of y' can also be defined. Both should be a power of 2 (for instance, 8 out-of 64 is a valid combination)

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode 8 out-of 64

  Finally, apply the monitor and optionally the sampler to a layer 3 interface:

  switch(config-flow-monitor)# int vlan <interface number>
  10GCORE01(config-if)# ip flow monitor FLOW-MONITOR input sampler FLOWSAMPLER01

  =======================================
  **L2 netflow - typical application to physical interface shown **
  Because if it's reliance on MAC Addresses, L2 netflow implementations are much less often used

  switch(config)#feature netflow

  The exporter configuration remains the same as L3:

  switch(config)# flow exporter L2_FLOWEXPORTER01
  switch(config-flow-exporter)# destination <netflow server ip> [use-vrf management]
  switch(config-flow-exporter)# transport udp <netflow port>
  switch(config-flow-exporter)# source mgmt0
  switch(config-flow-exporter)# version 9

  The flow record reflects different (layer 2) tuple inputs:

  switch(config)# flow record L2_FLOWRECORD01
  switch(config-flow-record)#  match datalink ethertype
  switch(config-flow-record)#  match datalink mac source-address
  switch(config-flow-record)#  match datalink mac destination-address
  switch(config-flow-record)#  match datalink vlan

  The flow monitor remains similar:

  switch(config)# flow monitor L2_FLOWMONITOR01
  switch(config-flow-monitor)# record L2_FLOWRECORD01
  switch(config-flow-monitor)# exporter L2_FLOWEXPORTER01

  The flow sampler commands remain the same

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode <x> out-of <y>

  Finally, apply the L2 definition to an L2 interface:

  switch(config)# int Ethernet x/yy
  switch(config-if)# layer2-switched flow monitor L2_FLOWMONITOR01 input sampler FLOWSAMPLER01

  Default Value:

  Netflow is not defined by default."
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "1.5.4 Configure Logging Timestamps"
  info        : "Timestamps are incredibly important since they drive a number of important activities in our product. Most importantly, we use timestamps to filter data in your search results.

Rationale:

Using timestamps allow you to discover the timeframe of an incident."
  solution    : "Use the 'logging timestampe' command to configure this setting. Note that if set to 'seconds' (the default), this command will not appear in the configuration.

switch(config)# logging timestamp {microseconds | milliseconds | seconds}

Default Value:

By default logs are timestamped to the second, so the default value is 'logging timestamp seconds'.
This default value is not shown in the configuration."
  reference   : "CIS_Recommendation|1.5.4,CSCv7|6.3,LEVEL|1M,PCI-DSSv3.2|10.3.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging timestamp .+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.6.1 Configure at least 3 external NTP Servers - ntp server"
  info            : "Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Using multiple sources gives redundancy in time sources. In most infrastructures, for efficiency only a small subset of devices (often a redundant pair of routers or switches) will use redundant external time sources. All other infrastructure will then synchronize time from them. This also means that any perimeter firewalls can be configured to limit NTP requests to the public internet to just those sources and destinations. The exception would of course be if the organization has an on-premise, internal atomic or GPS based network time source. Even in those situations an tiered NTP infrastructure is generally recommended on the internal network.

Rationale:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Also, without accurate time authentication issues can arise. If an attacker can influence the NTP traffic, it is possible to 'back-date' NTP responses to permit the use of older certificates, or 'forward-date' NTP responses to invalidate any certificates in use on the device. Using multiple sources gives redundancy in time sources. If a management network is in use in the infrastructure, using the management VRF to source time can help to protect NTP response traffic from tampering. It is key to set an NTP source interface, so that any perimeter devices can be configured to permit NTP requests from those IP addresses, and to restrict NTP requests to a list of authorized IP addresses. Be sure that this is a 'reliable' interface. In many cases this means using a loopback interface, so that any of several interfaces can be used to route the request to the NTP server. If a non-loopback interface is used, understand that if that interface is in a down state then NTP requests will not be sent.

Impact:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue."
  solution        : "If the default VRF is used (note that the IP addresses are for demonstrations purposes only, production configurations will likely vary):

switch(config)#ntp server 13.86.101.172 use-vrf default
switch(config)#ntp server 132.163.97.6 use-vrf default
switch(config)#ntp server 132.246.11.231 use-vrf default
switch(config)#ntp source-interface loopback1

If a management VRF is used:

switch(config)#ntp server 13.86.101.172 use-vrf management
switch(config)#ntp server 132.163.97.6 use-vrf management
switch(config)#ntp server 132.246.11.231 use-vrf management
switch(config)#ntp source-interface loopback1



Default Value:

NTP settings are not in the default confguration, they must be added. If a source VRF is not specified, the default VRF is used If a source interface is not specified, the interface that is topologically closest to the NTP service is used."
  reference       : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.1,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "ntp server .+"
  min_occurrences : "3"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.1 Configure at least 3 external NTP Servers - ntp source-interface"
  info        : "Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Using multiple sources gives redundancy in time sources. In most infrastructures, for efficiency only a small subset of devices (often a redundant pair of routers or switches) will use redundant external time sources. All other infrastructure will then synchronize time from them. This also means that any perimeter firewalls can be configured to limit NTP requests to the public internet to just those sources and destinations. The exception would of course be if the organization has an on-premise, internal atomic or GPS based network time source. Even in those situations an tiered NTP infrastructure is generally recommended on the internal network.

Rationale:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Also, without accurate time authentication issues can arise. If an attacker can influence the NTP traffic, it is possible to 'back-date' NTP responses to permit the use of older certificates, or 'forward-date' NTP responses to invalidate any certificates in use on the device. Using multiple sources gives redundancy in time sources. If a management network is in use in the infrastructure, using the management VRF to source time can help to protect NTP response traffic from tampering. It is key to set an NTP source interface, so that any perimeter devices can be configured to permit NTP requests from those IP addresses, and to restrict NTP requests to a list of authorized IP addresses. Be sure that this is a 'reliable' interface. In many cases this means using a loopback interface, so that any of several interfaces can be used to route the request to the NTP server. If a non-loopback interface is used, understand that if that interface is in a down state then NTP requests will not be sent.

Impact:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue."
  solution    : "If the default VRF is used (note that the IP addresses are for demonstrations purposes only, production configurations will likely vary):

switch(config)#ntp server 13.86.101.172 use-vrf default
switch(config)#ntp server 132.163.97.6 use-vrf default
switch(config)#ntp server 132.246.11.231 use-vrf default
switch(config)#ntp source-interface loopback1

If a management VRF is used:

switch(config)#ntp server 13.86.101.172 use-vrf management
switch(config)#ntp server 132.163.97.6 use-vrf management
switch(config)#ntp server 132.246.11.231 use-vrf management
switch(config)#ntp source-interface loopback1



Default Value:

NTP settings are not in the default confguration, they must be added. If a source VRF is not specified, the default VRF is used If a source interface is not specified, the interface that is topologically closest to the NTP service is used."
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.6.1,CN-L3|8.1.10.6(d),CSCv7|6.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ntp source-interface .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.2 Configure a Time Zone"
  info        : "Timezones are a source of contention in larger corporations. On one hand, if infrastructure is configured with time consistent with the local timezone, then it is simpler to co-relate end-user symptoms and logs on end-user equipment with logs from network equipment. On the other hand, in organizations that span multiple time zones, configuring local time can make it easy to mis-match log entries from gear in different time zones.

In some organizations, the solution is to post both local and UTC time in all log entries. In other organizations, all gear is configured for one timezone (either UTC or 'head office time').

The important thing is to have a standard for time zone, and to configure it consistently across all hosts and infrastructure equipment.

Rationale:

Impact:

Not having a consistent time zone policy across all hosts and infrastructure means that when dealing with a security incident or technical issue, it becomes very easy to mis-match logs as affected hosts span multiple time zones."
  solution    : "To set the timezone, define the timezone name, the offset in hours, then the offset in seconds. The example below shows EST (Offset of -5 hours, zero seconds).

switch(config)# clock timezone EST -5 0

Default Value:

By default no time zone is configured."
  reference   : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.2,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "clock timezone .+ .+ .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.3 If a Local Time Zone is used, Configure Daylight Savings"
  info        : "If local time zones are configured on network infrastructure, it is important to also configure the time 'shift' that occurs as a result of Daylight Savings Time.

Rationale:

Impact:

If local time zones are configured on network infrastructure, it is usually to simplify relating reported end-user issues back to local time entries in the logs. So if local time zones are configured and used in this manner, it becomes important to also configure the time 'shift' that occurs as a result of Daylight Savings Time (or 'summer-time' on the Cisco CLI)"
  solution    : "In most cases, just the name of the DST timezone name is sufficient. NX-OS assumes 1 hour offset, using the United States dates for DST.

switch(config)# clock summer-time <DST Timezone Name>

for example:

switch(config)# clock summer-time EDT

If a full definition of the change is needed, it can certainly be set:

switch(config)# clock summer-time <DST Timezone Name> <day1> <month1> <time1> <day2> <month2> <time2> <offset in minutes>

where:

day1, month1, time1 define the start of the DST period

day2, month2, time2 define the end of the DST period

Default Value:

By default, summer-time (Daylight Savings Time) is not configured. If the summer-time start and stop dates are not specified, then the US standard dates are used: start = 2 Sun Mar 02:00 stop = 1 Sun Nov 02:00 60"
  reference   : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.3,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "clock summer-time .+"
</item>

<item>
  type        : BANNER_CHECK
  description : "1.7.1 Configure an MOTD (Message of the day) Banner"
  info        : "An MOTD banner is displayed when a terminal connects, before a login occurs. This banner is useful for sending messages that affect all users (such as impending system shutdowns). This banner can also be used to notify unauthorized users of any penalties to accessing the device, or any logging that may be configured

Rationale:

Network banners are electronic messages that provide notice of legal rights to users of computer networks. From a legal standpoint, banners have four primary functions.

Banners may be used to generate consent to real-time monitoring under Title III

Banners may be used to generate consent to the retrieval of stored files and records pursuant to ECPA.

in the case of government networks, banners may eliminate any Fourth Amendment 'reasonable expectation of privacy' that government employees or other users might otherwise retain in their use of the government's network under O'Connor v. Ortega, 480 U.S. 709 (1987).

In the case of a non-government network, banners may establish a system administrator's 'common authority' to consent to a law enforcement search pursuant to United States v. Matlock, 415 U.S. 164 (1974).' (US Department of Justice APPENDIX A: Sample Network Banner Language)"
  solution    : "Configure an MOTD banner as shown below. The delimiter character shown is a '^', but it can be any character can serve as a delimiter.

switch(config)# banner motd ^
> Enter MOTD Banner here.
> End this message with the same delimeter as above
> ^
switch(config)#

Default Value:

By default no MOTD banner is configured."
  reference   : "800-171|3.1.9,800-53|AC-8a.,CIS_Recommendation|1.7.1,CSCv7|17,ITSG-33|AC-8a.,LEVEL|1M,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "banner motd"
# Note: Variable @BANNER_MOTD_CONTENT@ replaced with "All use of this device is monitored and logged." in field "content".
  content     : "All use of this device is monitored and logged."
</item>

<item>
  type        : BANNER_CHECK
  description : "1.7.2 Configure an EXEC Banner"
  info        : "The 'exec banner' is displayed with an EXEC process is started. This occurs after login (if authentication is configured). Banners are normally configured for legal reasons, to ensure that any attackers are explicitly notified of the penalties involved in unauthorized access. Banners can also serve as a legal notice to authorized users of the equipment to notify them of any logging that may be configured. Finally, the exec banner (which is post-login) can often also hold asset-specific information, such as:

The primary technical contacts for the equipment

Location information - for instance the street address or rack number

The purchase date

The asset tag information for the device

Any upstream circuit numbers

Carrier or ISP support phone numbers

Any other asset-specific information that may be important to the organisation

Rationale:

Configure an MOTD banner as shown below. The delimiter character shown is a '^', but it can be any character can serve as a delimiter."
  solution    : "Configure an EXEC banner as shown below. The delimiter character shown is a '^', but it can be any character can serve as a delimiter.

switch(config)# banner exec ^
> Enter your standard EXEC Banner text here.  End with the same delimiter as used above
> ^
switch(config)#

Default Value:

By default no exec banner is configured."
  reference   : "800-171|3.1.9,800-53|AC-8a.,CIS_Recommendation|1.7.2,CSCv7|17,ITSG-33|AC-8a.,LEVEL|1M,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "banner motd"
# Note: Variable @BANNER_EXEC_CONTENT@ replaced with "All use of this device is monitored and logged." in field "content".
  content     : "All use of this device is monitored and logged."
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.8.1 Disable Power on Auto Provisioning (POAP)"
  info        : "PowerOn Auto Provisioning (POAP) allows the switch to be auto-provisioned at the time of power-on. This can be extremely useful in a tightly controlled environment, with a solid 'network as code' mindset and dev-ops procedures in place for network operations.

Rationale:

Impact:

Without solid procedures and a well-controlled environment, POAP provides a malicious actor the ability to compromise a switch as it is being deployed out of the box. This 'day 0' approach to compromising gives the attacker control of the switch from the start - it can be difficult to detect that this has occurred, and may require physical access to gain control back."
  solution    : "To disable POAP, use the command:

switch(config)# no boot poap enable

Default Value:

POAP is not enabled by default. The 'boot poap' configuration line does not show in the running or startup configuration if it is disabled, only if it is enabled."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.8.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "no boot poap enable"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "1.8.2 Disable iPXE (Pre-boot eXecution Environment)"
  info        : "iPXE allows a NX-OS device to boot from the network, usually using HTTP.

Rationale:

This method allows the switch bootup image to be controlled centrally, often using DHCP services.

Impact:

The risks of using this boot method are obvious. First, DHCP is a broadcast request, so any host (including a malicious host) can provide the DHCP response - the first response 'wins'. This means that a malicious actor can control operating system being booted on the switch. In addition, the HTTP protocol is clear-text, so is susceptible to modification in transit by an attacker. This is a less likely attack however, as the NX-OS boot sequence has multiple checks in place to verify the validity of the OS, and all most succeed for the boot sequence to proceed."
  solution    : "Setting the boot order explicity to 'bootflash' will remediate a PXE configured device.

switch(config)# boot order bootflash

You can also 'no' the current boot order line to revert to the default setting. For instance, to remove the configuration line 'boot order pxe bootflash' command, use

switch(config)# no boot order pxe bootflash

Default Value:

By default the boot order is 'bootflash' only. This default configuration will not show in the configuration.

However, entering any valid 'boot order' in the configuration will result it that order being explicit in the configuration, so entering 'boot order bootflash' will result in that showing in the configuration."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.8.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "boot order pxe"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for snmp-server"
      item        : "snmp-server .+"
    </item>
  </condition>

  <then>
    <item>
      type            : CONFIG_CHECK
      description     : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server traps/informs"
      info            : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution        : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference       : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/3102"
      item            : "snmp-server source-interface (traps|informs) .+"
      min_occurrences : "2"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server host"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server host .+ source-interface (traps|informs) .+"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server traps/informs"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server host"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - ntp"
  info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

SSH access

SNMP polling

Syslog logging

SNMP traps

NTP requests

This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

Rationale:

Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

Impact:

Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
  solution    : "First configure the mgmt0 interface:

switch(config)# interface mgmt0
switch(config-if)#   ip address 1.2.3.1/24

If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

Then, configure the source-interface commands for each target protocol that is implemented:

switch(config)# snmp-server source-interface traps mgmt0
switch(config)# snmp-server source-interface informs mgmt0
switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
switch(config)# ntp source-interface mgmt0
switch(config)# logging source-interface mgmt0

Default Value:

By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ntp source-interface .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - logging"
  info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

SSH access

SNMP polling

Syslog logging

SNMP traps

NTP requests

This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

Rationale:

Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

Impact:

Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
  solution    : "First configure the mgmt0 interface:

switch(config)# interface mgmt0
switch(config-if)#   ip address 1.2.3.1/24

If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

Then, configure the source-interface commands for each target protocol that is implemented:

switch(config)# snmp-server source-interface traps mgmt0
switch(config)# snmp-server source-interface informs mgmt0
switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
switch(config)# ntp source-interface mgmt0
switch(config)# logging source-interface mgmt0

Default Value:

By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
  reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging source-interface .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "2.1.1 Configure Control Plane Policing"
  info        : "Control Plane Policing is used to create a set of policies governing specific traffic. Normally this limits the volume and type of traffic that can be directed to the IP addresses on the device, as this traffic normally must be handled in process mode by the switch CPU. For instance, limiting the volume of ICMP traffic that can be sent to a device IP will both limit the CPU impact of that traffic and also limit the bandwidth that this traffic can take. With 10GB and faster interfaces available, both of these considerations are important.

Rationale:

You must configure control plane class maps for control plane policies.

You can classify traffic by matching packets based on existing ACLs. The permit and deny ACL keywords are ignored in the matching.

You can configure policies for IP version 4 (IPv4) and IP version 6 (IPv6) packets.

Impact:

Configuring Control Plane Policing both limits the impact of traffic (either diagnostic or malicious traffic) on the CPU and interfaces of the device. It also limits the impact of this traffic on available bandwidth - it can't restrict how much traffic is sent, but it certainly limits how much is processed, so by that limits the volume of reply traffic.
In many DOS attacks, ideally the attacker wants the volume of the reply traffic to exceed the traffic sent - getting the victim to 'amplify' the attack is almost always a desired goal of the attacker. This DOS attack can then be directed to a third 'victim' host by the use of spoofing, or the DOS attack may be just against the vulnerable device or host (in this case the NX-OS switch)"
  solution    : "Normally the 'strict' Control Plane Policing Policy is recommended. If additional protections are required for a specific situation, then this policy can be copied - the copy can then be modified and applied.
As noted in the command's response, applying a COPP Policy may disrupt other control traffic.

switch(config)# copp profile strict
This operation can cause disruption of control traffic. Proceed (y/n)?  [no] y
switch(config)#

Default Value:

By default, the 'strict' Control Plane Policing Policy is in place.

CISNXOS9# sho run | i copp

copp profile strict

The pre-configured COPP Policies that are available are:

Strict-This policy is 1 rate and 2 color. This setting gives the NX-OS switch the best DOS protection of the 5 options available.

Moderate-This policy is 1 rate and 2 color. The important class burst size is greater than the strict policy but less than the lenient policy.

Lenient-This policy is 1 rate and 2 color. The important class burst size is greater than the moderate policy but less than the dense policy.

Dense-This policy is 1 rate and 2 color. The policer CIR values are less than the strict policy.

Skip-No control plane policy is applied. (Not Recommended)"
  reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|2.1.1,CN-L3|8.1.10.6(j),CSCv7|5.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "copp profile strict"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for eigrp"
      item        : "router eigrp .+"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.1.2 Configure EIGRP Passive interfaces for interfaces that do not have peers"
      info        : "EIGRP both listens on and advertises on all interfaces that have IPs in subnets that are defined as 'networks' in the EIGRP configuration.
  Ensure that interfaces that do not 'face' an EIGRP peer are set to passive.

  Rationale:

  If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. By default, all interfaces advertise via multicast to solicit EIGRP neighbors, and also listen for neighbor advertisements.

  Impact:

  If an interface is set to the default (ie - not passive), then an attacker can pose as an EIGRP peer, either to collect EIGRP information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

  Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If some IP interfaces have peers and some do not, set the ones with no peers to 'passive'

  switch(config-if)# int vlan 1
  switch(config-if)# ip passive-interface eigrp <EIGRP process number>

  Default Value:

  By default, passive interfaces are not configured."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.1.2,CN-L3|8.1.10.6(j),CSCv7|5.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "ip passive-interface eigrp .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.1.3 Configure EIGRP log-adjacency-changes"
      info        : "Logging changes to the EIGRP peering relationships is recommended. This setting is enabled by default.

  Rationale:

  Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

  Impact:

  Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

  For this reason it is important that EIGRP endpoints alert on any interruptions in adjacency."
      solution    : "By default EIGRP adjacency changes are logged, and this does not show in the configuration.
  If however it is disabled, it can be re-enabled as shown below.


  switch(config)# router eigrp <eigrp process tag>
  switch(config-router)# log-adjacency-changes

  Default Value:

  By default logging of eigrp adjacency changes is enabled."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.1.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router eigrp .+"
      item        : "log-adjacency-changes"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.1.2 Configure EIGRP Passive interfaces for interfaces that do not have peers"
      info        : "EIGRP both listens on and advertises on all interfaces that have IPs in subnets that are defined as 'networks' in the EIGRP configuration.
Ensure that interfaces that do not 'face' an EIGRP peer are set to passive.

Rationale:

If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. By default, all interfaces advertise via multicast to solicit EIGRP neighbors, and also listen for neighbor advertisements.

Impact:

If an interface is set to the default (ie - not passive), then an attacker can pose as an EIGRP peer, either to collect EIGRP information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website."
      solution    : "If some IP interfaces have peers and some do not, set the ones with no peers to 'passive'

switch(config-if)# int vlan 1
switch(config-if)# ip passive-interface eigrp <EIGRP process number>

Default Value:

By default, passive interfaces are not configured."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.1.2,CN-L3|8.1.10.6(j),CSCv7|5.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.1.3 Configure EIGRP log-adjacency-changes"
      info        : "Logging changes to the EIGRP peering relationships is recommended. This setting is enabled by default.

Rationale:

Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

Impact:

Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

For this reason it is important that EIGRP endpoints alert on any interruptions in adjacency."
      solution    : "By default EIGRP adjacency changes are logged, and this does not show in the configuration.
If however it is disabled, it can be re-enabled as shown below.


switch(config)# router eigrp <eigrp process tag>
switch(config-router)# log-adjacency-changes

Default Value:

By default logging of eigrp adjacency changes is enabled."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.1.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for BGP"
      item        : "router bgp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.2.1 Configure BGP to Log Neighbor Changes"
      info        : "Logging changes to the BGP peering relationships is recommended. Any logged changes will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

  Rationale:"
      solution    : "In each 'neigbor' stanza of the BGP configuration, add the command 'log-neighbor-changes'

  switch(config)# router bgp <asn>
  switch(config-router)#   router-id <local ip, preferably a loopback>
  switch(config-router)#   neighbor <neighbor ip address>
  switch(config-router-neighbor)#     remote-as <neighbor asn>
  switch(config-router-neighbor)#     log-neighbor-changes

  In addition, the events below should be configured in any log or SIEM solution to generate an alert for investigation. A good keyword to alert on is 'ADJCHANGE'

  2020 May 20 11:54:18 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Up
  2020 May 20 13:08:15 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Down - sent:  holdtimer expired error

  Default Value:

  Not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router bgp .+"
      item        : "log-neighbor-changes"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.2.1 Configure BGP to Log Neighbor Changes"
      info        : "Logging changes to the BGP peering relationships is recommended. Any logged changes will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

  Rationale:"
      solution    : "In each 'neigbor' stanza of the BGP configuration, add the command 'log-neighbor-changes'

  switch(config)# router bgp <asn>
  switch(config-router)#   router-id <local ip, preferably a loopback>
  switch(config-router)#   neighbor <neighbor ip address>
  switch(config-router-neighbor)#     remote-as <neighbor asn>
  switch(config-router-neighbor)#     log-neighbor-changes

  In addition, the events below should be configured in any log or SIEM solution to generate an alert for investigation. A good keyword to alert on is 'ADJCHANGE'

  2020 May 20 11:54:18 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Up
  2020 May 20 13:08:15 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Down - sent:  holdtimer expired error

  Default Value:

  Not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for router ospf"
      item        : "router ospf"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.3.1 Set Interfaces with no Peers to Passive-Interface"
      info        : "By default, OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces.

    Rationale:

    If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. I will however still advertise the networks associated with that interface to peers on other interfaces. By default, all interfaces advertise via multicast to solicit OSPF neighbors, and also listen for neighbor advertisements.

    Impact:

    If an interface is set to the default (ie - not passive), then an attacker can pose as an OSPF peer, either to collect OSPF information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

    Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website.

    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "For each routeable interface, if there is no facing peer on that interface set that interface to passive with the 'ip ospf passive-interface' configuration command.
    Every routeable interface should be set to either passive-interface, or be configured with authentication keys.

    switch(config)# int vlan 1
    switch(config-if)# ip router ospf 10 area 0
    switch(config-if)# ip ospf passive-interface

    Default Value:

    By default, passive interfaces are not configured - no OSPF configured interfaces are set to passive. This means that OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "ip (router ospf .+|ospf passive-interface)"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.3.3 Log OSPF Adjacency Changes"
      info        : "Logging changes to the BGP peering relationships is recommended.

    Rationale:

    Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

    Impact:

    Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints alert on any interruptions in adjacency."
      solution    : "Enabling the logging of adjacencies is a single line in the OSPF process section. It is globally applied to all OSPF neighbors.

    switch(config)# router ospf <Process tag>
    switch(config-router)# log-adjacency-changes

    Default Value:

    By default changes in OSPF adjacencies are not logged."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.3.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router ospf .+"
      item        : "log-adjacency-changes"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.3.1 Set Interfaces with no Peers to Passive-Interface"
      info        : "By default, OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces.

    Rationale:

    If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. I will however still advertise the networks associated with that interface to peers on other interfaces. By default, all interfaces advertise via multicast to solicit OSPF neighbors, and also listen for neighbor advertisements.

    Impact:

    If an interface is set to the default (ie - not passive), then an attacker can pose as an OSPF peer, either to collect OSPF information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

    Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website."
      solution    : "For each routeable interface, if there is no facing peer on that interface set that interface to passive with the 'ip ospf passive-interface' configuration command.
    Every routeable interface should be set to either passive-interface, or be configured with authentication keys.

    switch(config)# int vlan 1
    switch(config-if)# ip router ospf 10 area 0
    switch(config-if)# ip ospf passive-interface

    Default Value:

    By default, passive interfaces are not configured - no OSPF configured interfaces are set to passive. This means that OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.3.3 Log OSPF Adjacency Changes"
      info        : "Logging changes to the BGP peering relationships is recommended.

    Rationale:

    Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

    Impact:

    Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints alert on any interruptions in adjacency."
      solution    : "Enabling the logging of adjacencies is a single line in the OSPF process section. It is globally applied to all OSPF neighbors.

    switch(config)# router ospf <Process tag>
    switch(config-router)# log-adjacency-changes

    Default Value:

    By default changes in OSPF adjacencies are not logged."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.3.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for interface Vlan with IPs"
      context     : "interface Vlan.+"
      item        : "ip address .+"
    </item>
  </condition>

  <then>
    <item>
      type            : CONFIG_CHECK
      description     : "3.1.4.1 If VLAN interfaces have IP addreses, configure anti spoofing / ingress filtering protections"
      info            : "If VLAN interfaces have IP addresses, it is important that anti-spoofing protections are in place, to prevent an attacker from spoofing an address that is illegal on that inbound interface.

  Rationale:

  If an attacker is allowed to 'spoof' addresses to the point that packets are permitted to arrive on the incorrect interface, it becomes possible for an attacker to spoof their trust level from a network point of view, for instance to source 'inside' addresses from an 'outside' interface.

  Impact:

  The URPF feature uses the same tables as the routing protocol, so the CPU impact of configuring this feature is low. However, logging of high volume URPF attacks (or URPF misconfigurations) can result in:

  higher CPU impacts on the switch

  as higher network utilization on the path to the logging server

  higher disk utilization on the logging server

  higher cpu utilization on the logging server

  Because of this, URPF events, especially in higher volumes should be configured to generate a high priority alert in your logging server or SIEM."
      solution        : "Apply the command 'ip verify unicast source reachable-via rx' to all VLAN interfaces that have IP addresses. This forces the check to verify that the packet is arriving on the correct interface.
  The command variant 'ip verify unicast source reachable-via any' is not recommended, as it only filters for valid IP addresses. If the device has a default route, then this command variant has no affect.

  switch(config)# interface Vlan X
  switch(config-if)# ip verify unicast source reachable-via rx

  Default Value:

  By default, unicast reverse forwarding protections are not enabled"
      reference       : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.1,CN-L3|8.1.10.6(j),CSCv7|6.8,CSCv7|11.2,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also        : "https://workbench.cisecurity.org/files/3102"
      context         : "interface Vlan.+"
      item            : "(ip address .+|ip verify unicast source reachable-via rx)"
      min_occurrences : "2"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.4.1 If VLAN interfaces have IP addreses, configure anti spoofing / ingress filtering protections"
      info        : "If VLAN interfaces have IP addresses, it is important that anti-spoofing protections are in place, to prevent an attacker from spoofing an address that is illegal on that inbound interface.

  Rationale:

  If an attacker is allowed to 'spoof' addresses to the point that packets are permitted to arrive on the incorrect interface, it becomes possible for an attacker to spoof their trust level from a network point of view, for instance to source 'inside' addresses from an 'outside' interface.

  Impact:

  The URPF feature uses the same tables as the routing protocol, so the CPU impact of configuring this feature is low. However, logging of high volume URPF attacks (or URPF misconfigurations) can result in:

  higher CPU impacts on the switch

  as higher network utilization on the path to the logging server

  higher disk utilization on the logging server

  higher cpu utilization on the logging server

  Because of this, URPF events, especially in higher volumes should be configured to generate a high priority alert in your logging server or SIEM."
      solution    : "Apply the command 'ip verify unicast source reachable-via rx' to all VLAN interfaces that have IP addresses. This forces the check to verify that the packet is arriving on the correct interface.
  The command variant 'ip verify unicast source reachable-via any' is not recommended, as it only filters for valid IP addresses. If the device has a default route, then this command variant has no affect.

  switch(config)# interface Vlan X
  switch(config-if)# ip verify unicast source reachable-via rx

  Default Value:

  By default, unicast reverse forwarding protections are not enabled"
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.1,CN-L3|8.1.10.6(j),CSCv7|6.8,CSCv7|11.2,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature hsrp"
      item        : "^feature hsrp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.4.4 Configure HSRP protections - hsrp version 2"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.4,CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface Vlan.+"
      item        : "hsrp version 2"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.4.4 Configure HSRP protections - interface md5"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.4.4,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1M,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "authentication md5 key-chain .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.4.4 Configure HSRP protections - hsrp version 2"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.4,CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.4.4 Configure HSRP protections - interface md5"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.4.4,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1M,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "3.2.1.1 Configure RA Guard - policy"
  info        : "The IPv6 RA Guard feature provides support for allowing the network administrator to block or reject unwanted or rogue RA guard messages that arrive at the network device platform. RAs are used by devices to announce themselves on the link. The IPv6 RA Guard feature analyzes these RAs and filters out RAs that are sent by unauthorized devices. In host mode, all RA and router redirect messages are disallowed on the port. The RA guard feature compares configuration information on the Layer 2 (L2) device with the information found in the received RA frame. Once the L2 device has validated the content of the RA frame and router redirect frame against the configuration, it forwards the RA to its unicast or multicast destination. If the RA frame content is not validated, the RA is dropped.

Rationale:

Packets are classified into one of three DHCP type messages. If a packet arriving from DHCP server is a Relay Forward or a Relay Reply, only the device role is checked. In addition, IPv6 DHCP Guard doesn't apply the policy for a packet sent out by the local relay agent running on the switch.

Impact:

With RA Guard in it's default 'not configured' state, a malicious actor can send IPv6 RA (Router Advertisement) packets, and present their station as a valid router. This places the attacker in a position where they can send specific traffic to a malicious site (usually to steal credentials). Also an attacker in this position can eavesdrop on or modify traffic in transit, before forwarding it on."
  solution    : "In the example below, the RA Guard policy is created, then applied to a VLAN.
Example

switch(config)# ipv6 nd raguard policy RAGuardPol01
switch(config-ra-guard)# device-role router
switch(config-ra-guard)# hop-limit minimum 3
switch(config-ra-guard)# managed-config-flag on
switch(config-ra-guard)# other-config-flag on
switch(config-ra-guard)# router-preference maximum high
switch(config-ra-guard)# trusted-port

Configuring RA Guard on an interface
Example
switch(config)#vlan configuration 10
switch(config-if) ipv6 nd raguard attach-policy RAGuardPol01

Default Value:

By default, RA Guard is not enabled:

switch# sho ipv6 nd raguard policy

RA guard feature not active"
  reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.2.1.1,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ipv6 nd raguard policy .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.2.1.1 Configure RA Guard - interfaces"
  info        : "The IPv6 RA Guard feature provides support for allowing the network administrator to block or reject unwanted or rogue RA guard messages that arrive at the network device platform. RAs are used by devices to announce themselves on the link. The IPv6 RA Guard feature analyzes these RAs and filters out RAs that are sent by unauthorized devices. In host mode, all RA and router redirect messages are disallowed on the port. The RA guard feature compares configuration information on the Layer 2 (L2) device with the information found in the received RA frame. Once the L2 device has validated the content of the RA frame and router redirect frame against the configuration, it forwards the RA to its unicast or multicast destination. If the RA frame content is not validated, the RA is dropped.

Rationale:

Packets are classified into one of three DHCP type messages. If a packet arriving from DHCP server is a Relay Forward or a Relay Reply, only the device role is checked. In addition, IPv6 DHCP Guard doesn't apply the policy for a packet sent out by the local relay agent running on the switch.

Impact:

With RA Guard in it's default 'not configured' state, a malicious actor can send IPv6 RA (Router Advertisement) packets, and present their station as a valid router. This places the attacker in a position where they can send specific traffic to a malicious site (usually to steal credentials). Also an attacker in this position can eavesdrop on or modify traffic in transit, before forwarding it on."
  solution    : "In the example below, the RA Guard policy is created, then applied to a VLAN.
Example

switch(config)# ipv6 nd raguard policy RAGuardPol01
switch(config-ra-guard)# device-role router
switch(config-ra-guard)# hop-limit minimum 3
switch(config-ra-guard)# managed-config-flag on
switch(config-ra-guard)# other-config-flag on
switch(config-ra-guard)# router-preference maximum high
switch(config-ra-guard)# trusted-port

Configuring RA Guard on an interface
Example
switch(config)#vlan configuration 10
switch(config-if) ipv6 nd raguard attach-policy RAGuardPol01

Default Value:

By default, RA Guard is not enabled:

switch# sho ipv6 nd raguard policy

RA guard feature not active"
  reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.2.1.1,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface Vlan.+"
  item        : "ipv6 nd raguard attach-policy .+"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "3.2.2 Disable ICMP Redirects on all Layer 3 Interfaces"
  info        : "A redirect packet basically informs the host that there is a better way to get to the destination host or network. This route is then cached on the (victim) host.

For instance, if the default gateway of a host is the NX-OS switch, and the victim host sends a packet to an internet or WAN IP, the NX-OS switch will inform the host that the firewall or WAN router will be a better path. If at some future time, if that firewall or WAN router should fail and trigger a routing change, the route to that failed device will persist in the victim host.

This scenario is only in play if the NX-OS device is the gateway for the victim host, and the Firewall or WAN router (or other next hop device) is also on the same subnet as the victim host. Also, if the next hop device handles its own failover (for instance, using HSRP), there is no routing change, so the 'redirect' issue will not be a problem.

This situation is generally a problem only if the path to the destination is handled by a 'next hop' mechanism, for instance by a routing protocol or a local route-map, and a backup path exists. In this situation, the route to the target will fail, the route will change to the backup path, and the victim will cache the old route for minutes or hours after the failure.

Rationale:"
  solution    : "It is recommended that you perform this task on all Layer 3 Interfaces which have both a primary and a backup routed path to any destination. In particular, the next hop will need to be in the same subnet as the potential victim hosts.

The corollary to this is that if the network is architected such that all layer 3 egress paths are on dedicated or 'point to point' segments (with no other hosts on those segments), then the ip redirect issue will never arise.

switch(config-if) no ip redirects

switch(config)#

Default Value:

IP redirects are enabled by default, and do not appear in the configuration. The desired value is 'no ip redirects', which will appear in the configuration."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|11.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "ip redirects"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "3.2.3 Disable Proxy ARP on all Layer 3 Interfaces"
  info        : "Proxy ARP is the technique in which one host, usually a router, answers ARP requests intended for another machine on a different network segment (vlan or subnet). By faking its identity, the router accepts responsibility for routing packets to the real destination.

Rationale:"
  solution    : "Proxy ARP is disabled on all interfaces by default, and that configuration does not appear in the running or saved configuration. Proxy ARP only appears in the configuration if it is enabled (which is not desired in most cases).
To disable this on an interface if it is enabled:

switch(config-if)# no ip proxy-arp

for instance:

switch(config)# int vlan 9
switch(config-if)# no ip proxy-arp

Default Value:

By default the Proxy ARP feature is disabled on all IP Interfaces. This desired and default setting does not appear in the configuration.

This default setting does not appear in the running or saved configurations."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|11.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "ip proxy arp"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "3.2.4 Disable IP Directed Broadcasts on all Layer 3 Interfaces"
  info        : "An IP directed broadcast is an IP packet whose destination address is a valid broadcast address for an IP subnet, but which originates from a node that is not itself a part of that destination subnet.

Rationale:

Directed broadcasts can be abused in several ways:

a volumetric DOS attack against the NX-OS switch itself, the sent volume of data can be much larger than the received request

a volumetric DOS attack against a third party (often called a 'smurf attack')

a single-packet reconnaissance of a local subnet

We recommend that you disable the ip directed-broadcast command on any interface where they are not required for some reason."
  solution    : "switch(config-if)# no ip directed-broadcast"
  reference   : "800-53|SC-5.,CIS_Recommendation|3.2.4,CSCv7|11,CSF|DE.CM-1,CSF|PR.DS-4,ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,PCI-DSSv3.2|2.2.5,QCSC-v1|8.2.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "ip directed-broadcast"
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.3.1 Configure DHCP Trust - ip dhcp snooping"
  info        : "You can configure whether DHCP snooping trusts traffic sources. An untrusted source may initiate traffic attacks or other hostile actions. To prevent such attacks, DHCP snooping filters messages from untrusted sources.

In an enterprise network, a trusted source is a device that is under your administrative control. These devices include the switches, routers, and servers in the network. Any device beyond the firewall or outside the network is an untrusted source. Generally, host ports are treated as untrusted sources.

Rationale:

In a service provider environment, any device that is not in the service provider network is an untrusted source (such as a customer switch). Host ports are untrusted sources.

In the Cisco NX-OS device, you indicate that a source is trusted by configuring the trust state of its connecting interface.

The default trust state of all interfaces is untrusted. You must configure DHCP server interfaces as trusted. You can also configure other interfaces as trusted if they connect to devices (such as switches or routers) inside your network. You usually do not configure host port interfaces as trusted.

Impact:

If DHCP Trust is not configured, all ports are trusted to provide DHCP services.

This situation enables a malicious attacker to provide incorrect DHCP information, for instance an attacker could:

provide a malicious host IP as the default gateway, putting that host into a 'Monkey in the Middle' position, able to intercept or modify traffic.

Provide a malicious host as a proxy, via DHCP option 252 (commonly called a 'WPAD attack'). This routes all browser traffic to that malicious host (for browsers that use the system setting for proxy)

The final scenario is an end-user bringing in a rogue dhcp server in the form of an access point or switch that they've purchased themselves. The impact of this is usually that the entire subnet will be DOS'd - normally impacted workstations will have a different subnet (192.168.0.0/24 ort 192.168.1.0/24), with the rogue device as the default gateway.

Configuring DHCP trust not only sends an alert to the log server or SIEM, it also puts the rogue DHCP port into ERR-DISABLE mode."
  solution    : "First, enable DHCP Snooping

switch(config)#ip dhcp snooping

Next, enable DHCP Snooping on target VLANs

switch(config)# ip dhcp snooping vlan 100,200,250-252

Configure Interface as Trusted

switch(config)# interface port-channel 5
switch(config)# ip dhcp snooping trust

On a distribution or access switch (for instance in a wiring closet or branch office), typically only the uplink ports are configured as trusted - the ports leading towards the DHCP server
On a datacenter switch, especially with virtualization, usually multiple ports are candidates for where the DHCP servers may appear on, all possible ports that may have a DHCP server on them should be trusted.

Default Value:

Untrusted"
  reference   : "800-171|3.14.7,800-53|SI-4(11),CIS_Recommendation|3.3.1,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|11,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-4,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,ITSG-33|SI-4(11),LEVEL|1M,NESA|M1.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "^ip dhcp snooping$"
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.3.1 Configure DHCP Trust - ip dhcp snooping vlans"
  info        : "You can configure whether DHCP snooping trusts traffic sources. An untrusted source may initiate traffic attacks or other hostile actions. To prevent such attacks, DHCP snooping filters messages from untrusted sources.

In an enterprise network, a trusted source is a device that is under your administrative control. These devices include the switches, routers, and servers in the network. Any device beyond the firewall or outside the network is an untrusted source. Generally, host ports are treated as untrusted sources.

Rationale:

In a service provider environment, any device that is not in the service provider network is an untrusted source (such as a customer switch). Host ports are untrusted sources.

In the Cisco NX-OS device, you indicate that a source is trusted by configuring the trust state of its connecting interface.

The default trust state of all interfaces is untrusted. You must configure DHCP server interfaces as trusted. You can also configure other interfaces as trusted if they connect to devices (such as switches or routers) inside your network. You usually do not configure host port interfaces as trusted.

Impact:

If DHCP Trust is not configured, all ports are trusted to provide DHCP services.

This situation enables a malicious attacker to provide incorrect DHCP information, for instance an attacker could:

provide a malicious host IP as the default gateway, putting that host into a 'Monkey in the Middle' position, able to intercept or modify traffic.

Provide a malicious host as a proxy, via DHCP option 252 (commonly called a 'WPAD attack'). This routes all browser traffic to that malicious host (for browsers that use the system setting for proxy)

The final scenario is an end-user bringing in a rogue dhcp server in the form of an access point or switch that they've purchased themselves. The impact of this is usually that the entire subnet will be DOS'd - normally impacted workstations will have a different subnet (192.168.0.0/24 ort 192.168.1.0/24), with the rogue device as the default gateway.

Configuring DHCP trust not only sends an alert to the log server or SIEM, it also puts the rogue DHCP port into ERR-DISABLE mode."
  solution    : "First, enable DHCP Snooping

switch(config)#ip dhcp snooping

Next, enable DHCP Snooping on target VLANs

switch(config)# ip dhcp snooping vlan 100,200,250-252

Configure Interface as Trusted

switch(config)# interface port-channel 5
switch(config)# ip dhcp snooping trust

On a distribution or access switch (for instance in a wiring closet or branch office), typically only the uplink ports are configured as trusted - the ports leading towards the DHCP server
On a datacenter switch, especially with virtualization, usually multiple ports are candidates for where the DHCP servers may appear on, all possible ports that may have a DHCP server on them should be trusted.

Default Value:

Untrusted"
  reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "^ip dhcp snooping vlans .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.3.1 Configure DHCP Trust - ip dhcp snooping trust"
  info        : "You can configure whether DHCP snooping trusts traffic sources. An untrusted source may initiate traffic attacks or other hostile actions. To prevent such attacks, DHCP snooping filters messages from untrusted sources.

In an enterprise network, a trusted source is a device that is under your administrative control. These devices include the switches, routers, and servers in the network. Any device beyond the firewall or outside the network is an untrusted source. Generally, host ports are treated as untrusted sources.

Rationale:

In a service provider environment, any device that is not in the service provider network is an untrusted source (such as a customer switch). Host ports are untrusted sources.

In the Cisco NX-OS device, you indicate that a source is trusted by configuring the trust state of its connecting interface.

The default trust state of all interfaces is untrusted. You must configure DHCP server interfaces as trusted. You can also configure other interfaces as trusted if they connect to devices (such as switches or routers) inside your network. You usually do not configure host port interfaces as trusted.

Impact:

If DHCP Trust is not configured, all ports are trusted to provide DHCP services.

This situation enables a malicious attacker to provide incorrect DHCP information, for instance an attacker could:

provide a malicious host IP as the default gateway, putting that host into a 'Monkey in the Middle' position, able to intercept or modify traffic.

Provide a malicious host as a proxy, via DHCP option 252 (commonly called a 'WPAD attack'). This routes all browser traffic to that malicious host (for browsers that use the system setting for proxy)

The final scenario is an end-user bringing in a rogue dhcp server in the form of an access point or switch that they've purchased themselves. The impact of this is usually that the entire subnet will be DOS'd - normally impacted workstations will have a different subnet (192.168.0.0/24 ort 192.168.1.0/24), with the rogue device as the default gateway.

Configuring DHCP trust not only sends an alert to the log server or SIEM, it also puts the rogue DHCP port into ERR-DISABLE mode.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "First, enable DHCP Snooping

switch(config)#ip dhcp snooping

Next, enable DHCP Snooping on target VLANs

switch(config)# ip dhcp snooping vlan 100,200,250-252

Configure Interface as Trusted

switch(config)# interface port-channel 5
switch(config)# ip dhcp snooping trust

On a distribution or access switch (for instance in a wiring closet or branch office), typically only the uplink ports are configured as trusted - the ports leading towards the DHCP server
On a datacenter switch, especially with virtualization, usually multiple ports are candidates for where the DHCP servers may appear on, all possible ports that may have a DHCP server on them should be trusted.

Default Value:

Untrusted"
  reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "ip dhcp snooping trust"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.3.2 Configure Storm Control"
  info        : "Traffic storm control (also called traffic suppression) allows you to monitor the levels of the incoming broadcast, multicast, and unicast traffic over a 3.9-millisecond interval. During this interval, the traffic level, which is a percentage of the total available bandwidth of the port, is compared with the traffic storm control level that you configured. When the ingress traffic reaches the traffic storm control level that is configured on the port, traffic storm control drops the traffic until the interval ends.

Rationale:

When the traffic exceeds the configured level, you can configure traffic storm control to perform the following optional corrective actions :

Shut down-When ingress traffic exceeds the traffic storm control level that is configured on a port, traffic storm control puts the port into the error-disabled state. To reenable this port, you can use either the shutdown and no shutdown options on the configured interface, or the error-disable detection and recovery feature. You are recommended to use the errdisable recovery cause storm-control command for error-disable detection and recovery along with the errdisable recovery interval command for defining the recovery interval. The interval can range between 30 and 65535 seconds.

Trap-You can configure traffic storm control to generate an SNMP trap when ingress traffic exceeds the configured traffic storm control level. The SNMP trap action is enabled by default. However, storm control traps are not rate-limited by default. You can control the number of traps generated per minute by using the snmp-server enable traps storm-control trap-rate command.

Impact:

This configuration is normally non-impactful - host network interfaces operating normally do not broadcast at the levels that are normally set in this command.

This command is primarily meant to protect the switch and more importantly other hosts in a broadcast domain (VLAN) from a network interface that is malfunctioning, either due to a hardware failure or a driver problem.

Note however that this protection can prevent some malicious activity, for instance VLAN wide DOS attacks, higher volume ARP Cache Poisoning attacks and CAM Table overflow attacks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To set the broadcast limit in percent (multicast limit shown):

switch(config)# interface ethernet 1/1
switch(config)# storm-control multicast level 10

or to set in packets per second (broadcast limit shown)

switch(config)# storm-control broadcast level pps 8000

Configure to send SNMP trap if a broadcast limit is exceeded

switch(config-if)# storm-control action trap

or to place an interface into an ERR-DISABLE state if a broadcast limit is exceeded:

switch(config-if)# storm-control action disable

Default Value:

not enabled"
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|3.3.2,CN-L3|8.1.10.6(d),CSCv7|11,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "storm-control .+"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature lldp"
      item        : "^feature lldp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.4.1 Configure LLDP"
      info        : "LLDP is a discovery protocol that transmits information about the capabilities and current status of a device and its interfaces. LLDP devices use the protocol to solicit information only from other LLDP devices. You can use LLDP to discover and view information about many devices that are directly attached to the switch.

    In many situations LLDP is required for normal operation (for instance for auto-provisioning, or for network configuration of VOIP handsets or Wireless Access Points).

    LLDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that LLDP be disabled or restricted to receive-only on any link that links to equipment not owned by your organization.

    In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable LLDP entirely.

    Rationale:

    To permit the discovery of non-Cisco devices, the switch also supports the Link Layer Discovery Protocol (LLDP), a vendor-neutral device discovery protocol that is defined in the IEEE 802.1ab standard. LLDP allows network devices to advertise information about themselves to other devices on the network. This protocol runs over the data-link layer, which allows two systems running different network layer protocols to learn about each other.

    LLDP advertises potentially sensitive information, including the current version of NX-OS and exposed IP addresses. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling LLDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have LLDP explicitly disabled.

    In more sensitive environments, disable LLDP globally.

    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To enable the LLDP feature, then enable LLDP:

    switch(config)# feature lldp

    To disable LLDP globally:

    switch(config)# no feature lldp

    To disable LLDP on a specific interface - note that transmit and receive capabilities are controlled independently. While in many cases LLDP is not required at all, often only LLDP receive is needed for correct operation.:

    switch(config)# int Ethernet x/y
    switch(config-if)# no lldp transmit
    switch(config-if)# no lldp receive

    Default Value:

    LLDP is not enabled by default. If the LLDP feature is enabled, the protocol is enabled for both send and receive on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : ".*lldp (transmit|receive).*"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.4.1 Configure LLDP"
      info        : "LLDP is a discovery protocol that transmits information about the capabilities and current status of a device and its interfaces. LLDP devices use the protocol to solicit information only from other LLDP devices. You can use LLDP to discover and view information about many devices that are directly attached to the switch.

    In many situations LLDP is required for normal operation (for instance for auto-provisioning, or for network configuration of VOIP handsets or Wireless Access Points).

    LLDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that LLDP be disabled or restricted to receive-only on any link that links to equipment not owned by your organization.

    In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable LLDP entirely.

    Rationale:

    To permit the discovery of non-Cisco devices, the switch also supports the Link Layer Discovery Protocol (LLDP), a vendor-neutral device discovery protocol that is defined in the IEEE 802.1ab standard. LLDP allows network devices to advertise information about themselves to other devices on the network. This protocol runs over the data-link layer, which allows two systems running different network layer protocols to learn about each other.

    LLDP advertises potentially sensitive information, including the current version of NX-OS and exposed IP addresses. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling LLDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have LLDP explicitly disabled.

    In more sensitive environments, disable LLDP globally.

    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To enable the LLDP feature, then enable LLDP:

    switch(config)# feature lldp

    To disable LLDP globally:

    switch(config)# no feature lldp

    To disable LLDP on a specific interface - note that transmit and receive capabilities are controlled independently. While in many cases LLDP is not required at all, often only LLDP receive is needed for correct operation.:

    switch(config)# int Ethernet x/y
    switch(config-if)# no lldp transmit
    switch(config-if)# no lldp receive

    Default Value:

    LLDP is not enabled by default. If the LLDP feature is enabled, the protocol is enabled for both send and receive on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature cdp"
      item        : "^feature cdp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.4.2 Configure CDP"
      info        : "The Cisco Discovery Protocol (CDP) is a media-independent and protocol-independent protocol that runs on all Cisco-manufactured equipment including routers, bridges, access and communication servers, and switches. You can use CDP to discover and view information about all the Cisco devices that are directly attached to the device.

  Each device that you configure for CDP sends periodic advertisements to a multicast address. Each device advertises at least one address at which it can receive SNMP messages. The advertisements also contain hold-time information, which indicates the length of time that a receiving device should hold CDP information before removing it. You can configure the advertisement or refresh timer and the hold timer.

  CDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that CDP be disabled on any link that links to equipment not owned by your organization. In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable CDP entirely

  Rationale:

  CDP advertises potentially sensitive information, including the current version of NX-OS. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling CDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have CDP explicitly disabled.

  In more sensitive environments, disable CDP globally.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Enabling CDP Globally

  switch(config)# cdp enable

  Enabling on one interface

  switch(config)# int Ethernet x/y
  switch(config-if)# cdp enable

  To disable CDP globally:

  switch(config-if)# no cdp enable

  To disable CDP on one interface only:

  switch(config)# int Ethernet x/y
  switch(config-if)# no cdp enable

  Default Value:

  CDP is enabled by default, and is enabled on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.2,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "^cdp enable"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.4.2 Configure CDP"
      info        : "The Cisco Discovery Protocol (CDP) is a media-independent and protocol-independent protocol that runs on all Cisco-manufactured equipment including routers, bridges, access and communication servers, and switches. You can use CDP to discover and view information about all the Cisco devices that are directly attached to the device.

  Each device that you configure for CDP sends periodic advertisements to a multicast address. Each device advertises at least one address at which it can receive SNMP messages. The advertisements also contain hold-time information, which indicates the length of time that a receiving device should hold CDP information before removing it. You can configure the advertisement or refresh timer and the hold timer.

  CDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that CDP be disabled on any link that links to equipment not owned by your organization. In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable CDP entirely

  Rationale:

  CDP advertises potentially sensitive information, including the current version of NX-OS. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling CDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have CDP explicitly disabled.

  In more sensitive environments, disable CDP globally."
      solution    : "Enabling CDP Globally

  switch(config)# cdp enable

  Enabling on one interface

  switch(config)# int Ethernet x/y
  switch(config-if)# cdp enable

  To disable CDP globally:

  switch(config-if)# no cdp enable

  To disable CDP on one interface only:

  switch(config)# int Ethernet x/y
  switch(config-if)# no cdp enable

  Default Value:

  CDP is enabled by default, and is enabled on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.2,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature fcoe"
      item        : "^feature fcoe"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.5.2 Configure FCoE Zoning - vsan database"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "vsan database"
      item        : "vsan .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.5.2 Configure FCoE Zoning - interface vfc"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface vfc .+"
      item        : "bind .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.5.2 Configure FCoE Zoning - vsan database"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.5.2 Configure FCoE Zoning - interface vfc"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "4.1 Configure Local Configuration Backup Schedule"
  info        : "Using the job scheduler function allows the user to automate backups. This ensures that regular backups are created.

Rationale:

Having current backups creates an environment where the user can roll back a config in the event of configuration failure. Additionally in the event of a compromise a recent backup can get the device back up to running condition in a small matter of time."
  solution    : "switch(config)# scheduler job name [local backup]
switch(config-job)#copy running-config startup-config

Set up timetable for this backup.

switch(config)# scheduler schedule name [backups]
switch(config-schedule)# schedule name [backups]
switch(config-schedule)# time weekly [day 00:00]

Default Value:

not enabled"
  reference   : "800-171|3.8.9,800-53|CP-9.,CIS_Recommendation|4.1,CSCv7|10.2,CSCv7|11.3,CSF|PR.IP-4,ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,LEVEL|1M,NESA|M5.2.3,NESA|T2.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "scheduler job name .+"
  item        : "copy running-config startup-config"
</item>

<item>
  type        : CONFIG_CHECK
  description : "4.2 Configure a Remote Backup Schedule"
  info        : "NX-OS can be configured to initiate remote backups using scheduled jobs. This recommendation can also be satisfied (and likely satisfied better) using a host based backup tool, using SSH or SCP.

Rationale:

Remote backups are preferred over local backups, as an attacker that has compromised a device also has full access to any locally stored files (which local backups are). In that situation, an attacker can modify or delete the stored backups, impeding any recovery or remediation efforts.

Impact:

A host-based backup solution is preferred over one implemented locally. Locally configured backups have several security issues. By protocol, they are:

TFTP - cleartext, which is susceptible to interception or modification over the wire and the target filesystem allows unauthenticated writes (and usually unauthenticated reads)

FTP or HTTP - cleartext, which is susceptible to interception or modification over the wire. Credentials are embedded in the job configuration

HTTPS, SCP, SFTP: encrypted, but credentials are still embedded in the job configuration"
  solution    : "Note that this first example job uses tftp for backups. The risk here is that the backup is sent in clear-text, so can be intercepted and/or modified in transit.

switch(config)# Scheduler job name [backup-cfg]
switch(config-job)copy running-config tftp://1.2.3.4/$(SWITCHNAME)-cfg.$(TIMESTAMP) vrf management

This example job uses SCP. The risk here is that the credentials need to be embedded in the configuration, so can be recovered if the backup repository is compromised. As this is true for all local passwords, the risk may be deemed low in some organizations.

switch(config)# scheduler aaa-authentication username <username> password <some complex password>

switch(config)# Scheduler job name <backup-cfg>
switch(config-job)copy running-config scp://1.2.3.4/$(SWITCHNAME)-cfg.$(TIMESTAMP) vrf management

Whatever the protocol, set timetable for this backup

switch(config)# scheduler schedule name [backups]
switch(config-schedule)# schedule name [backups]
switch(config-schedule)# job name <backup-cfg>
switch(config-schedule)# time weekly [day 00:00]

While this can certainly work, if the backup server IP should ever change, the effort to fix this across multiple switches can be both error-prone and time-intensive. It is normally recommended to backup configurations from the backup server to the NX-OS switch over SSH or SCP, rather than from the switch to the host. As this config (host to switch) resides on the remote host, it cannot be audited from the switch."
  reference   : "800-171|3.8.9,800-53|CP-9.,CIS_Recommendation|4.2,CSCv7|10.2,CSCv7|11.3,CSF|PR.IP-4,ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,LEVEL|1M,NESA|M5.2.3,NESA|T2.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "scheduler job name .+"
  item        : "copy running-config (tftp|ftp|http|https|scp|sftp).+"
</item>

</check_type>
