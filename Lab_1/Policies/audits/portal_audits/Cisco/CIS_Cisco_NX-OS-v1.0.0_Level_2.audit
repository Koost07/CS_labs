#
# This script is Copyright (C) 2004-2021 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2021/06/17 $
#
# Description : This document implements the security configuration as recommended by the
#               CIS Cisco NX-OS Becnhmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS Cisco NX-OS L2 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Cisco NX-OS L2</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/3102</link>
#</spec>
#<labels>cisco,cis,nx-os</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7,CIS_Recommendation</benchmark_refs>
#<variables>
#  <variable>
#    <name>ACL_VTY</name>
#    <default>acl-mgt</default>
#    <description>ACL for VTY Connections</description>
#    <info>The ACL for trusted subnets and/or stations for VTY connections.</info>
#  </variable>
#  <variable>
#    <name>PASSWORD_MIN_LENGTH</name>
#    <default>20</default>
#    <description>Password minimum length</description>
#    <info>The minimum length for global passwords.</info>
#  </variable>
#  <variable>
#    <name>PASSWORD_MAX_LENGTH</name>
#    <default>127</default>
#    <description>Password maximum length</description>
#    <info>The maximum length for global passwords.</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Cisco">

<item>
  type        : CONFIG_CHECK
  description : "1.1.1 Configure AAA Authentication - TACACS - feature tacacs+"
  info        : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution    : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.1.1,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.2,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,LEVEL|2A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "feature tacacs\+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - tacacs-server"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|1.1.1,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,LEVEL|2A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,PCI-DSSv3.2|8.1,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "tacacs-server host .+ key .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - aaa group"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.1,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  context         : "aaa group server tacacs\+ .+"
  item            : "server .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.1 Configure AAA Authentication - TACACS - aaa authentication"
  info            : "TACACS+ is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

In many organizations TACACS+ is preferred over RADIUS when TACACS+ is supported by the AAA server and network device. This is because (with additional work) TACACS+ also supports command authorization, restricting specific users to the command set that they can use on the device. However, TACACS+ started as a Cisco centric protocol, so is not as widely supported by other vendors in comparison to RADIUS.

In addition, RADIUS use is much more widespread (primarily for secure wireless authentication), so is often already in place.

Finally, command authorization is a complex endeavor and is very rarely implemented because of that, so the main advantage of TACACS+ is very often not realized.



Impact:

Implementing TACACS+ (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First, enable TACACS+ in NX-OS

switch(config)#feature tacacs+

Next, define two or more TACACS+ servers:

switch(config)#tacacs-server host 3.4.5.6 key somekey
switch(config)#tacacs-server host 4.5.6.7 key someotherkey

define the aaa group for TACACS+:

switch(config)#aaa group server tacacs+ TACACSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the aaa authentication list for both console and default access:

switch(config)#aaa authentication login default group TACACSGROUP local
switch(config)#aaa authentication login console group TACACSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default TACACS+ is not implemented"
  reference       : "CIS_Recommendation|1.1.1,CSCv7|16.2,LEVEL|1A,LEVEL|2A,PCI-DSSv3.2|8.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "aaa authentication login (default|console) group .+ local"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - radius-server host"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.2,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,PCI-DSSv3.2|8.1,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "radius-server host .+ key .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - aaa group"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "800-53|IA-3.,CIS_Recommendation|1.1.2,CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,LEVEL|2A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  context         : "aaa group server radius .+"
  item            : "server .+"
  min_occurrences : "2"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.1.2 Configure AAA Authentication - RADIUS - aaa authentication"
  info            : "RADIUS is an authentication protocol that Cisco NX-OS devices can use for authentication of management users against a remote AAA server. These management users can access the Cisco NX-OS device through any protocol and use this back-end authentication. Using a central authentication store (such as Active Directory) ensures that all administrative actions are tied to named users, making the tracking of changes much easier. It also makes tracking compromised accounts and malicious activities much easier.

Rationale:

Central authentication is key as it minimizes the effort in managing named user accounts. Keeping local admin accounts opens the door to all the issues inherent in shared accounts, namely:

Errors in implementation being done by generic admin accounts, which can then be denied by all.

Shared credentials staying unchanged when administrative staff leave the organization or change roles.

Giving malicious actors the ability to recover shared credentials from saved device backups

RADIUS is the most widely used protocol for this purpose, since it is a requirement for secure wireless authentication (EAP-TLS). Just as important, RADIUS is much better supported by most non-Cisco vendors for back-end authentication.

Impact:

Implementing RADIUS (or any central authentication solution) ensures that only named users are allowed to gain an administrative session to the device. This allows:

Tracking of all changes to named users

Simplification of reconciling changes to a change management process

Off-loading password change cycles and password complexity requirements to that central authentication store

Simplification of removing admin access as administrators leave the organization or change their roles in the organization"
  solution        : "First define two or more RADIUS Servers

switch(config)#radius-server host 3.4.5.6 key somekey authentication accounting
switch(config)#radius-server host 4.5.6.7 key someotherkey authentication accounting

Then create an AAA group for RADIUS

switch(config)# aaa group server radius RADIUSGROUP
    server 3.4.5.6
    server 4.5.6.7

Finally, create the authentication lists in the correct order - to be effective the RADIUS group needs to appear first in the list. Both the default and console access should be secured in the same way:

switch(config)# aaa authentication login default group RADIUSGROUP local
switch(config)# aaa authentication login console group RADIUSGROUP local

It is common to include 'local' as the last entry in the list, to allow access to administer the device even if the RADIUS server is offline. Note that while this ensures access in the case of the device or the RADIUS server being offline, it also means that if an attacker can DOS the RADIUS Servers, they can authenticate locally as well.

Default Value:

By default RADIUS is not implemented"
  reference       : "CIS_Recommendation|1.1.2,CSCv7|16.2,LEVEL|1A,LEVEL|2A,PCI-DSSv3.2|8.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "aaa authentication login (default|console) group .+ local"
  min_occurrences : "2"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.1 Ensure Idle Timeout for Login Sessions is set to 5 minutes - ssh idle-timeout"
  info        : "Verify device is configured to automatically disconnect sessions after a fixed idle time.

Rationale:

This prevents unauthorized users from misusing abandoned sessions. For example, if the network administrator leaves for the day and leaves a computer open with an enabled login session accessible. There is a trade-off here between security (shorter timeouts) and usability (longer timeouts). Review your local policies and operational needs to determine the best timeout value. In most cases, this should be no more than 10 minutes.

Impact:

Not having a timeout on idle sessions has several impacts:

Unattended sessions on an unlocked administrative workstation are susceptible to passers-by entering commands

If multiple sessions are exited by closing the session rather than logging out, the virtual sessions will remain active forever. When the maximum number of sessions is reached, additional administrative sessions will be denied.

If a console session is left open by simply disconnecting the console or USB cable, that session will remain available and logged in, in the state it was abandoned in for the next person who connects.

While a short timeout is typically desired, this can be changed temporarily during long-running operations (scheduled NX-OS updates for instance)."
  solution    : "Configure ssh and console timeouts to 120 seconds (2 minutes) to disconnect sessions after a fixed idle time.

switch(config)# ssh idle-timeout 120

switch(config) line console
switch(config-line)# exec-timeout 120

Default Value:

The default value for 'exec-timeout' is 0 (disabled) for both the vty and console lines"
  reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|1.2.1,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.5,ITSG-33|AC-12,LEVEL|1A,LEVEL|2A,NIAv2|NS49"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ssh idle-timeout ([1-9]|[1-9][0-9]|[12][0-9]{2}|300)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.1 Ensure Idle Timeout for Login Sessions is set to 5 minutes - console exec-timeout"
  info        : "Verify device is configured to automatically disconnect sessions after a fixed idle time.

Rationale:

This prevents unauthorized users from misusing abandoned sessions. For example, if the network administrator leaves for the day and leaves a computer open with an enabled login session accessible. There is a trade-off here between security (shorter timeouts) and usability (longer timeouts). Review your local policies and operational needs to determine the best timeout value. In most cases, this should be no more than 10 minutes.

Impact:

Not having a timeout on idle sessions has several impacts:

Unattended sessions on an unlocked administrative workstation are susceptible to passers-by entering commands

If multiple sessions are exited by closing the session rather than logging out, the virtual sessions will remain active forever. When the maximum number of sessions is reached, additional administrative sessions will be denied.

If a console session is left open by simply disconnecting the console or USB cable, that session will remain available and logged in, in the state it was abandoned in for the next person who connects.

While a short timeout is typically desired, this can be changed temporarily during long-running operations (scheduled NX-OS updates for instance)."
  solution    : "Configure ssh and console timeouts to 120 seconds (2 minutes) to disconnect sessions after a fixed idle time.

switch(config)# ssh idle-timeout 120

switch(config) line console
switch(config-line)# exec-timeout 120

Default Value:

The default value for 'exec-timeout' is 0 (disabled) for both the vty and console lines"
  reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|1.2.1,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv6|16.5,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,LEVEL|2A,NIAv2|NS49,PCI-DSSv3.1|8.1.8,PCI-DSSv3.1|12.3.8,PCI-DSSv3.2|8.1.8,PCI-DSSv3.2|12.3.8"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "line console"
  item        : "exec-timeout ([1-9]|[1-9][0-9]|[12][0-9]{2}|300)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.2 Restrict Access to VTY Sessions - VTY ACL"
  info        : "Restrict Management Access to trusted management stations and VLANs.

Rationale:

Exposing the management interface too broadly exposes that interface to MiTM (Monkey in the Middle) attacks as well as to credential stuffing attacks. The question 'should your receptionist have access to your core switch?' usually illustrates the need for this if there are any disagreements.

Impact:

Not restricting access to the management interface has several risks:

exposes your interface to credential stuffing attacks from commodity malware (such as Mirai)

highlights your device as missing simple security remediations to even simple scans. This invites other attacks in addition to credential stuffing.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Create an access-list that defines the various trusted subnets and/or stations:

switch(config)# ip access-list ACL-MGT
switch(config-acl)# remark access-class ACL
switch(config-acl)# permit ip 192.168.12.0/24 any
switch(config-acl)# deny ip any any log

It is suggested that all ACLs are commented to help self-document the configuration.
The last line in the ACL should read deny ip any any log to record all attempts to reach the management interface from unauthorized stations.
Apply the Access-Class to the VTY interface:

switch(config)# line vty
switch(config-line)# access-class ACL-MGT in

Default Value:

No access-class is applied by default"
  reference   : "CIS_Recommendation|1.2.2,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|1.2.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @ACL_VTY@ replaced with "acl-mgt" in field "context".
  context     : "ip access-list acl-mgt"
  item        : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.2.2 Restrict Access to VTY Sessions - line vty access-class"
  info        : "Restrict Management Access to trusted management stations and VLANs.

Rationale:

Exposing the management interface too broadly exposes that interface to MiTM (Monkey in the Middle) attacks as well as to credential stuffing attacks. The question 'should your receptionist have access to your core switch?' usually illustrates the need for this if there are any disagreements.

Impact:

Not restricting access to the management interface has several risks:

exposes your interface to credential stuffing attacks from commodity malware (such as Mirai)

highlights your device as missing simple security remediations to even simple scans. This invites other attacks in addition to credential stuffing."
  solution    : "Create an access-list that defines the various trusted subnets and/or stations:

switch(config)# ip access-list ACL-MGT
switch(config-acl)# remark access-class ACL
switch(config-acl)# permit ip 192.168.12.0/24 any
switch(config-acl)# deny ip any any log

It is suggested that all ACLs are commented to help self-document the configuration.
The last line in the ACL should read deny ip any any log to record all attempts to reach the management interface from unauthorized stations.
Apply the Access-Class to the VTY interface:

switch(config)# line vty
switch(config-line)# access-class ACL-MGT in

Default Value:

No access-class is applied by default"
  reference   : "CIS_Recommendation|1.2.2,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|1.2.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "line vty"
# Note: Variable @ACL_VTY@ replaced with "acl-mgt" in field "item".
  item        : "access-list acl-mgt in"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.1 Enable Password Complexity Requirements for Local Credentials"
  info        : "While configuring a back-end authentication store is the recommended configuration, at least one local administrative account must be configured. For this reason, ensuring a minimum bar for password strength for all local administrative accounts is important. Enabling this setting enforces passwords that conform to the following rules:

At least eight characters long

Does not contain many consecutive characters (such as 'abcd')

Does not contain many repeating characters (such as 'aaabbb')

Does not contain dictionary words

Does not contain proper names

Contains both uppercase and lowercase characters

Contains numbers

Rationale:

While in ideal conditions local credentials won't be used, there are many scenarios (such as deployed on a purely public network or on an air gapped network) where this is the only option. Even if a back-end authentication source is used, if that service is not available the fall-back authentication is often to local credentials.

Impact:

Having a simple password (for instance, based on a dictionary word) for administrative credentials makes that account susceptible to credential stuffing attacks. Even if using a back-end credential store such as TACACS+ or RADIUS, an attacker can drill down to the local credentials by taking the back-end service offline."
  solution    : "A single command enables this:

switch(config)# password strength-check

Default Value:

Password strength checking is enabled by default. When enabled, this setting does not appear in the configuration. When enabled, the password strength settings are:

At least eight characters long

Does not contain many consecutive characters (such as 'abcd')

Does not contain many repeating characters (such as 'aaabbb')

Does not contain dictionary words

Does not contain proper names

Contains both uppercase and lowercase characters

Contains numbers

Additional Information:

https://www.cisco.com/c/en/us/td/docs/switches/datacenter/sw/4_0/nx-os/security/configuration/guide/sec_nx-os_config/sec_rbac.html#wp1314939"
  reference   : "800-171|3.5.2,800-53|IA-5(1),CIS_Recommendation|1.3.1,CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5(1),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "password strength-check"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.2 Configure Password Encryption"
  info        : "You can enable strong, reversible 128-bit Advanced Encryption Standard (AES) password encryption, also known as type-6 encryption. To start using type-6 encryption, you must enable the AES password encryption feature and configure a master encryption key, which is used to encrypt and decrypt passwords. After you enable AES password encryption and configure a master key, all existing and newly created clear-text passwords for supported applications (currently RADIUS and TACACS+) are stored in type-6 encrypted format, unless you disable type-6 password encryption. You can also configure Cisco NX-OS to convert all existing weakly encrypted passwords to type-6 encrypted passwords.

Rationale:

Encryption is a good way to protect data that will be used later. Encrypted data can later be decrypted to its original value. Although encrypting passwords protects them, typically, an application uses the same encryption key for storing all user passwords.

Impact:

Encryption of passwords is used to protect it from being sent over the wire cleartext. By applying encryption you are making it more difficult for an adversary to gain access to your device/network"
  solution    : "Configure a master key to be used with the AES password encryption feature. The key can contain between 16 and 32 alphanumeric characters

switch# key config-key ascii
New Master Key:
Retype Master Key:

switch(config)# feature password encryption aes"
  reference   : "800-171|3.5.10,800-53|IA-5(1)(c),CIS_Recommendation|1.3.2,CSCv7|5.1,CSF|PR.AC-1,ITSG-33|IA-5(1)(c),LEVEL|2M,NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "feature password encryption aes"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.3 Set password lifetime, warning time and grace time for local credentials"
  info        : "NX-OS has commands to adjust the permitted lifetime of passphrases for local credentials, as well as the 'warning time' before expiry and the 'grace time' after expiry. If local credentials are in use, it is recommended that these be set to a value appropriate to the organization. Note that these timers cannot be set for the 'admin' credential.

Rationale:

Impact:

If local credentials are in regular use, it is recommended that a reasonable (non default) value be set for the passphrase timer values.
The default of an infinite lifetime is of course not appropriate. Previous guidance of password changes on 30 or 60 day cycles however is also not appropriate if complex passwords are used and enforced. Some middle ground should be set - for instance, a password change cycle on a 6 or 12 month rotation is often easy to track.

This entire discussion illustrates clearly why it is most often advisable to use a back-end authentication source for credential storage. In an organization that has multiple switches and other infrastructure, setting a password rotation is a recipe that has the risk of missing or entirely forgetting the change date, or of missing one or more devices in the change procedure. Since password recovery after the grace period involves a reboot of the entire switch, this end result is undesirable in the extreme.

The best recommendation is to set a long, complex password for any local administrative accounts, then use a back-end authentication source, so that these local accounts are only used in the event that the back-end authentication source is not reachable.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To set passphrase timers globally:

switch(config)# userpassphrase default-warntime <days>
switch(config)# userpassphrase default-gracetime <days>
switch(config)# userpassphrase default-lifetime <days>

example:

switch(config)# userpassphrase default-warntime 10
switch(config)# userpassphrase default-gracetime 10
switch(config)# userpassphrase default-lifetime 180

To set passphrase time values per-user:

switch(config)# username <userid> passphrase lifetime <days> warntime <time in days> gradetime <time in days>

example

switch(config)# username test passphrase lifetime 180 warntime 10 gracetime 10

Default Value:

By default, the passphrase time values per-user are:

Lifetime: 99999 (this value indicates no expiry, or an infinite lifetime)

Gracetime: 3 days

Warntime: 14 days

By default, there are no global default values set, they are assigned per local user as the local accounts are created.

By default the 'admin' account does not have any associated timers, and these values cannot be set for this account."
  reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIS_Recommendation|1.3.3,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "(username.*passphrase|userpassphrase.*)"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.3.4 Set password length for local credentials"
  info        : "Password length should be set to some value that makes compromising any captured hashed difficult. This generally means that the maximum value of 127 should never be changed, and that the minimum value, which defaults to 8, should always be increased. Typical values for minimum passphrase length of administrative users are generally 20 characters or longer (values of 30 or 32 are often seen).
A specific value is not recommended, since then a savvy attacker may start their attack with 'only passwords of the exact length recommended in the CIS benchmark', which would reduce their attack time.

Rationale:

Passwords are stored in a non-reversible, hashed and salted format. If an attacker should 'harvest' a password hash, it is of course hashed in a non-reversible format - however, it can be decoded using dictionary and/or brute-force attacks using tools such as hashcat or John the Ripper (JtR). The single best obstacle to an attack of this type is password length - the longer the password the more difficult it is to decode.
Since the default password hash schema on the NX-OS version 9 platform is MD5, it's recommended that the password length be set to (and enforced at) some longer value, for instance 24, 32 or even longer values. This may seem lengthy, until you consider that with modern hardware running through the entire namespace of 8 or 9 characters is often easily done in less than an hour.

This discussion actually illustrates why the best recommendation is to not use local credentials at all, but rather to use a back-end authentication source (using RADIUS or TACACS+). In this scenario, local administrative accounts are only used if the back-end authentication source is unavailable. This makes any compromised local credentials much harder to use, a successful attack would have to also take back end authentication sources offline (or make them otherwise unavailable).





Impact:

Not setting a maximum value leaves administrators with the freedom to set short passwords. If a stored configuration file is collected by an attacker (perhaps from a file share), this means that any password hashes in the stored configuration will be more likely to be 'cracked', giving the attacker the unencrypted credential to the target switch."
  solution    : "Passphrase length values can only be set globally, not per-local user

switch(config)# userpassphrase min-length <minimum passphrase length>
switch(config)# userpassphrase max-length <maximum passphrase length>

or in a single command:
userpassphrase min-length max-length
example:

switch(config)# userpassphrase min-length 20
switch(config)# userpassphrase max-length 127

Or in a single command:

switch(config)# userpassphrase min-length 20 max-length 127

Default Value:

The default minimum passphrase length is 8. This has possible values between 8 and 127. The default maximum passphrase length is 127. This has possible values between 80 and 127."
  reference   : "800-171|3.5.7,800-53|IA-5(1)(a),CIS_Recommendation|1.3.4,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1M,LEVEL|2M,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
# Note: Variable @PASSWORD_MAX_LENGTH@ replaced with "127" in field "item".
# Note: Variable @PASSWORD_MIN_LENGTH@ replaced with "20" in field "item".
  item        : "userpassphrase min-length 20 max-length 127"
</item>

<if>
  <condition type:"OR">
    <item>
      type        : CONFIG_CHECK
      description : "Check for SNMPv3 engineID"
      item        : "snmp-server engineID remote .+"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "Check for SNMPv3 group v3"
      item        : "snmp-server group .+ v3 .+"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "1.4.3 Configure SNMPv3 - group v3"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "CIS_Recommendation|1.4.3,CSCv7|11.5,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|7.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server group .+ v3 .+"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.4.3 Configure SNMPv3 - engineID"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.4.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|11.5,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server engineID remote .+"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.4.3 Configure SNMPv3 - group v3"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "CIS_Recommendation|1.4.3,CSCv7|11.5,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|7.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.4.3 Configure SNMPv3 - engineID"
      info        : "The Simple Network Management Protocol (SNMP) is an application-layer protocol that provides a message format for communication between SNMP managers and agents. SNMP provides a standardized framework and a common language used for the monitoring and management of devices in a network. SNMPv3 provides secure access to devices by a combination of authenticating and encrypting frames over the network.

  Rationale:

  SNMPv3 provides for both security models and security levels. A security model is an authentication strategy that is set up for a user and the role in which the user resides. A security level is the permitted level of security within a security model. A combination of a security model and a security level determines which security mechanism is employed when handling an SNMP packet.

  Impact:

  SNMPv3 provides security features such as:

  Message Integrity - Ensures that a packet has not be tampered with

  Authentication - Determines message is from a valid source

  Encryption - Scrambles the packet content to prevent being seen by unauthorized sources.

  SNMPv2 does not provide any of these features, as SNMPv2 is a cleartext protocol that exposes the community string in each exchange of information."
      solution    : "Create SNMPv3 Users (and groups if needed). Ensure that SHA hashes are used rather than MD5. Also ensure that appropriate authorization levels are set ('network-admin' is shown below):

  switch(config)#snmp-server user SNMPv3_UserName network-admin auth sha 0x12624c4dcb90cffeb43a1177324f547d priv 0x12624c4dcb90cffeb43a1177324f547d localizedkey

  To set SNMP to version 3, add the 'version' parameter to the snmp-server command (note that SNMPv3 users and groups need to be configured first):

  switch(config)# snmp-server host 1.2.3.4 traps version 3 priv <SNMPv3_UserName>

  To enforce encryption for all SNMPv3 Users. This can be done by individual user, but it's recommended to enforce it globally:

  switch(config)# snmp-server globalEnforcePriv

  Default Value:

  Not configured"
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.4.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|11.5,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "1.4.4 Configure SNMP Traps"
  info        : "SNMP relies on an architecture which consists of a manager and an agent. SNMP Managers can be any machine on the network that is running SNMP to collect and process information from the devices on either the LAN or WAN.

Rationale:

Utilizing traps can alert the user of issues or compromises in advance. For example if the device is overheating or if an admin users account is being utilized during odd hours."
  solution    : "Examples of traps
All notifications

switch(config)##switch(config)#snmp-server enable traps

CISCO-AAA-SERVER-MIB

switch(config)#switch(config)#snmp-server enable traps aaa

ENITY-MIB, CISCO-ENTITY-FRU-CONTROL-MIB, CISCO-ENTITY-SENSOR-MIB

switch(config)#switch(config)#snmp-server enable traps entity
switch(config)#switch(config)#snmp-server enable traps entity fru

CISCO-LICENSE-MGR-MIB

switch(config)#switch(config)#snmp-server enable traps license

IF-MIB

switch(config)#switch(config)#snmp-server enable traps link
switch(config)#CISCO-PSM-MIB
switch(config)#switch(config)#snmp-server enable traps port-security
switch(config)#snmpv2-MIB
switch(config)#switch(config)#snmp-server enable traps switch(config)#snmp
switch(config)#switch(config)#snmp-server enable traps switch(config)#snmp authentication

CISCO-FCC-MIB

switch(config)##switch(config)#snmp-server enable traps fcc

CISCO-DM-MIB

switch(config)#snmp-server enable traps fcdomain

CISCO-NS-MIB

switch(config)#snmp-server enable traps fcns

CISCO-FCS-MIB

switch(config)#snmp-server enable traps fcs discovery-complete
switch(config)#snmp-server enable traps fcs request-reject

CISCO-FDMI-MIB

switch(config)#snmp-server enable traps fdmi

CISCO-FSPF-MIB

switch(config)#snmp-server enable traps fspf

CISCO-PSM-MIB

switch(config)#snmp-server enable traps port-security

CISCO-RSCN-MIB

switch(config)#snmp-server enable traps rscn
switch(config)#snmp-server enable traps rscn els
switch(config)#snmp-server enable traps rscn ils

CISCO-ZS-MIB

switch(config)#snmp-server enable traps zone
switch(config)#snmp-server enable traps zone default-zone-behavior-change
switch(config)#snmp-server enable traps zone merge-failure
switch(config)#snmp-server enable traps zone merge-success
switch(config)#snmp-server enable traps zone request-reject
switch(config)#snmp-server enable traps zone unsupp-mem

Default Value:

Not configured"
  reference   : "800-171|3.4.2,800-53|CM-6.,CIS_Recommendation|1.4.4,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|12.5.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server enable traps .+"
  required    : NO
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.4.5 Configure SNMP Source Interface for Traps - snmp-server host"
  info        : "The administrator can configure SNMP to the interfaces source IP address for notifications

Rationale:

By using a source interface the administrator can ensure that the source IP of SNMP traps does not change as the network topology changes. For instance, if a link fails or is reconfigured, and a different IP address is now topologically 'closer' to the SNMP trap server. There are a few typical candidates for an SNMP source IP address:

A loopback address, as loopbacks are always up, and can then route over any transit interface.

The MGMT 0 address, as that provides an out-of-band path to the SNMP server. SNMP traffic volume will not affect traffic volumes, and SNMP cannot be 'starved' for bandwidth by production traffic. If the entire path is out-of-band, this also provides excellent protection from eavesdropping by malicious actors that may be on the 'production data side' of the switch.

A combination of the two (this is less common) - for instance a loopback address in the management VRF"
  solution    : "switch(config)# snmp-server host 1.2.3.4 source-interface mgmt 0

or

switch(config)# snmp-server host 1.2.3.4 source-interface loopback 0

SNMP Server traps or informs:

switch(config)# snmp-server source-interface traps loopback 0
switch(config)# snmp-server source-interface informs loopback 0

or

switch(config)# snmp-server source-interface traps mgmt 0
switch(config)# snmp-server source-interface informs mgmt 0

Default Value:

Not configured. By default SNMP traffic is sourced from the layer 3 interface that is topologically closest to the configured SNMP server"
  reference   : "CIS_Recommendation|1.4.5,CSCv7|5.1,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server host .+ source-interface .+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.4.5 Configure SNMP Source Interface for Traps - snmp-server traps/informs"
  info            : "The administrator can configure SNMP to the interfaces source IP address for notifications

Rationale:

By using a source interface the administrator can ensure that the source IP of SNMP traps does not change as the network topology changes. For instance, if a link fails or is reconfigured, and a different IP address is now topologically 'closer' to the SNMP trap server. There are a few typical candidates for an SNMP source IP address:

A loopback address, as loopbacks are always up, and can then route over any transit interface.

The MGMT 0 address, as that provides an out-of-band path to the SNMP server. SNMP traffic volume will not affect traffic volumes, and SNMP cannot be 'starved' for bandwidth by production traffic. If the entire path is out-of-band, this also provides excellent protection from eavesdropping by malicious actors that may be on the 'production data side' of the switch.

A combination of the two (this is less common) - for instance a loopback address in the management VRF"
  solution        : "switch(config)# snmp-server host 1.2.3.4 source-interface mgmt 0

or

switch(config)# snmp-server host 1.2.3.4 source-interface loopback 0

SNMP Server traps or informs:

switch(config)# snmp-server source-interface traps loopback 0
switch(config)# snmp-server source-interface informs loopback 0

or

switch(config)# snmp-server source-interface traps mgmt 0
switch(config)# snmp-server source-interface informs mgmt 0

Default Value:

Not configured. By default SNMP traffic is sourced from the layer 3 interface that is topologically closest to the configured SNMP server"
  reference       : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.4.5,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "snmp-server source-interface (traps|informs) .+"
  min_occurrences : "2"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "1.4.6 Do not Configure a Read Write SNMP Community String"
  info        : "SNMP RW (Read-Write) access allows stations with Management access to both read and write SNMP MIB objects.

Rationale:

SNMP is typically used for monitoring specific operational characteristics of the switch. These tasks typically only require read access. Permitting RW (Read-Write) access permits SNMP to modify some SNMP values.

Impact:

Permitting SNMP RW Access not only allows 'write' access to some SNMP MIB Objects, which allows a malicious attacker to modify some operational characterstics of the switch. By extension this access allows a malicious actor to collect the entire configuration of the device."
  solution    : "Only use RO groups for SNMPv2. The most common implementation is 'network-operator', because if you use the legacy syntax:

switch(config)# snmp-server community <some complex string> ro

the switch will translate this to the new syntax, using 'network-operator' group

switch(config)# snmp-server community <some complex string> group network-operator

Default Value:

SNMP is not configured by default. The default SNMP Groups and permissions are:

switch# sho snmp group



Role: aaa-db-admin

  Description: Predefined AAA DB admin, has no cli permissions. Allows RESTful A

PI

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: aaa-db-operator

  Description: Predefined AAA DB operator, has no cli permissions. Allows RESTfu

l API

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: l3-db-admin

  Description: Predefined L3 DB admin, has no cli permissions. Allows RESTful AP

I

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: l3-db-operator

  Description: Predefined L3 DB operator, has no cli permissions. Allows RESTful

 API

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: network-admin

  Description: Predefined network admin role has access to all commands

  on the switch

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: network-operator

  Description: Predefined network operator role has access to all read

  commands on the switch

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: nxdb-admin

  Description: Predefined nxdb-admin role has no cli permissions.

  Allows json-rpc get and set.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       deny    command



Role: nxdb-operator

  Description: Predefined nxdb-operator role has no cli permissions.

  Allows json-rpc get.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       deny    command



Role: vdc-admin

  Description: Predefined vdc admin role has access to all commands within

  a VDC instance

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: vdc-operator

  Description: Predefined vdc operator role has access to all read commands

  within a VDC instance

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read



Role: dev-ops

  Description: Predefined system role for devops access. This role

  cannot be modified.

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  6       permit  command                         conf t ; username *

  5       permit  command                         attach module *

  4       permit  command                         slot *

  3       permit  command                         bcm module *

  2       permit  command                         run bash *

  1       permit  command                         python *



Role: priv-15

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: priv-14

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  1       permit  read-write



Role: priv-13

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-12

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-11

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-10

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-9

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-8

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-7

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-6

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-5

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-4

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-3

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-2

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-1

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)



Role: priv-0

  Description: This is a system defined privilege role.

  Vlan policy: permit (default)

  Interface policy: permit (default)

  Vrf policy: permit (default)

  -------------------------------------------------------------------

  Rule    Perm    Type        Scope               Entity

  -------------------------------------------------------------------

  10      permit  command                         traceroute6 *

  9       permit  command                         traceroute *

  8       permit  command                         telnet6 *

  7       permit  command                         telnet *

  6       permit  command                         ping6 *

  5       permit  command                         ping *

  4       permit  command                         ssh6 *

  3       permit  command                         ssh *

  2       permit  command                         enable *

  1       permit  read"
  reference   : "800-171|3.1.5,800-53|AC-6.,CIS_Recommendation|1.4.6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|9.2,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1M,LEVEL|2M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "snmp-server community .+ (rw|group network-admin)"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.5.1 Ensure Syslog Logging is configured - logging server/source-interface"
  info        : "Logging should be configured such that: Logging level is set to a level sufficient for the target device Logs should be sent off the device to a syslog or trap server or servers Logs should be sourced from a consistent interface to ensure easy attribution of logs to the correct device Logging levels should be explicitly set to a level appropriate to the device.

Rationale:

Logging on any network device is always limited by how much storage can be set aside for logs. It's important for this reason to send all log entries to a central device that can collect and correlate all logs, either in a database or in flat text files. The key thing this approach contributes is central logs on a larger storage device (disk) Logging to an off-device target also makes clearing any incriminating logs more difficult for an attacker, or if an attempt is made to hide a mistake.
Logging off-device also ensures that any clearing of logs is also seen and can be alerted on. Sourcing all logs from a consistent interface ensures that log entries can be easily attributed to the correct device once they arrive at the log server. If a logging interface is not set, the source IP address of individual log entries can change as the network topology changes. This situation can make any subsequent log analysis more difficult.

Impact:

Because syslog traffic is not encrypted, it's recommended to ensure that the path the log traffic takes is not susceptible to any MiTM (Monkey in the Middle) attacks. Often this means assigning a dedicated management interface, which by default is in a separate VRF."
  solution    : "Configure a logging level and a syslog host:

switch(config)#logging server <server ip address or name>
switch(config)#logging level <service name> <logging level>

or

switch(config)#logging level all <logging level>
switch(config)#logging source-interface <interface name>
switch(config)#logging server <server ip address or name>

optionally:

switch(config)#logging server <server ip address or name>  vrf [management vrf name]
switch(config)#logging source-interface <mgmt 0 or other dedicated management interface>

Default Value:

By default syslog logging is not configured.

By default the source interface of all logs will be the interface in the 'default' vrf that is topologically closest to the logging host, if defined.

By default, the logging levels (by service or feature) are shown below:

switch# sho logging level



Facility        Default Severity        Current Session Severity

--------        ----------------        ------------------------

aaa                     3                       3

acllog                  2                       2

aclmgr                  3                       3

aclqos                  5                       5

adbm                    2                       2

arp                     3                       3

auth                    0                       0

authpriv                3                       3

bootvar                 5                       5

callhome                2                       2

capability              2                       2

cdp                     2                       2

cert_enroll             2                       2

cfs                     3                       3

clis                    3                       3

clk_mgr                 2                       2

confcheck               2                       2

copp                    2                       2

cron                    3                       3

daemon                  3                       3

device_test             3                       3

dhclient                2                       2

dhcp_snoop              2                       2

diag_port_lb            2                       2

diagclient              2                       2

diagmgr                 2                       2

ecp                     5                       5

eltm                    2                       2

eth_port_channel        5                       5

ethpm                   5                       5

evmc                    5                       5

evms                    2                       2

feature-mgr             2                       2

fs-daemon               2                       2

ftp                     3                       3

ifmgr                   5                       5

igmp_1                  5                       5

interface-vlan          2                       2

ip                      3                       3

ipfib                   2                       2

ipqosmgr                4                       4

ipv6                    3                       3

kern                    3                       3

l2fm                    2                       2

l2pt                    3                       3

l3vm                    5                       5

lacp                    2                       2

licmgr                  6                       6

lldp                    2                       2

local0                  3                       3

local1                  3                       3

local2                  3                       3

local3                  3                       3

local4                  3                       3

local5                  3                       3

local6                  3                       3

local7                  3                       3

lpr                     3                       3

m2rib                   2                       2

m6rib                   5                       5

mail                    3                       3

mcm                     2                       2

mfdm                    2                       2

mmode                   2                       2

module                  5                       5

monitor                 3                       3

mrib                    5                       5

mvsh                    2                       2

news                    3                       3

ntp                     2                       2

otm                     3                       3

pfstat                  2                       2

pixm_gl                 4                       4

pixm_vl                 4                       4

platform                5                       5

plcmgr                  2                       2

plugin                  2                       2

port-profile            2                       2

radius                  3                       3

res_mgr                 5                       5

rpm                     5                       5

sal                     2                       2

scheduler               5                       5

securityd               3                       3

sflow                   2                       2

sksd                    3                       3

smm                     4                       4

snmpd                   2                       2

span                    3                       3

spm                     2                       2

stp                     3                       3

syslog                  3                       3

sysmgr                  3                       3

tamnw                   2                       2

telemetry               3                       3

template_manager        2                       2

u6rib                   5                       5

ufdm                    3                       3

urib                    5                       5

user                    3                       3

uucp                    3                       3

vdc_mgr                 6                       6

virtual-service         5                       5

vlan_mgr                2                       2

vshd                    5                       5

xbar                    5                       5

xmlma                   3                       3



0(emergencies)          1(alerts)       2(critical)

3(errors)               4(warnings)     5(notifications)

6(information)          7(debugging)"
  reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.1,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging (server|source-interface) .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.5.1 Ensure Syslog Logging is configured - logging level"
  info        : "Logging should be configured such that: Logging level is set to a level sufficient for the target device Logs should be sent off the device to a syslog or trap server or servers Logs should be sourced from a consistent interface to ensure easy attribution of logs to the correct device Logging levels should be explicitly set to a level appropriate to the device.

Rationale:

Logging on any network device is always limited by how much storage can be set aside for logs. It's important for this reason to send all log entries to a central device that can collect and correlate all logs, either in a database or in flat text files. The key thing this approach contributes is central logs on a larger storage device (disk) Logging to an off-device target also makes clearing any incriminating logs more difficult for an attacker, or if an attempt is made to hide a mistake.
Logging off-device also ensures that any clearing of logs is also seen and can be alerted on. Sourcing all logs from a consistent interface ensures that log entries can be easily attributed to the correct device once they arrive at the log server. If a logging interface is not set, the source IP address of individual log entries can change as the network topology changes. This situation can make any subsequent log analysis more difficult.

Impact:

Because syslog traffic is not encrypted, it's recommended to ensure that the path the log traffic takes is not susceptible to any MiTM (Monkey in the Middle) attacks. Often this means assigning a dedicated management interface, which by default is in a separate VRF."
  solution    : "Configure a logging level and a syslog host:

switch(config)#logging server <server ip address or name>
switch(config)#logging level <service name> <logging level>

or

switch(config)#logging level all <logging level>
switch(config)#logging source-interface <interface name>
switch(config)#logging server <server ip address or name>

optionally:

switch(config)#logging server <server ip address or name>  vrf [management vrf name]
switch(config)#logging source-interface <mgmt 0 or other dedicated management interface>

Default Value:

By default syslog logging is not configured.

By default the source interface of all logs will be the interface in the 'default' vrf that is topologically closest to the logging host, if defined.

By default, the logging levels (by service or feature) are shown below:

switch# sho logging level



Facility        Default Severity        Current Session Severity

--------        ----------------        ------------------------

aaa                     3                       3

acllog                  2                       2

aclmgr                  3                       3

aclqos                  5                       5

adbm                    2                       2

arp                     3                       3

auth                    0                       0

authpriv                3                       3

bootvar                 5                       5

callhome                2                       2

capability              2                       2

cdp                     2                       2

cert_enroll             2                       2

cfs                     3                       3

clis                    3                       3

clk_mgr                 2                       2

confcheck               2                       2

copp                    2                       2

cron                    3                       3

daemon                  3                       3

device_test             3                       3

dhclient                2                       2

dhcp_snoop              2                       2

diag_port_lb            2                       2

diagclient              2                       2

diagmgr                 2                       2

ecp                     5                       5

eltm                    2                       2

eth_port_channel        5                       5

ethpm                   5                       5

evmc                    5                       5

evms                    2                       2

feature-mgr             2                       2

fs-daemon               2                       2

ftp                     3                       3

ifmgr                   5                       5

igmp_1                  5                       5

interface-vlan          2                       2

ip                      3                       3

ipfib                   2                       2

ipqosmgr                4                       4

ipv6                    3                       3

kern                    3                       3

l2fm                    2                       2

l2pt                    3                       3

l3vm                    5                       5

lacp                    2                       2

licmgr                  6                       6

lldp                    2                       2

local0                  3                       3

local1                  3                       3

local2                  3                       3

local3                  3                       3

local4                  3                       3

local5                  3                       3

local6                  3                       3

local7                  3                       3

lpr                     3                       3

m2rib                   2                       2

m6rib                   5                       5

mail                    3                       3

mcm                     2                       2

mfdm                    2                       2

mmode                   2                       2

module                  5                       5

monitor                 3                       3

mrib                    5                       5

mvsh                    2                       2

news                    3                       3

ntp                     2                       2

otm                     3                       3

pfstat                  2                       2

pixm_gl                 4                       4

pixm_vl                 4                       4

platform                5                       5

plcmgr                  2                       2

plugin                  2                       2

port-profile            2                       2

radius                  3                       3

res_mgr                 5                       5

rpm                     5                       5

sal                     2                       2

scheduler               5                       5

securityd               3                       3

sflow                   2                       2

sksd                    3                       3

smm                     4                       4

snmpd                   2                       2

span                    3                       3

spm                     2                       2

stp                     3                       3

syslog                  3                       3

sysmgr                  3                       3

tamnw                   2                       2

telemetry               3                       3

template_manager        2                       2

u6rib                   5                       5

ufdm                    3                       3

urib                    5                       5

user                    3                       3

uucp                    3                       3

vdc_mgr                 6                       6

virtual-service         5                       5

vlan_mgr                2                       2

vshd                    5                       5

xbar                    5                       5

xmlma                   3                       3



0(emergencies)          1(alerts)       2(critical)

3(errors)               4(warnings)     5(notifications)

6(information)          7(debugging)"
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-2c.,CIS_Recommendation|1.5.1,CN-L3|8.1.4.3(a),CSCv7|6.3,CSF|PR.PT-1,ITSG-33|AU-2c.,LEVEL|1M,LEVEL|2M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging level (all .+|.+ .+)"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.5.2 Log all Successful and Failed Administrative Logins"
  info            : "By default failed logins are logged, but successful logins are not logged. This makes any configuration changes or successful malicious activity difficult to correctly attribute.

Rationale:

Logging of all device login attempts allows the security team to investigate all login attempts and successful logins as needed. In some organizations and for some switches, even successful logins will be configured to generate an alert that must be compared against authorized changes or assigned tickets. Without logging both successful and failed logins, several important components of any investigation may not be easily available for any subsequent investigation or analysis (userids, source IP addresses, login times and so on).

Impact:

Not logging successful logins means that unauthorized changes will be more difficult to attribute to the right person. It also means that otherwise suspicious logins (either because of the time of login, the source IP or other indicator) are not logged for further investigation. Logging successful logins means that any configuration errors that result in a service outage can also be attributed. Not logging unsuccessful logins means that brute force login attempts are not logged."
  solution        : "switch(config)# login on-failure log  ! set correctly by default
switch(config)# login on-success log

Note that login on-failure is set by default, so will not show in the configuration if properly set.

Default Value:

By default failed logins are logged and successful logins are not logged."
  reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.5.2,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|4.9,CSCv7|16.12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,LEVEL|2A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "login on-(failure|success) log"
  min_occurrences : "2"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature netflow"
      item        : "^feature netflow"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "1.5.3 Configure Netflow on Strategic Ports"
      info        : "Netflow allows for detailed logging of transit traffic. For a Layer 3 Netflow configuration, this outlines several values identified as 'keys': source and destination ports and protocols, source and destination IP addresses as well as traffic volumes in any combination. Sometimes QOS values (TOS bits only) is also used as a key. Each combination of Protocol, source port, destination port, source IP, destination IP is called a 'tuple'. The possible keys in a Layer 2 Tuple include source mac address, destination mac address, ethertype and vlan.

  In most cases logging to this level is not recommended for all ports of an NX-OS device, with 10G or faster ports there is just too much data to log and process in a meaningful way, even with sampling (which is required).

  However, for strategic ports (for instance, something facing a WAN link or traffic constrained server) this can be a good tool for troubleshooting. This sort of logging does take a fair amount of host resources, so if there is an upstream firewall or router, that device is often better suited to be a Netflow initiator, but if for instance the upstream device is owned by a carrier or a client, or is a host that needs this sort of telemetry, most NX-OS devices are certainly capable of providing Netflow telemetry.

  On many NX-OS platforms only inbound Netflow is supported.

  Rationale:

  Impact:

  If monitored graphically, often just a visual inspection of the netflow graphs will highlight anomalous traffic. For instance, a high volume exfiltration from a database server would show a spike of traffic from that database server to a host on the internet (which in most environments is not a normal pattern).

  In many cases the netflow database can be queried directly, so anomalies can be queried for programmatically. However, coding 'what is not normal' is not something that is easily done in procedural languages. AI or ML frameworks such as TensorFlow may be helpful in this situation.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If needed, either Layer 3 or Layer 2 netflow can be configured.
  Layer 3 IP and IPv6 flow monitors can be applied to VLANs, SVIs, Layer 3 routed interfaces or subinterfaces.
  Layer 2 flow monitors can be applied to a physical interface or trunks
  L3 netflow - typical application to a VLAN is shown
  First, enable the netflow feature:

  switch(config)#feature netflow

  The flow record defines what data to record and export. Typical settings are shown, the important thing is that a valid flow record setting exists:

  switch(config)# flow-record FLOW-RECORD
  switch(config-flow-record)#  match ipv4 protocol
  switch(config-flow-record)#  match ipv4 source address
  switch(config-flow-record)#  match ipv4 destination address
  switch(config-flow-record)#  match transport source-port
  switch(config-flow-record)#  match transport destination-port
  switch(config-flow-record)#  collect routing source as
  switch(config-flow-record)#  collect routing destination as
  switch(config-flow-record)#  collect transport tcp flags
  switch(config-flow-record)#  collect counter bytes
  switch(config-flow-record)#  collect counter packets

  The flow exporter defines the destination and options around sent data. Again, the specific values are not important. The VRF can be specified in the 'destination' line if needed.:

  switch(config)# flow exporter FLOW-EXPORT
  switch(config-flow-exporter)# transport udp 9996
  switch(config-flow-exporter)# destination 10.10.10.10
  switch(config-flow-exporter)# source mgmt 0
  switch(config-flow-exporter)# version 9
  switch(config-flow-exporter-version-9)# option exporter-stats timeout 120
  switch(config-flow-exporter-version-9)# option interface-table timeout 120

  The flow monitor 'ties' the exporter and record together:

  switch(config)# flow monitor FLOW-MONITOR
  switch(config-flow-monitor)# exporter FLOW-EXPORT
  switch(config-flow-monitor)#  record FLOW-RECORD

  The sampling rate, 'x packets out of y' can also be defined. Both should be a power of 2 (for instance, 8 out-of 64 is a valid combination)

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode 8 out-of 64

  Finally, apply the monitor and optionally the sampler to a layer 3 interface:

  switch(config-flow-monitor)# int vlan <interface number>
  10GCORE01(config-if)# ip flow monitor FLOW-MONITOR input sampler FLOWSAMPLER01

  =======================================
  **L2 netflow - typical application to physical interface shown **
  Because if it's reliance on MAC Addresses, L2 netflow implementations are much less often used

  switch(config)#feature netflow

  The exporter configuration remains the same as L3:

  switch(config)# flow exporter L2_FLOWEXPORTER01
  switch(config-flow-exporter)# destination <netflow server ip> [use-vrf management]
  switch(config-flow-exporter)# transport udp <netflow port>
  switch(config-flow-exporter)# source mgmt0
  switch(config-flow-exporter)# version 9

  The flow record reflects different (layer 2) tuple inputs:

  switch(config)# flow record L2_FLOWRECORD01
  switch(config-flow-record)#  match datalink ethertype
  switch(config-flow-record)#  match datalink mac source-address
  switch(config-flow-record)#  match datalink mac destination-address
  switch(config-flow-record)#  match datalink vlan

  The flow monitor remains similar:

  switch(config)# flow monitor L2_FLOWMONITOR01
  switch(config-flow-monitor)# record L2_FLOWRECORD01
  switch(config-flow-monitor)# exporter L2_FLOWEXPORTER01

  The flow sampler commands remain the same

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode <x> out-of <y>

  Finally, apply the L2 definition to an L2 interface:

  switch(config)# int Ethernet x/yy
  switch(config-if)# layer2-switched flow monitor L2_FLOWMONITOR01 input sampler FLOWSAMPLER01

  Default Value:

  Netflow is not defined by default."
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "flow (exporter|record|monitor)"
      item        : ".*"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.5.3 Configure Netflow on Strategic Ports"
      info        : "Netflow allows for detailed logging of transit traffic. For a Layer 3 Netflow configuration, this outlines several values identified as 'keys': source and destination ports and protocols, source and destination IP addresses as well as traffic volumes in any combination. Sometimes QOS values (TOS bits only) is also used as a key. Each combination of Protocol, source port, destination port, source IP, destination IP is called a 'tuple'. The possible keys in a Layer 2 Tuple include source mac address, destination mac address, ethertype and vlan.

  In most cases logging to this level is not recommended for all ports of an NX-OS device, with 10G or faster ports there is just too much data to log and process in a meaningful way, even with sampling (which is required).

  However, for strategic ports (for instance, something facing a WAN link or traffic constrained server) this can be a good tool for troubleshooting. This sort of logging does take a fair amount of host resources, so if there is an upstream firewall or router, that device is often better suited to be a Netflow initiator, but if for instance the upstream device is owned by a carrier or a client, or is a host that needs this sort of telemetry, most NX-OS devices are certainly capable of providing Netflow telemetry.

  On many NX-OS platforms only inbound Netflow is supported.

  Rationale:

  Impact:

  If monitored graphically, often just a visual inspection of the netflow graphs will highlight anomalous traffic. For instance, a high volume exfiltration from a database server would show a spike of traffic from that database server to a host on the internet (which in most environments is not a normal pattern).

  In many cases the netflow database can be queried directly, so anomalies can be queried for programmatically. However, coding 'what is not normal' is not something that is easily done in procedural languages. AI or ML frameworks such as TensorFlow may be helpful in this situation."
      solution    : "If needed, either Layer 3 or Layer 2 netflow can be configured.
  Layer 3 IP and IPv6 flow monitors can be applied to VLANs, SVIs, Layer 3 routed interfaces or subinterfaces.
  Layer 2 flow monitors can be applied to a physical interface or trunks
  L3 netflow - typical application to a VLAN is shown
  First, enable the netflow feature:

  switch(config)#feature netflow

  The flow record defines what data to record and export. Typical settings are shown, the important thing is that a valid flow record setting exists:

  switch(config)# flow-record FLOW-RECORD
  switch(config-flow-record)#  match ipv4 protocol
  switch(config-flow-record)#  match ipv4 source address
  switch(config-flow-record)#  match ipv4 destination address
  switch(config-flow-record)#  match transport source-port
  switch(config-flow-record)#  match transport destination-port
  switch(config-flow-record)#  collect routing source as
  switch(config-flow-record)#  collect routing destination as
  switch(config-flow-record)#  collect transport tcp flags
  switch(config-flow-record)#  collect counter bytes
  switch(config-flow-record)#  collect counter packets

  The flow exporter defines the destination and options around sent data. Again, the specific values are not important. The VRF can be specified in the 'destination' line if needed.:

  switch(config)# flow exporter FLOW-EXPORT
  switch(config-flow-exporter)# transport udp 9996
  switch(config-flow-exporter)# destination 10.10.10.10
  switch(config-flow-exporter)# source mgmt 0
  switch(config-flow-exporter)# version 9
  switch(config-flow-exporter-version-9)# option exporter-stats timeout 120
  switch(config-flow-exporter-version-9)# option interface-table timeout 120

  The flow monitor 'ties' the exporter and record together:

  switch(config)# flow monitor FLOW-MONITOR
  switch(config-flow-monitor)# exporter FLOW-EXPORT
  switch(config-flow-monitor)#  record FLOW-RECORD

  The sampling rate, 'x packets out of y' can also be defined. Both should be a power of 2 (for instance, 8 out-of 64 is a valid combination)

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode 8 out-of 64

  Finally, apply the monitor and optionally the sampler to a layer 3 interface:

  switch(config-flow-monitor)# int vlan <interface number>
  10GCORE01(config-if)# ip flow monitor FLOW-MONITOR input sampler FLOWSAMPLER01

  =======================================
  **L2 netflow - typical application to physical interface shown **
  Because if it's reliance on MAC Addresses, L2 netflow implementations are much less often used

  switch(config)#feature netflow

  The exporter configuration remains the same as L3:

  switch(config)# flow exporter L2_FLOWEXPORTER01
  switch(config-flow-exporter)# destination <netflow server ip> [use-vrf management]
  switch(config-flow-exporter)# transport udp <netflow port>
  switch(config-flow-exporter)# source mgmt0
  switch(config-flow-exporter)# version 9

  The flow record reflects different (layer 2) tuple inputs:

  switch(config)# flow record L2_FLOWRECORD01
  switch(config-flow-record)#  match datalink ethertype
  switch(config-flow-record)#  match datalink mac source-address
  switch(config-flow-record)#  match datalink mac destination-address
  switch(config-flow-record)#  match datalink vlan

  The flow monitor remains similar:

  switch(config)# flow monitor L2_FLOWMONITOR01
  switch(config-flow-monitor)# record L2_FLOWRECORD01
  switch(config-flow-monitor)# exporter L2_FLOWEXPORTER01

  The flow sampler commands remain the same

  switch(config)#sampler FLOWSAMPLER01
  switch(config-flow-sampler)# mode <x> out-of <y>

  Finally, apply the L2 definition to an L2 interface:

  switch(config)# int Ethernet x/yy
  switch(config-if)# layer2-switched flow monitor L2_FLOWMONITOR01 input sampler FLOWSAMPLER01

  Default Value:

  Netflow is not defined by default."
      reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|1.5.3,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1M,LEVEL|2M,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type            : CONFIG_CHECK
  description     : "1.6.1 Configure at least 3 external NTP Servers - ntp server"
  info            : "Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Using multiple sources gives redundancy in time sources. In most infrastructures, for efficiency only a small subset of devices (often a redundant pair of routers or switches) will use redundant external time sources. All other infrastructure will then synchronize time from them. This also means that any perimeter firewalls can be configured to limit NTP requests to the public internet to just those sources and destinations. The exception would of course be if the organization has an on-premise, internal atomic or GPS based network time source. Even in those situations an tiered NTP infrastructure is generally recommended on the internal network.

Rationale:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Also, without accurate time authentication issues can arise. If an attacker can influence the NTP traffic, it is possible to 'back-date' NTP responses to permit the use of older certificates, or 'forward-date' NTP responses to invalidate any certificates in use on the device. Using multiple sources gives redundancy in time sources. If a management network is in use in the infrastructure, using the management VRF to source time can help to protect NTP response traffic from tampering. It is key to set an NTP source interface, so that any perimeter devices can be configured to permit NTP requests from those IP addresses, and to restrict NTP requests to a list of authorized IP addresses. Be sure that this is a 'reliable' interface. In many cases this means using a loopback interface, so that any of several interfaces can be used to route the request to the NTP server. If a non-loopback interface is used, understand that if that interface is in a down state then NTP requests will not be sent.

Impact:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue."
  solution        : "If the default VRF is used (note that the IP addresses are for demonstrations purposes only, production configurations will likely vary):

switch(config)#ntp server 13.86.101.172 use-vrf default
switch(config)#ntp server 132.163.97.6 use-vrf default
switch(config)#ntp server 132.246.11.231 use-vrf default
switch(config)#ntp source-interface loopback1

If a management VRF is used:

switch(config)#ntp server 13.86.101.172 use-vrf management
switch(config)#ntp server 132.163.97.6 use-vrf management
switch(config)#ntp server 132.246.11.231 use-vrf management
switch(config)#ntp source-interface loopback1



Default Value:

NTP settings are not in the default confguration, they must be added. If a source VRF is not specified, the default VRF is used If a source interface is not specified, the interface that is topologically closest to the NTP service is used."
  reference       : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.1,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "ntp server .+"
  min_occurrences : "3"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.1 Configure at least 3 external NTP Servers - ntp source-interface"
  info        : "Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Using multiple sources gives redundancy in time sources. In most infrastructures, for efficiency only a small subset of devices (often a redundant pair of routers or switches) will use redundant external time sources. All other infrastructure will then synchronize time from them. This also means that any perimeter firewalls can be configured to limit NTP requests to the public internet to just those sources and destinations. The exception would of course be if the organization has an on-premise, internal atomic or GPS based network time source. Even in those situations an tiered NTP infrastructure is generally recommended on the internal network.

Rationale:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue. Also, without accurate time authentication issues can arise. If an attacker can influence the NTP traffic, it is possible to 'back-date' NTP responses to permit the use of older certificates, or 'forward-date' NTP responses to invalidate any certificates in use on the device. Using multiple sources gives redundancy in time sources. If a management network is in use in the infrastructure, using the management VRF to source time can help to protect NTP response traffic from tampering. It is key to set an NTP source interface, so that any perimeter devices can be configured to permit NTP requests from those IP addresses, and to restrict NTP requests to a list of authorized IP addresses. Be sure that this is a 'reliable' interface. In many cases this means using a loopback interface, so that any of several interfaces can be used to route the request to the NTP server. If a non-loopback interface is used, understand that if that interface is in a down state then NTP requests will not be sent.

Impact:

Accurate time is a critical piece of security infrastructure. Without accurate time on all infrastructure, it is complex or even impossible to correlate events from multiple sources to get an accurate view of a security incident or technical issue."
  solution    : "If the default VRF is used (note that the IP addresses are for demonstrations purposes only, production configurations will likely vary):

switch(config)#ntp server 13.86.101.172 use-vrf default
switch(config)#ntp server 132.163.97.6 use-vrf default
switch(config)#ntp server 132.246.11.231 use-vrf default
switch(config)#ntp source-interface loopback1

If a management VRF is used:

switch(config)#ntp server 13.86.101.172 use-vrf management
switch(config)#ntp server 132.163.97.6 use-vrf management
switch(config)#ntp server 132.246.11.231 use-vrf management
switch(config)#ntp source-interface loopback1



Default Value:

NTP settings are not in the default confguration, they must be added. If a source VRF is not specified, the default VRF is used If a source interface is not specified, the interface that is topologically closest to the NTP service is used."
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.6.1,CN-L3|8.1.10.6(d),CSCv7|6.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ntp source-interface .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.2 Configure a Time Zone"
  info        : "Timezones are a source of contention in larger corporations. On one hand, if infrastructure is configured with time consistent with the local timezone, then it is simpler to co-relate end-user symptoms and logs on end-user equipment with logs from network equipment. On the other hand, in organizations that span multiple time zones, configuring local time can make it easy to mis-match log entries from gear in different time zones.

In some organizations, the solution is to post both local and UTC time in all log entries. In other organizations, all gear is configured for one timezone (either UTC or 'head office time').

The important thing is to have a standard for time zone, and to configure it consistently across all hosts and infrastructure equipment.

Rationale:

Impact:

Not having a consistent time zone policy across all hosts and infrastructure means that when dealing with a security incident or technical issue, it becomes very easy to mis-match logs as affected hosts span multiple time zones."
  solution    : "To set the timezone, define the timezone name, the offset in hours, then the offset in seconds. The example below shows EST (Offset of -5 hours, zero seconds).

switch(config)# clock timezone EST -5 0

Default Value:

By default no time zone is configured."
  reference   : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.2,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "clock timezone .+ .+ .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.6.3 If a Local Time Zone is used, Configure Daylight Savings"
  info        : "If local time zones are configured on network infrastructure, it is important to also configure the time 'shift' that occurs as a result of Daylight Savings Time.

Rationale:

Impact:

If local time zones are configured on network infrastructure, it is usually to simplify relating reported end-user issues back to local time entries in the logs. So if local time zones are configured and used in this manner, it becomes important to also configure the time 'shift' that occurs as a result of Daylight Savings Time (or 'summer-time' on the Cisco CLI)"
  solution    : "In most cases, just the name of the DST timezone name is sufficient. NX-OS assumes 1 hour offset, using the United States dates for DST.

switch(config)# clock summer-time <DST Timezone Name>

for example:

switch(config)# clock summer-time EDT

If a full definition of the change is needed, it can certainly be set:

switch(config)# clock summer-time <DST Timezone Name> <day1> <month1> <time1> <day2> <month2> <time2> <offset in minutes>

where:

day1, month1, time1 define the start of the DST period

day2, month2, time2 define the end of the DST period

Default Value:

By default, summer-time (Daylight Savings Time) is not configured. If the summer-time start and stop dates are not specified, then the US standard dates are used: start = 2 Sun Mar 02:00 stop = 1 Sun Nov 02:00 60"
  reference   : "800-171|3.3.7,800-53|AU-8.,CIS_Recommendation|1.6.3,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ITSG-33|AU-8,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "clock summer-time .+"
</item>

<item>
  type            : CONFIG_CHECK
  description     : "1.6.4 Configure NTP Authentication"
  info            : "By default, NTP is a clear text, unauthenticated protocol. However, it can be configured to authenticate time sources. NTP authentication is an upstream protocol only - authenticated clients have assurance that they are receiving correct time, that the ntp packets have not been tampered with.

Rationale:

Configuring authentication ensures that if the server key does not match the key configured on the NTP client, that the client will drop any NTP replies from that server. If multiple keys are configured,"
  solution        : "switch(config)# ntp authenticate
switch(config)# ntp authentication-key 42 md5 my-ntp-key
switch(config)# ntp trusted-key 42
switch(config)# ntp server 132.246.11.231 use-vrf management key 42

Default Value:

By default NTP is not configured.
If NTP is configured, by default it is unauthenticated."
  reference       : "800-53|IA-3.,CIS_Recommendation|1.6.4,CSCv7|6,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "ntp (authenticate|authentication-key|trusted-key|server .* key .+)"
  min_occurrences : "4"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.8.1 Disable Power on Auto Provisioning (POAP)"
  info        : "PowerOn Auto Provisioning (POAP) allows the switch to be auto-provisioned at the time of power-on. This can be extremely useful in a tightly controlled environment, with a solid 'network as code' mindset and dev-ops procedures in place for network operations.

Rationale:

Impact:

Without solid procedures and a well-controlled environment, POAP provides a malicious actor the ability to compromise a switch as it is being deployed out of the box. This 'day 0' approach to compromising gives the attacker control of the switch from the start - it can be difficult to detect that this has occurred, and may require physical access to gain control back."
  solution    : "To disable POAP, use the command:

switch(config)# no boot poap enable

Default Value:

POAP is not enabled by default. The 'boot poap' configuration line does not show in the running or startup configuration if it is disabled, only if it is enabled."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.8.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "no boot poap enable"
</item>

<item>
  type        : CONFIG_CHECK_NOT
  description : "1.8.2 Disable iPXE (Pre-boot eXecution Environment)"
  info        : "iPXE allows a NX-OS device to boot from the network, usually using HTTP.

Rationale:

This method allows the switch bootup image to be controlled centrally, often using DHCP services.

Impact:

The risks of using this boot method are obvious. First, DHCP is a broadcast request, so any host (including a malicious host) can provide the DHCP response - the first response 'wins'. This means that a malicious actor can control operating system being booted on the switch. In addition, the HTTP protocol is clear-text, so is susceptible to modification in transit by an attacker. This is a less likely attack however, as the NX-OS boot sequence has multiple checks in place to verify the validity of the OS, and all most succeed for the boot sequence to proceed."
  solution    : "Setting the boot order explicity to 'bootflash' will remediate a PXE configured device.

switch(config)# boot order bootflash

You can also 'no' the current boot order line to revert to the default setting. For instance, to remove the configuration line 'boot order pxe bootflash' command, use

switch(config)# no boot order pxe bootflash

Default Value:

By default the boot order is 'bootflash' only. This default configuration will not show in the configuration.

However, entering any valid 'boot order' in the configuration will result it that order being explicit in the configuration, so entering 'boot order bootflash' will result in that showing in the configuration."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.8.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "boot order pxe"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for snmp-server"
      item        : "snmp-server .+"
    </item>
  </condition>

  <then>
    <item>
      type            : CONFIG_CHECK
      description     : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server traps/informs"
      info            : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution        : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference       : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/3102"
      item            : "snmp-server source-interface (traps|informs) .+"
      min_occurrences : "2"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server host"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      item        : "snmp-server host .+ source-interface (traps|informs) .+"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server traps/informs"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - snmp-server host"
      info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

  SSH access

  SNMP polling

  Syslog logging

  SNMP traps

  NTP requests

  This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

  Rationale:

  Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

  Impact:

  Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

  More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
      solution    : "First configure the mgmt0 interface:

  switch(config)# interface mgmt0
  switch(config-if)#   ip address 1.2.3.1/24

  If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

  ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

  Then, configure the source-interface commands for each target protocol that is implemented:

  switch(config)# snmp-server source-interface traps mgmt0
  switch(config)# snmp-server source-interface informs mgmt0
  switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
  switch(config)# ntp source-interface mgmt0
  switch(config)# logging source-interface mgmt0

  Default Value:

  By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
      reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - ntp"
  info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

SSH access

SNMP polling

Syslog logging

SNMP traps

NTP requests

This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

Rationale:

Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

Impact:

Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
  solution    : "First configure the mgmt0 interface:

switch(config)# interface mgmt0
switch(config-if)#   ip address 1.2.3.1/24

If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

Then, configure the source-interface commands for each target protocol that is implemented:

switch(config)# snmp-server source-interface traps mgmt0
switch(config)# snmp-server source-interface informs mgmt0
switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
switch(config)# ntp source-interface mgmt0
switch(config)# logging source-interface mgmt0

Default Value:

By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.9,CN-L3|8.1.10.6(d),CSCv7|11.6,CSCv7|11.7,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "ntp source-interface .+"
</item>

<item>
  type        : CONFIG_CHECK
  description : "1.9 Use Dedicated 'mgmt' Interface and VRF for Administrative Functions - logging"
  info        : "Vendors provisioning dedicated management interfaces is a widespread practice, and gives some significant security advantages when implementing:

SSH access

SNMP polling

Syslog logging

SNMP traps

NTP requests

This practice facilitates implementation of segmented, access controlled Management VLANs or VRFs, which acts as a significant deterrent to attackers. It provides management access outside of the regular data plane operations. Also, if there is a routing or switching issue that might interfere with in-band access, the management interface is very often not affected by this and is still acceptable.

Rationale:

Administration via the mgmt interface bypasses the default routing and switching processing on the switch. This means that any routing issues or switching problems on the device itself will not affect access to the mgmt0 interface. Note however that in most cases the uplink from the mgmt0 interface is part of the larger switching infrastructure - this should be taken into account when architecting the overall network.

Impact:

Using the MGMT interface and a dedicated Management VRF ensures that production and management traffic can never interfere with each other.

More importantly, this provides a segregated path outside of the production data plane path for management traffic. This is important because often management traffic such as syslog, SNMPv2 and NTP are in clear text. Routing this traffic using the production data paths gives a malicious actor the opportunity to intercept or modify this traffic, which facilitates several opportunities for reconnaissance or active attacks by modifying this data."
  solution    : "First configure the mgmt0 interface:

switch(config)# interface mgmt0
switch(config-if)#   ip address 1.2.3.1/24

If needed, add the various routes needed for connectivity for the mgmt interface. Note that this can also be accomplished with a routing protocol implemented for the vrf 'management'

ip route 5.6.7.8 255.255.255.0 1.2.3.254 vrf management

Then, configure the source-interface commands for each target protocol that is implemented:

switch(config)# snmp-server source-interface traps mgmt0
switch(config)# snmp-server source-interface informs mgmt0
switch(config)# snmp-server host 1.2.3.4 source-interface loopback0
switch(config)# ntp source-interface mgmt0
switch(config)# logging source-interface mgmt0

Default Value:

By default, the source-interface is not configured for any protocol. All protocols originate from the interface that is closest to it's target in the vrf 'default'."
  reference   : "CIS_Recommendation|1.9,CSCv7|11.6,CSCv7|11.7,LEVEL|1M,LEVEL|2M,PCI-DSSv3.2|10.5.3,PCI-DSSv3.2|10.5.4"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  item        : "logging source-interface .+"
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for eigrp"
      item        : "router eigrp .+"
    </item>
  </condition>

  <then>
    <item>
      type            : CONFIG_CHECK
      description     : "3.1.1.1 Configure EIGRP Authentication on all EIGRP Routing Devices"
      info            : "You can configure authentication between neighbors for EIGRP

Rationale:

You can configure EIGRP authentication for the EIGRP process or for individual interfaces. Interface EIGRP authentication configuration overrides the EIGRP process-level authentication configuration.

Because EIGRP is a multicast protocol, any device can advertise EIGRP capabilities and routes, and by default all connected EIGRP devices will honor those advertisements. This means that a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

For this reason it is important that EIGRP endpoints authenticate to each other, ensuring that only valid routers can participate in the exchange of routes."
      solution        : "Ensure that you have enabled the EIGRP feature.
Ensure that all neighbors for an EIGRP process share the same authentication configuration, including the shared authentication key.
Create the key-chain for this authentication configuration. See the Cisco NX-OS Security Configuration Guide.
Ensure that you are in the correct VDC (or use the switchto vdc command)
Configure authentication:

switch(config)# router eigrp [instance-tag]
switch(config-router)# address-family {ipv4 | ipv6} unicast
switch(config-router)# authentication key-chain [key-chain]
switch(config-router)# authentication mode md5

Next assign the interface:

switch(config)# interface [interface-type slot/port]
switch(config-if)# router eigrp [instance-tag]
switch(config-if)# authentication key-chain eigrp [instance-tag key-chain]
switch(config-if)# authentication mode eigrp [instance-tag] md5

Every EIGRP routeable interface should be set to either passive-interface, or be configured with authentication keys.

Default Value:

EIGRP is not configured by default

If configured, EIGRP authentication is not configured by default.

By default, if configured, EIGRP both advertises on and listens on all interfaces that fall into the subnets defined in the 'network' statements."
      reference       : "800-53|IA-3.,CIS_Recommendation|3.1.1.1,CSCv7|11.1,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also        : "https://workbench.cisecurity.org/files/3102"
      context         : "router eigrp .+"
      item            : "authentication (key-chain|mode)"
      min_occurrences : "2"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.1.2 Configure EIGRP Passive interfaces for interfaces that do not have peers"
      info        : "EIGRP both listens on and advertises on all interfaces that have IPs in subnets that are defined as 'networks' in the EIGRP configuration.
Ensure that interfaces that do not 'face' an EIGRP peer are set to passive.

Rationale:

If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. By default, all interfaces advertise via multicast to solicit EIGRP neighbors, and also listen for neighbor advertisements.

Impact:

If an interface is set to the default (ie - not passive), then an attacker can pose as an EIGRP peer, either to collect EIGRP information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If some IP interfaces have peers and some do not, set the ones with no peers to 'passive'

switch(config-if)# int vlan 1
switch(config-if)# ip passive-interface eigrp <EIGRP process number>

Default Value:

By default, passive interfaces are not configured."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.1.2,CN-L3|8.1.10.6(j),CSCv7|5.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "ip passive-interface eigrp .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.1.3 Configure EIGRP log-adjacency-changes"
      info        : "Logging changes to the EIGRP peering relationships is recommended. This setting is enabled by default.

Rationale:

Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

Impact:

Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

For this reason it is important that EIGRP endpoints alert on any interruptions in adjacency."
      solution    : "By default EIGRP adjacency changes are logged, and this does not show in the configuration.
If however it is disabled, it can be re-enabled as shown below.


switch(config)# router eigrp <eigrp process tag>
switch(config-router)# log-adjacency-changes

Default Value:

By default logging of eigrp adjacency changes is enabled."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.1.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router eigrp .+"
      item        : "log-adjacency-changes"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.1.1 Configure EIGRP Authentication on all EIGRP Routing Devices"
      info        : "You can configure authentication between neighbors for EIGRP

Rationale:

You can configure EIGRP authentication for the EIGRP process or for individual interfaces. Interface EIGRP authentication configuration overrides the EIGRP process-level authentication configuration.

Because EIGRP is a multicast protocol, any device can advertise EIGRP capabilities and routes, and by default all connected EIGRP devices will honor those advertisements. This means that a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

For this reason it is important that EIGRP endpoints authenticate to each other, ensuring that only valid routers can participate in the exchange of routes."
      solution    : "Ensure that you have enabled the EIGRP feature.
Ensure that all neighbors for an EIGRP process share the same authentication configuration, including the shared authentication key.
Create the key-chain for this authentication configuration. See the Cisco NX-OS Security Configuration Guide.
Ensure that you are in the correct VDC (or use the switchto vdc command)
Configure authentication:

switch(config)# router eigrp [instance-tag]
switch(config-router)# address-family {ipv4 | ipv6} unicast
switch(config-router)# authentication key-chain [key-chain]
switch(config-router)# authentication mode md5

Next assign the interface:

switch(config)# interface [interface-type slot/port]
switch(config-if)# router eigrp [instance-tag]
switch(config-if)# authentication key-chain eigrp [instance-tag key-chain]
switch(config-if)# authentication mode eigrp [instance-tag] md5

Every EIGRP routeable interface should be set to either passive-interface, or be configured with authentication keys.

Default Value:

EIGRP is not configured by default

If configured, EIGRP authentication is not configured by default.

By default, if configured, EIGRP both advertises on and listens on all interfaces that fall into the subnets defined in the 'network' statements."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.1.1,CSCv7|11.1,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.1.2 Configure EIGRP Passive interfaces for interfaces that do not have peers"
      info        : "EIGRP both listens on and advertises on all interfaces that have IPs in subnets that are defined as 'networks' in the EIGRP configuration.
Ensure that interfaces that do not 'face' an EIGRP peer are set to passive.

Rationale:

If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. By default, all interfaces advertise via multicast to solicit EIGRP neighbors, and also listen for neighbor advertisements.

Impact:

If an interface is set to the default (ie - not passive), then an attacker can pose as an EIGRP peer, either to collect EIGRP information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website."
      solution    : "If some IP interfaces have peers and some do not, set the ones with no peers to 'passive'

switch(config-if)# int vlan 1
switch(config-if)# ip passive-interface eigrp <EIGRP process number>

Default Value:

By default, passive interfaces are not configured."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.1.2,CN-L3|8.1.10.6(j),CSCv7|5.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.1.3 Configure EIGRP log-adjacency-changes"
      info        : "Logging changes to the EIGRP peering relationships is recommended. This setting is enabled by default.

Rationale:

Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

Impact:

Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

For this reason it is important that EIGRP endpoints alert on any interruptions in adjacency."
      solution    : "By default EIGRP adjacency changes are logged, and this does not show in the configuration.
If however it is disabled, it can be re-enabled as shown below.


switch(config)# router eigrp <eigrp process tag>
switch(config-router)# log-adjacency-changes

Default Value:

By default logging of eigrp adjacency changes is enabled."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.1.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for BGP"
      item        : "router bgp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.2.1 Configure BGP to Log Neighbor Changes"
      info        : "Logging changes to the BGP peering relationships is recommended. Any logged changes will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

  Rationale:"
      solution    : "In each 'neigbor' stanza of the BGP configuration, add the command 'log-neighbor-changes'

  switch(config)# router bgp <asn>
  switch(config-router)#   router-id <local ip, preferably a loopback>
  switch(config-router)#   neighbor <neighbor ip address>
  switch(config-router-neighbor)#     remote-as <neighbor asn>
  switch(config-router-neighbor)#     log-neighbor-changes

  In addition, the events below should be configured in any log or SIEM solution to generate an alert for investigation. A good keyword to alert on is 'ADJCHANGE'

  2020 May 20 11:54:18 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Up
  2020 May 20 13:08:15 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Down - sent:  holdtimer expired error

  Default Value:

  Not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router bgp .+"
      item        : "log-neighbor-changes"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.2.2 If Possible, Limit the BGP Routes Accepted from Peers"
      info        : "Once a BGP relationship is established, the BGP process will accept routes from any connected peers and consider those routes to be valid. For this reason, especially in ISP or other carrier situations, it is important that only routes that are valid for any particular peer are accepted for that peer.

  Rationale:

  Impact:

  Without configuring route filtering, any route advertised by any BGP peer is considered valid. For this reason, especially in carrier or ISP situations it is important that route filtering be configured. Without filtering, a misconfigured or compromised peer can easily advertise entire subnets that should be routed elsewhere, either routing them to nul or receiving traffic to the compromised subnet for for interception or modification, then forwarding it on to it's final destination.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "First, define the subnets that will be permitted from the peer PEERNAME (use descriptive, self documenting names in NX-OS constructions where possible). Note that any subnets not listed as permitted are by default denied (there is an implicit 'deny all' at the bottom of the list)

  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS description Permitted Subnets from Peer PEERNAME
  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS permit 10.11.11.0/24
  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS permit 10.11.12.0/24

  In this example above, only 'permits' are defined. Deny lines are also allowed - refusing routes that are not accepted (for instance 'bogon' or 'martian' subnets), and may be more important in some situations, for example if this switch is accepting routes from the public internet. (note that this is not typical deployment scenario for an NX-OS switch)
  Next, create the route-map, will will apply that list:

  switch(config)# route-map RM_BGP_PEERNAME_IN permit 10
  switch(config-route-map)#   match ip address prefix-list PL_PEERNAME_PERMIT_SUBNETS

  Finally, within the BGP configuration, apply that route-map to the BGP peer definition. Note that the 'in' keyword denotes inbound (accepted) information.:

  switch(config)# router bgp 65520
  switch(config-router)#   router-id 10.10.10.10
  switch(config-router)#   address-family ipv4 unicast
  switch(config-router-af)#     network 10.10.10.0/24
  switch(config-router-af)#   neighbor 10.10.10.11
  switch(config-router-neighbor)#     remote-as 65521
  switch(config-router-neighbor)#     address-family ipv4 unicast
  switch(config-router-neighbor-af)#      route-map RM_BGP_PEERNAME_IN in

  Default Value:

  BGP filtering is not enabled by default. By default, all routes received from defined peers are accepted as valid."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.2.2,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router bgp .+"
      item        : "route-map .+ in"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.2.3 Configure BGP Authentication"
      info        : "BGP is a usually configured as a point-to-point / unicast protocol. Configuring authentication as part of the neighbor configuration adds an additional layer of security to the conversation.

  Rationale:

  Impact:

  Configuring authentication adds an MD5 hash to the neighbor negotiation that occurs between two BGP peers. An authentication failure would indicate either a misconfiguration, or possibly an attacker mounting an impersonation attack, masquerading as the BGP peer (possibly by ARP cache poisoning attack) and attempting to then peer up with incorrect credentials.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "For each BGP neighbor, add the 'password' command to the matching stanza, with a long and complex string. Note that the same password must be used on the matching peer.
  Different passwords should be used for each peer.

  switch(config)# router bgp 65520
  switch(config-router)# neigh 10.10.10.11
  switch(config-router-neighbor)# password ?
    0     Specifies an UNENCRYPTED neighbor password will follow
    3     Specifies an 3DES ENCRYPTED neighbor password will follow
    7     Specifies a Cisco type 7  ENCRYPTED neighbor password will follow
    LINE  The UNENCRYPTED (cleartext) neighbor password

  switch(config-router-neighbor)# password somelongcomplexstring

  Default Value:

  By default, BGP authentication is not enabled."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.2.3,CSCv7|5.1,CSCv7|11.1,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router bgp .+"
      item        : "password .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.2.1 Configure BGP to Log Neighbor Changes"
      info        : "Logging changes to the BGP peering relationships is recommended. Any logged changes will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

  Rationale:"
      solution    : "In each 'neigbor' stanza of the BGP configuration, add the command 'log-neighbor-changes'

  switch(config)# router bgp <asn>
  switch(config-router)#   router-id <local ip, preferably a loopback>
  switch(config-router)#   neighbor <neighbor ip address>
  switch(config-router-neighbor)#     remote-as <neighbor asn>
  switch(config-router-neighbor)#     log-neighbor-changes

  In addition, the events below should be configured in any log or SIEM solution to generate an alert for investigation. A good keyword to alert on is 'ADJCHANGE'

  2020 May 20 11:54:18 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Up
  2020 May 20 13:08:15 CISNXOS9 %BGP-5-ADJCHANGE:  bgp- [7984] (default) neighbor 10.10.10.11 Down - sent:  holdtimer expired error

  Default Value:

  Not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.2.2 If Possible, Limit the BGP Routes Accepted from Peers"
      info        : "Once a BGP relationship is established, the BGP process will accept routes from any connected peers and consider those routes to be valid. For this reason, especially in ISP or other carrier situations, it is important that only routes that are valid for any particular peer are accepted for that peer.

  Rationale:

  Impact:

  Without configuring route filtering, any route advertised by any BGP peer is considered valid. For this reason, especially in carrier or ISP situations it is important that route filtering be configured. Without filtering, a misconfigured or compromised peer can easily advertise entire subnets that should be routed elsewhere, either routing them to nul or receiving traffic to the compromised subnet for for interception or modification, then forwarding it on to it's final destination."
      solution    : "First, define the subnets that will be permitted from the peer PEERNAME (use descriptive, self documenting names in NX-OS constructions where possible). Note that any subnets not listed as permitted are by default denied (there is an implicit 'deny all' at the bottom of the list)

  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS description Permitted Subnets from Peer PEERNAME
  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS permit 10.11.11.0/24
  switch(config)# ip prefix-list PL_PEERNAME_PERMIT_SUBNETS permit 10.11.12.0/24

  In this example above, only 'permits' are defined. Deny lines are also allowed - refusing routes that are not accepted (for instance 'bogon' or 'martian' subnets), and may be more important in some situations, for example if this switch is accepting routes from the public internet. (note that this is not typical deployment scenario for an NX-OS switch)
  Next, create the route-map, will will apply that list:

  switch(config)# route-map RM_BGP_PEERNAME_IN permit 10
  switch(config-route-map)#   match ip address prefix-list PL_PEERNAME_PERMIT_SUBNETS

  Finally, within the BGP configuration, apply that route-map to the BGP peer definition. Note that the 'in' keyword denotes inbound (accepted) information.:

  switch(config)# router bgp 65520
  switch(config-router)#   router-id 10.10.10.10
  switch(config-router)#   address-family ipv4 unicast
  switch(config-router-af)#     network 10.10.10.0/24
  switch(config-router-af)#   neighbor 10.10.10.11
  switch(config-router-neighbor)#     remote-as 65521
  switch(config-router-neighbor)#     address-family ipv4 unicast
  switch(config-router-neighbor-af)#      route-map RM_BGP_PEERNAME_IN in

  Default Value:

  BGP filtering is not enabled by default. By default, all routes received from defined peers are accepted as valid."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.2.2,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.2.3 Configure BGP Authentication"
      info        : "BGP is a usually configured as a point-to-point / unicast protocol. Configuring authentication as part of the neighbor configuration adds an additional layer of security to the conversation.

  Rationale:

  Impact:

  Configuring authentication adds an MD5 hash to the neighbor negotiation that occurs between two BGP peers. An authentication failure would indicate either a misconfiguration, or possibly an attacker mounting an impersonation attack, masquerading as the BGP peer (possibly by ARP cache poisoning attack) and attempting to then peer up with incorrect credentials."
      solution    : "For each BGP neighbor, add the 'password' command to the matching stanza, with a long and complex string. Note that the same password must be used on the matching peer.
  Different passwords should be used for each peer.

  switch(config)# router bgp 65520
  switch(config-router)# neigh 10.10.10.11
  switch(config-router-neighbor)# password ?
    0     Specifies an UNENCRYPTED neighbor password will follow
    3     Specifies an 3DES ENCRYPTED neighbor password will follow
    7     Specifies a Cisco type 7  ENCRYPTED neighbor password will follow
    LINE  The UNENCRYPTED (cleartext) neighbor password

  switch(config-router-neighbor)# password somelongcomplexstring

  Default Value:

  By default, BGP authentication is not enabled."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.2.3,CSCv7|5.1,CSCv7|11.1,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for router ospf"
      item        : "router ospf"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.3.1 Set Interfaces with no Peers to Passive-Interface"
      info        : "By default, OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces.

    Rationale:

    If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. I will however still advertise the networks associated with that interface to peers on other interfaces. By default, all interfaces advertise via multicast to solicit OSPF neighbors, and also listen for neighbor advertisements.

    Impact:

    If an interface is set to the default (ie - not passive), then an attacker can pose as an OSPF peer, either to collect OSPF information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

    Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website.

    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "For each routeable interface, if there is no facing peer on that interface set that interface to passive with the 'ip ospf passive-interface' configuration command.
    Every routeable interface should be set to either passive-interface, or be configured with authentication keys.

    switch(config)# int vlan 1
    switch(config-if)# ip router ospf 10 area 0
    switch(config-if)# ip ospf passive-interface

    Default Value:

    By default, passive interfaces are not configured - no OSPF configured interfaces are set to passive. This means that OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "ip (router ospf .+|ospf passive-interface)"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.3.2 Authenticate OSPF peers with MD5 authentication keys"
      info        : "If OSPF is configured, peers can be authenticated using keys. This is not configured by default. If configured, MD5 hashes are recommended as the authentication mechanism. MD5 is the best option for multi-vendor support, and is also the best cryptographic option available in the OSPF standard.

    Rationale:

    Impact:

    Because OSPF is a multicast protocol, any device can advertise OSPF capabilities and routes, and by default all connected OSPF devices will honor those advertisements. This means that a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints authenticate to each other, ensuring that only valid routers can participate in the exchange of routes.

    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "For each OSPF routeable interface, set the message-digest authentication method, and assign the appropriate keychain.
    Each OSPF routeable interface should either have authentication configured or be configured as an OSPF passive interface.

    switch(config)# interface Vlan1
    switch(config-int)# ip ospf authentication message-digest
    switch(config-int)#  ip ospf authentication key-chain <OSPF Key Chain>

    Default Value:

    By default, OSPF authentication is not enabled by default."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.3.2,CSCv7|11,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "ip ospf authentication (message-digest|key-chain)"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.3.3 Log OSPF Adjacency Changes"
      info        : "Logging changes to the BGP peering relationships is recommended.

    Rationale:

    Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

    Impact:

    Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints alert on any interruptions in adjacency."
      solution    : "Enabling the logging of adjacencies is a single line in the OSPF process section. It is globally applied to all OSPF neighbors.

    switch(config)# router ospf <Process tag>
    switch(config-router)# log-adjacency-changes

    Default Value:

    By default changes in OSPF adjacencies are not logged."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.3.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "router ospf .+"
      item        : "log-adjacency-changes"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.3.1 Set Interfaces with no Peers to Passive-Interface"
      info        : "By default, OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces.

    Rationale:

    If an interface is set to 'passive', then EIGRP will not advertise out of that interface or listen on that interface for EIGRP neighbors. I will however still advertise the networks associated with that interface to peers on other interfaces. By default, all interfaces advertise via multicast to solicit OSPF neighbors, and also listen for neighbor advertisements.

    Impact:

    If an interface is set to the default (ie - not passive), then an attacker can pose as an OSPF peer, either to collect OSPF information from advertisements or to inject bogus routes into the table. Bogus routes can then be used to DOS that subnet, or to intercept traffic to or from that subnet either to eavesdrop on conversations or to modify data in transit.

    Quite often the goal of an attack of this type is to collect login credentials from a malicious copy of the target website."
      solution    : "For each routeable interface, if there is no facing peer on that interface set that interface to passive with the 'ip ospf passive-interface' configuration command.
    Every routeable interface should be set to either passive-interface, or be configured with authentication keys.

    switch(config)# int vlan 1
    switch(config-if)# ip router ospf 10 area 0
    switch(config-if)# ip ospf passive-interface

    Default Value:

    By default, passive interfaces are not configured - no OSPF configured interfaces are set to passive. This means that OSPF will advertise via multicast to solicit peers, and will listen for neighbor / peer advertisements on all OSPF configured interfaces."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.3.1,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.3.2 Authenticate OSPF peers with MD5 authentication keys"
      info        : "If OSPF is configured, peers can be authenticated using keys. This is not configured by default. If configured, MD5 hashes are recommended as the authentication mechanism. MD5 is the best option for multi-vendor support, and is also the best cryptographic option available in the OSPF standard.

    Rationale:

    Impact:

    Because OSPF is a multicast protocol, any device can advertise OSPF capabilities and routes, and by default all connected OSPF devices will honor those advertisements. This means that a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints authenticate to each other, ensuring that only valid routers can participate in the exchange of routes."
      solution    : "For each OSPF routeable interface, set the message-digest authentication method, and assign the appropriate keychain.
    Each OSPF routeable interface should either have authentication configured or be configured as an OSPF passive interface.

    switch(config)# interface Vlan1
    switch(config-int)# ip ospf authentication message-digest
    switch(config-int)#  ip ospf authentication key-chain <OSPF Key Chain>

    Default Value:

    By default, OSPF authentication is not enabled by default."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.3.2,CSCv7|11,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.3.3 Log OSPF Adjacency Changes"
      info        : "Logging changes to the BGP peering relationships is recommended.

    Rationale:

    Any logged changes in a routing peer relationship will in the best case indicate a service issue due to standard operational issues (connectivity issues and so on) or in the worst case, could indicate malicious activity attempting to subvert the peering relationship and/or the routing table.

    Impact:

    Errors on adjacency relationships are a common early warning message in attacks on routers. If successful, a malicious actor can advertise bogus routes to valid hosts or networks, allowing the interception and modification of traffic intended for those hosts or subnets.

    For this reason it is important that OSPF endpoints alert on any interruptions in adjacency."
      solution    : "Enabling the logging of adjacencies is a single line in the OSPF process section. It is globally applied to all OSPF neighbors.

    switch(config)# router ospf <Process tag>
    switch(config-router)# log-adjacency-changes

    Default Value:

    By default changes in OSPF adjacencies are not logged."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.1.3.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|11,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for interface Vlan with IPs"
      context     : "interface Vlan.+"
      item        : "ip address .+"
    </item>
  </condition>

  <then>
    <item>
      type            : CONFIG_CHECK
      description     : "3.1.4.1 If VLAN interfaces have IP addreses, configure anti spoofing / ingress filtering protections"
      info            : "If VLAN interfaces have IP addresses, it is important that anti-spoofing protections are in place, to prevent an attacker from spoofing an address that is illegal on that inbound interface.

  Rationale:

  If an attacker is allowed to 'spoof' addresses to the point that packets are permitted to arrive on the incorrect interface, it becomes possible for an attacker to spoof their trust level from a network point of view, for instance to source 'inside' addresses from an 'outside' interface.

  Impact:

  The URPF feature uses the same tables as the routing protocol, so the CPU impact of configuring this feature is low. However, logging of high volume URPF attacks (or URPF misconfigurations) can result in:

  higher CPU impacts on the switch

  as higher network utilization on the path to the logging server

  higher disk utilization on the logging server

  higher cpu utilization on the logging server

  Because of this, URPF events, especially in higher volumes should be configured to generate a high priority alert in your logging server or SIEM."
      solution        : "Apply the command 'ip verify unicast source reachable-via rx' to all VLAN interfaces that have IP addresses. This forces the check to verify that the packet is arriving on the correct interface.
  The command variant 'ip verify unicast source reachable-via any' is not recommended, as it only filters for valid IP addresses. If the device has a default route, then this command variant has no affect.

  switch(config)# interface Vlan X
  switch(config-if)# ip verify unicast source reachable-via rx

  Default Value:

  By default, unicast reverse forwarding protections are not enabled"
      reference       : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.1,CN-L3|8.1.10.6(j),CSCv7|6.8,CSCv7|11.2,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also        : "https://workbench.cisecurity.org/files/3102"
      context         : "interface Vlan.+"
      item            : "(ip address .+|ip verify unicast source reachable-via rx)"
      min_occurrences : "2"
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.4.1 If VLAN interfaces have IP addreses, configure anti spoofing / ingress filtering protections"
      info        : "If VLAN interfaces have IP addresses, it is important that anti-spoofing protections are in place, to prevent an attacker from spoofing an address that is illegal on that inbound interface.

  Rationale:

  If an attacker is allowed to 'spoof' addresses to the point that packets are permitted to arrive on the incorrect interface, it becomes possible for an attacker to spoof their trust level from a network point of view, for instance to source 'inside' addresses from an 'outside' interface.

  Impact:

  The URPF feature uses the same tables as the routing protocol, so the CPU impact of configuring this feature is low. However, logging of high volume URPF attacks (or URPF misconfigurations) can result in:

  higher CPU impacts on the switch

  as higher network utilization on the path to the logging server

  higher disk utilization on the logging server

  higher cpu utilization on the logging server

  Because of this, URPF events, especially in higher volumes should be configured to generate a high priority alert in your logging server or SIEM."
      solution    : "Apply the command 'ip verify unicast source reachable-via rx' to all VLAN interfaces that have IP addresses. This forces the check to verify that the packet is arriving on the correct interface.
  The command variant 'ip verify unicast source reachable-via any' is not recommended, as it only filters for valid IP addresses. If the device has a default route, then this command variant has no affect.

  switch(config)# interface Vlan X
  switch(config-if)# ip verify unicast source reachable-via rx

  Default Value:

  By default, unicast reverse forwarding protections are not enabled"
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.1,CN-L3|8.1.10.6(j),CSCv7|6.8,CSCv7|11.2,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type            : CONFIG_CHECK
  description     : "3.1.4.2 Create and use a single Loopback Address for Routing Protocol Peering"
  info            : "The use of a loopback interface is recommended for use in all routing protocols. This recommendation describes the configuration of the loopback interface. Routing protocol specific configurations are described under the respective routing protocols.

Rationale:

Loopback interfaces are always up, and so are not dependent on physical interface link state issues (cabling or other link issues for instance). This means traffic sourced from a loopback interface can take any valid path to establish a routing relationship or to route traffic. Loopback interfaces by their nature cannot 'flap' (toggle between up and down states). Depending on the error condition, most physical interfaces are susceptible to interface flapping.

Impact:

Using a loopback interface makes a routing device much less susceptible to intermittent or permanent interface failures."
  solution        : "Creating the loopback interface is a simple process. Addressing the loopback, in particular computing the subnet mask will vary by the organization and application. Often smaller subnets can be used for loopbacks, depending on how many potential peers are possible.

switch(config)# int loopback 0
switch(config-if)# ip address 10.11.11.1 255.255.255.252

In order to use the loopback interface (rather than the closest interface to the routing peer), it must be explicitly configured in the routing protocol. This is described in the recommendations for each respective routing protocol.

Default Value:

By default no loopback interfaces are created on NX-OS devices."
  reference       : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|3.1.4.2,CN-L3|8.1.10.6(d),CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also        : "https://workbench.cisecurity.org/files/3102"
  item            : "interface loopback.+"
  max_occurrences : "1"
</item>

<item>
  type        : CONFIG_CHECK
  description : "3.1.4.3 Use Unicast Routing Protocols Only"
  info        : "Unicast routing protocols describe the destination routing peers by IP address. Multicast and Broadcast based routing protocols will discover routing neighbors dynamically. Because of this discovery process, a malicious actor can much more easily establish a peering relationship and hijack the routing protocol.

Rationale:

While most routing protocols can be configured with authentication, multicast and broadcast routing protocols have an inherent weakness in their 'trust' of any neighbor that advertises or will answer an advertisment.

Impact:

In multicast and broadcast routing protocols, the router (in this case the NX-OS device) will advertise its presence to all devices on a subnet, soliciting other routers using that same protocol. In that situation, an attacker can simply reply to those advertisements and establish a peering relationship. At that point the attacker can inject any route desired, so that traffic for that destination will route through the malicious router, putting the attacker in a 'monkey in the middle' position, able to eavesdrop on or change any traffic to or from that destination, then forward it on. Tools such as scapy have well-established attack scripts for most broadcast or multicast routing protocols.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Configure unicast routing only, for instance BGP."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.1.4.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "router (bgp|eigrp|rip|ospf)"
  item        : ".*ulticast.*"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature hsrp"
      item        : "^feature hsrp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.1.4.4 Configure HSRP protections - hsrp version 2"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.4,CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface Vlan.+"
      item        : "hsrp version 2"
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.1.4.4 Configure HSRP protections - interface md5"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.4.4,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1M,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "authentication md5 key-chain .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.1.4.4 Configure HSRP protections - hsrp version 2"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.1.4.4,CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.1.4.4 Configure HSRP protections - interface md5"
      info        : "HSRP is a valuable redundancy protocol, but like many protocols discussed in this document can be attacked and compromised. HSRP Authentication is recommended to protect against such attacks.

  Rationale:

  Impact:

  By default, HSRP is a clear-text protocol that negotiates which of a number of routing peers host the logical 'standby' IP address. Communication to negotiate this is via clear-text messages using the multicast address 224.0.0.2. By default, the protocol is authenticated in cleartext, with a passphrase of 'cisco'. In a two device HSRP pair, a tool such as SCAPY can be used to impersonate a third participant, advertising itself as an HSRP candidate at a higher priority value.

  A successful attack of this type usually results in the malicious actor becoming the default gateway for that subnet, which puts the attacker in the position to inspect all traffic leaving the network, either for eavesdropping or for modifying traffic in transit. Return traffic will not usually be routed through the attacker (unless a second attack is mounted successfully to accomplish this), but intercepting sent traffic gives the attacker the ability to read credentials directly or modify the destination IP address (two common goals). Modifying the destination address allows the attacker to stand up a malicious copy of a target website (for instance, a bank site or paypal), where high value, encrypted credentials can be harvested.

  Protecting HSRP with hashed credentials makes this type of attack much more difficult, the attacker must either reverse the hash, or otherwise mount a 'pass the hash' attack on the HSRP hosts. Note however that this setting will not prevent all HSRP attacks - it will however make it much more likely that an attack will generate alerts in the log, giving the defending team a good indication that the attack occurred and should be investigated. Automated attacks are often simpler (for instance, may only try the default value), so those may be defeated.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "First, enable HSRP

  switch(config)# feature hsrp

  set the HSRP version to '2' to allow for MD5 encryption (per interface)

  switch(config)# int vlan 1
  switch(config-if)# hsrp version 2

  Finally, configure the remainder of that interfaces HSRP setup. The key command is of course the 'authentication md5' clause

  switch(config-if)#   hsrp 1
  switch(config-if-hsrp)#     authentication md5 key-chain <HSRP-KEYCHAIN>
  switch(config-if-hsrp)#     name HSRPVLAN1
  switch(config-if-hsrp)#     preempt
  switch(config-if-hsrp)#     priority 110
  switch(config-if-hsrp)#     ip 10.10.10.1

  Default Value:

  HSRP is not configured by default.

  If configured, hashed authentication is not enabled by default (the cleartext value of 'cisco' is used by default)."
      reference   : "800-53|IA-3.,CIS_Recommendation|3.1.4.4,CSF|PR.AC-1,ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1M,LEVEL|2M,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<item>
  type        : CONFIG_CHECK
  description : "3.3.2 Configure Storm Control"
  info        : "Traffic storm control (also called traffic suppression) allows you to monitor the levels of the incoming broadcast, multicast, and unicast traffic over a 3.9-millisecond interval. During this interval, the traffic level, which is a percentage of the total available bandwidth of the port, is compared with the traffic storm control level that you configured. When the ingress traffic reaches the traffic storm control level that is configured on the port, traffic storm control drops the traffic until the interval ends.

Rationale:

When the traffic exceeds the configured level, you can configure traffic storm control to perform the following optional corrective actions :

Shut down-When ingress traffic exceeds the traffic storm control level that is configured on a port, traffic storm control puts the port into the error-disabled state. To reenable this port, you can use either the shutdown and no shutdown options on the configured interface, or the error-disable detection and recovery feature. You are recommended to use the errdisable recovery cause storm-control command for error-disable detection and recovery along with the errdisable recovery interval command for defining the recovery interval. The interval can range between 30 and 65535 seconds.

Trap-You can configure traffic storm control to generate an SNMP trap when ingress traffic exceeds the configured traffic storm control level. The SNMP trap action is enabled by default. However, storm control traps are not rate-limited by default. You can control the number of traps generated per minute by using the snmp-server enable traps storm-control trap-rate command.

Impact:

This configuration is normally non-impactful - host network interfaces operating normally do not broadcast at the levels that are normally set in this command.

This command is primarily meant to protect the switch and more importantly other hosts in a broadcast domain (VLAN) from a network interface that is malfunctioning, either due to a hardware failure or a driver problem.

Note however that this protection can prevent some malicious activity, for instance VLAN wide DOS attacks, higher volume ARP Cache Poisoning attacks and CAM Table overflow attacks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To set the broadcast limit in percent (multicast limit shown):

switch(config)# interface ethernet 1/1
switch(config)# storm-control multicast level 10

or to set in packets per second (broadcast limit shown)

switch(config)# storm-control broadcast level pps 8000

Configure to send SNMP trap if a broadcast limit is exceeded

switch(config-if)# storm-control action trap

or to place an interface into an ERR-DISABLE state if a broadcast limit is exceeded:

switch(config-if)# storm-control action disable

Default Value:

not enabled"
  reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|3.3.2,CN-L3|8.1.10.6(d),CSCv7|11,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,LEVEL|2M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
  context     : "interface .+"
  item        : "storm-control .+"
  regex       : "Manual Review Required"
  severity    : MEDIUM
</item>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature cdp"
      item        : "^feature cdp"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.4.2 Configure CDP"
      info        : "The Cisco Discovery Protocol (CDP) is a media-independent and protocol-independent protocol that runs on all Cisco-manufactured equipment including routers, bridges, access and communication servers, and switches. You can use CDP to discover and view information about all the Cisco devices that are directly attached to the device.

  Each device that you configure for CDP sends periodic advertisements to a multicast address. Each device advertises at least one address at which it can receive SNMP messages. The advertisements also contain hold-time information, which indicates the length of time that a receiving device should hold CDP information before removing it. You can configure the advertisement or refresh timer and the hold timer.

  CDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that CDP be disabled on any link that links to equipment not owned by your organization. In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable CDP entirely

  Rationale:

  CDP advertises potentially sensitive information, including the current version of NX-OS. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling CDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have CDP explicitly disabled.

  In more sensitive environments, disable CDP globally.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Enabling CDP Globally

  switch(config)# cdp enable

  Enabling on one interface

  switch(config)# int Ethernet x/y
  switch(config-if)# cdp enable

  To disable CDP globally:

  switch(config-if)# no cdp enable

  To disable CDP on one interface only:

  switch(config)# int Ethernet x/y
  switch(config-if)# no cdp enable

  Default Value:

  CDP is enabled by default, and is enabled on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.2,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "^cdp enable"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.4.2 Configure CDP"
      info        : "The Cisco Discovery Protocol (CDP) is a media-independent and protocol-independent protocol that runs on all Cisco-manufactured equipment including routers, bridges, access and communication servers, and switches. You can use CDP to discover and view information about all the Cisco devices that are directly attached to the device.

  Each device that you configure for CDP sends periodic advertisements to a multicast address. Each device advertises at least one address at which it can receive SNMP messages. The advertisements also contain hold-time information, which indicates the length of time that a receiving device should hold CDP information before removing it. You can configure the advertisement or refresh timer and the hold timer.

  CDP advertises potentially sensitive information, including the current version of NX-OS. For this reason it is recommended that CDP be disabled on any link that links to equipment not owned by your organization. In more sensitive environments, in particular in carrier or cloud services environments (where the majority of the endpoints are customer controlled hosts), it is recommended to disable CDP entirely

  Rationale:

  CDP advertises potentially sensitive information, including the current version of NX-OS. This information can be used by a malicious actor to identify which vulnerabilities exist on the device, and from there which exploits might be most effective to compromise it. For this reason, enabling CDP is generally not recommended except for troubleshooting or network discovery purposes. In particular, any ports connected to service provider gear, or any system not owned by your organization should have CDP explicitly disabled.

  In more sensitive environments, disable CDP globally."
      solution    : "Enabling CDP Globally

  switch(config)# cdp enable

  Enabling on one interface

  switch(config)# int Ethernet x/y
  switch(config-if)# cdp enable

  To disable CDP globally:

  switch(config-if)# no cdp enable

  To disable CDP on one interface only:

  switch(config)# int Ethernet x/y
  switch(config-if)# no cdp enable

  Default Value:

  CDP is enabled by default, and is enabled on all interfaces by default."
      reference   : "800-171|3.13.1,800-53|SC-7(11),CIS_Recommendation|3.4.2,CN-L3|8.1.10.6(j),CSCv7|11,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS7c,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<if>
  <condition type:"AND">
    <item>
      type        : CONFIG_CHECK
      description : "Check for feature fcoe"
      item        : "^feature fcoe"
    </item>
  </condition>

  <then>
    <item>
      type        : CONFIG_CHECK
      description : "3.5.1 Basic Fiber Channel Configuration"
      info        : "Fibre Channel over Ethernet (FCoE) encapsulation allows a physical Ethernet cable to carry standard Fibre Channel traffic within Ethernet frames. In Cisco Nexus devices, an FCoE-capable physical Ethernet interface can carry traffic for one virtual Fibre Channel (vFC) interface. If FCoE functionality is not required, this functionality should be disabled. Note also that this is a licensed feature, so is not available without a purchased license.

  Rationale:

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Enable the FCoE feature globally on the switch:

  switch(config)# feature fcoe
  FC license checked out successfully

  fc_plugin extracted successfully
  FC plugin loaded successfully
  FCoE manager enabled successfully
  FC enabled on all modules successfully
  Warning: Ensure class-fcoe is included in qos policy-maps of all types

  Enable FCoE on a specific port (not required on all models):

  switch(config)# interface ethernet x/y
  switch(config-if)# fcoe mode on

  set the priority flow mode on a specific port:

  switch(config-if)# priority-flow-control mode auto

  FCoE also requires the DCBX (Data Center Bridging Exchange) protocol, which is used to negotiate capabilities between the FCOE endpoints. DCBX is an extension of LLDP, and LLDP is enabled globally and on all interfaces by default.
  If LLDP is disabled on any particular interface, it can be re-enabled as:

  switch(config-if)# int Ethernet x/y
  switch(config-if)# lldp transmit
  switch(config-if)# lldp receive

  Default Value:

  The FCoE feature is not enabled by default. LLDP is enabled globally and on all interfaces by default, so if FCoE is enabled then DCBX is enabled by default"
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.1,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface .+"
      item        : "(fcoe mode on|priority-flow-control mode auto|lddp)"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.5.2 Configure FCoE Zoning - vsan database"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "vsan database"
      item        : "vsan .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>

    <item>
      type        : CONFIG_CHECK
      description : "3.5.2 Configure FCoE Zoning - interface vfc"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
      context     : "interface vfc .+"
      item        : "bind .+"
      regex       : "Manual Review Required"
      severity    : MEDIUM
    </item>
  </then>

  <else>
    <report type:"PASSED">
      description : "3.5.1 Basic Fiber Channel Configuration"
      info        : "Fibre Channel over Ethernet (FCoE) encapsulation allows a physical Ethernet cable to carry standard Fibre Channel traffic within Ethernet frames. In Cisco Nexus devices, an FCoE-capable physical Ethernet interface can carry traffic for one virtual Fibre Channel (vFC) interface. If FCoE functionality is not required, this functionality should be disabled. Note also that this is a licensed feature, so is not available without a purchased license.

  Rationale:

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Enable the FCoE feature globally on the switch:

  switch(config)# feature fcoe
  FC license checked out successfully

  fc_plugin extracted successfully
  FC plugin loaded successfully
  FCoE manager enabled successfully
  FC enabled on all modules successfully
  Warning: Ensure class-fcoe is included in qos policy-maps of all types

  Enable FCoE on a specific port (not required on all models):

  switch(config)# interface ethernet x/y
  switch(config-if)# fcoe mode on

  set the priority flow mode on a specific port:

  switch(config-if)# priority-flow-control mode auto

  FCoE also requires the DCBX (Data Center Bridging Exchange) protocol, which is used to negotiate capabilities between the FCOE endpoints. DCBX is an extension of LLDP, and LLDP is enabled globally and on all interfaces by default.
  If LLDP is disabled on any particular interface, it can be re-enabled as:

  switch(config-if)# int Ethernet x/y
  switch(config-if)# lldp transmit
  switch(config-if)# lldp receive

  Default Value:

  The FCoE feature is not enabled by default. LLDP is enabled globally and on all interfaces by default, so if FCoE is enabled then DCBX is enabled by default"
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.1,CN-L3|8.1.10.6(j),CSCv7|11.1,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.5.2 Configure FCoE Zoning - vsan database"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>

    <report type:"PASSED">
      description : "3.5.2 Configure FCoE Zoning - interface vfc"
      info        : "Cisco uses a construction called a 'VSAN' (analagous to a VLAN) which is used to restrict access between hosts and SAN resources. In restrictive cases, a typical VSAN will include two entries for the two host FCoE interfaces, and two entries for the SAN Controller interfaces (usually an FCoE SAN will have at least two). In the most restrictive case, the FCOE infrastructure will be split into two fabrics, and zones can hold as few as 2 entries (one for the host and one for the SAN controller on that fabric).

  Rationale:

  Impact:

  This configuration limits the reconnaissance available to a compromised or malicious host. Without configuring Zoning, a compromised host can collect the FCoE information from all other hosts in the same VSAN. It can then use that information to impersonate any of these hosts, and access their respective LUNs (unless some other control prevents that).

  Note that in Virtualized environments and in most Cluster architectures, multiple hypervisor hosts will access the a common set of LUNs on the SAN. In these situations the VSAN can have significantly more members (all host interfaces as well as all target SAN controller interfaces), since the reconnaissance and impersonation risks are somewhat lessened - you would need a compromised hypervisor to attack another hypervisor. While this risk is non-zero, it is understood that hypervisors typically (hopefully) have more strict protections than many other physical hosts.

  In addition, risk occurs if different server operating systems are in play. The most common issue is that if a Windows host can mount a volume that is partitioned for Linux or VMware ESXi, Windows will ask a logged in administrator for permission to 'sign' that volume. If the administrator selects 'Yes', then that volume will no longer be readable by the Linux or ESXi host(s).

  At a minimum, hypervisors should not share a zone with other physical hosts. Physical hosts should not share zones with each other. Hosts with different operating systems or incompatible filesystems should never share the same zone. In the best case, the 'one host / one SAN controller / one zone' rule is the safest approach.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create a VSAN. Give it a meaningful name

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101
  switch(config-vsan-db)# vsan 101 name HOST_X_SAN_Y

  Create Virtual Fiber Channel Interfaces.

  switch(config)# interface vfc 1001
  switch(config-if)# bind mac-address 00:01:0b:00:00:02
  switch(config-if)# int vfc 1002
  switch(config-if)# bind mac-address 00:01:0b:00:00:08
  switch(config)# int vfc 1003
  switch(config-if)# bind interface e 1/4

  Add VFC interfaces to the VSAN

  switch(config-if)# vsan database
  switch(config-vsan-db)# vsan 101 interface vfc 1001
  switch(config-vsan-db)# vsan 101 interface vfc 1002
  switch(config-vsan-db)# vsan 101 interface vfc 1003

  Default Value:

  By default, if FCoE is not enabled. If FCoE is enabled and configured, if a single VSAN is configured all FCoE devices have access to all other FCOE devices."
      reference   : "800-171|3.13.1,800-53|SC-7(16),CIS_Recommendation|3.5.2,CN-L3|8.1.10.6(j),CSCv7|9,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(16),LEVEL|1M,LEVEL|2M,NESA|T4.5.4,NIAv2|GS8d,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3102"
    </report>
  </else>
</if>

<report type:"WARNING">
  description : "4.3 Configure Alerts on all Configuration Changes"
  info        : "This is not easily implemented directly on the switch. Changes should ideally be backed up remotely, and a 'diff' process to highlight any changes in successive configurations is a good process to implement.

Rationale:

Change Control processes are ubiquitous in the industry. Especially with a text-based configuration such as most network devices have, it is easy to extract the exact changes from one version of the saved or running configuration to the next. This can then be correlated back to the change control process, to see:

Did any and all approved changes get executed?

Did any unapproved changes get executed?

Relating this back to the syslogs created by named user logins, did the change happen within the correct window?

Also relating back to the syslogs created by named user logins, did the correct person make the change? (see the AAA section, and named administrative users)

Is there a pattern of any one or more administrators making unapproved or outside of window changes?

Impact:

A formal change control process can manage conflicts in changes nicely, especially between disparate sections of the infrastructure. For instance, the situation where 'a server upgrade failed because the firewall changes interrupted the VPN session' is much less likely to occur if all changes are reviewed in advance.

In addition, changes made without planning tend to result in the 'testing in prod' scenario, ending up with a much higher ratio of service interruptions.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "This is not a process that typically runs on the switch, there is no on-switch remediation.

Default Value:

None."
  reference   : "CSCv7|11.3,LEVEL|2M,CIS_Recommendation|4.3"
  see_also    : "https://workbench.cisecurity.org/files/3102"
</report>

</check_type>
