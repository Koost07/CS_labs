#
# This script is Copyright (C) 2004-2021 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.2 $
# $Date: 2021/08/24 $
#
# Description   : This document implements the security configuration as recommended by the CIS Red Hat Enterprise Linux 8 Benchmark v1.0.1
#
#<ui_metadata>
#<display_name>CIS Red Hat EL8 Server L1 v1.0.1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Red Hat EL8 Server L1</name>
#  <version>1.0.1</version>
#  <link>https://workbench.cisecurity.org/files/3366</link>
#</spec>
#<labels>unix,cis,redhat,enterprise,linux,rhel,rhel_8,agent</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7,CIS_Recommendation</benchmark_refs>
#<variables>
#  <variable>
#    <name>BANNER_TEXT</name>
#    <default>All activities performed on this system will be monitored.</default>
#    <description>Banner Text</description>
#    <info>This is the text for the warning a user receives when logging onto the system.</info>
#  </variable>
#  <variable>
#    <name>NTP_SERVER</name>
#    <default>10\.0\.0\.2</default>
#    <description>Network Time Server</description>
#    <info>Host address of the NTP server for the target.</info>
#  </variable>
#  <variable>
#    <name>SYSLOG_SERVER</name>
#    <default>10\.0\.0\.2</default>
#    <description>Log server</description>
#    <info>Host address of the sytem log server for the target to send logs to.</info>
#  </variable>
#  <variable>
#    <name>TRY_FIRST_PASS</name>
#    <default>try_first_pass</default>
#    <description>5.3.1 - try_first_pass</description>
#    <info>retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password</info>
#  </variable>
#  <variable>
#    <name>PW_RETRY</name>
#    <default>[1-3]</default>
#    <description>5.3.1 - Allowed PW Retries</description>
#    <info>retry=3 - Allow 3 tries before sending back a failure.</info>
#  </variable>
#  <variable>
#    <name>PW_MINLEN</name>
#    <default>(1[4-9]|[2-9][0-9])</default>
#    <description>5.3.1 - PW minimum length</description>
#    <info>minlen=14 - password must be 14 characters or more</info>
#  </variable>
#  <variable>
#    <name>MAX_START_UP</name>
#    <default>10:30:60</default>
#    <description>5.2.18 Ensure SSH MaxStartups is configured</description>
#    <info>The benchmark recommended setting is 10:30:60</info>
#  </variable>
#  <variable>
#    <name>MAX_SESSIONS</name>
#    <default>4</default>
#    <description>5.2.19 Ensure SSH MaxSessions is set to 4 or less</description>
#    <info>The benchmark recommended setting is [1-4]</info>
#  </variable>
#  <variable>
#    <name>CUSTOM_PROFILE</name>
#    <default>sssd</default>
#    <description>5.3.1 Create custom authselect profile</description>
#    <info>The custom profile name which follows your local site policy.</info>
#  </variable>
#  <variable>
#    <name>WHEEL_GROUP_USERS</name>
#    <default>root</default>
#    <description>Wheel Group Users</description>
#    <info>Comma separated list of wheel group users</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "Red Hat Enterprise Linux 8 is installed"
      file        : "/etc/redhat-release"
      regex       : "^[\\s]*Red Hat Enterprise Linux.*release 8"
      expect      : "^[\\s]*Red Hat Enterprise Linux.*release 8"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Red_Hat_EL8_Server_L1_v1.0.1.audit from CIS Red Hat Enterprise Linux 8 Benchmark v1.0.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
    </report>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.1 Ensure mounting of cramfs filesystems is disabled - modprobe"
      info        : "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/cramfs.conf
and add the following line:

install cramfs /bin/true

Run the following command to unload the cramfs module:

# rmmod cramfs"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/modprobe -n -v cramfs | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "install /bin/true"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.1 Ensure mounting of cramfs filesystems is disabled - lsmod"
      info        : "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/cramfs.conf
and add the following line:

install cramfs /bin/true

Run the following command to unload the cramfs module:

# rmmod cramfs"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/lsmod | /usr/bin/grep cramfs | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.3 Ensure mounting of squashfs filesystems is disabled - modprobe"
      info        : "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs ). A squashfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/squashfs.conf
and add the following line:

install squashfs /bin/true

Run the following command to unload the squashfs module:

# rmmod squashfs"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/modprobe -n -v squashfs | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "install /bin/true"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.3 Ensure mounting of squashfs filesystems is disabled - lsmod"
      info        : "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs ). A squashfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/squashfs.conf
and add the following line:

install squashfs /bin/true

Run the following command to unload the squashfs module:

# rmmod squashfs"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/sbin/lsmod squashfs | /usr/bin/awk \'{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}\'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.4 Ensure mounting of udf filesystems is disabled - modprobe"
      info        : "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/udf.conf
and add the following line:

install udf /bin/true

Run the following command to unload the udf module:

# rmmod udf"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.4,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/modprobe -n -v udf | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "install /bin/true"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.4 Ensure mounting of udf filesystems is disabled - lsmod"
      info        : "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/udf.conf
and add the following line:

install udf /bin/true

Run the following command to unload the udf module:

# rmmod udf"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.1.4,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/lsmod udf | /usr/bin/awk \'{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}\'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.2 Ensure /tmp is configured - mount check"
      info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.

Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.

/tmp utilizing tmpfs can be resized using the size={size} parameter on the Options line on the tmp.mount file"
      solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used: configure /etc/fstab as appropriate.
Example:

tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

# mount -o remount,noexec,nodev,nosuid /tmp

OR if systemd tmp.mount file is used:
Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

# [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/lib/systemd/system/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to reload the systemd daemon:

# systemctl daemon-reload

Run the following command to unmask and start tmp.mount:

# systemctl unmask tmp.mount
# systemctl --now enable tmp.mount"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.1.2,CN-L3|8.1.10.6(d),CSCv7|9.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /bin/grep /tmp"
      expect      : ".*on[\\s]+/tmp[\\s]+type.*"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Determine whether systemd or legacy fstab"
          cmd         : "/usr/bin/systemctl is-enabled tmp.mount"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.1.2 Ensure /tmp is configured - config check"
          info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.

Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.

/tmp utilizing tmpfs can be resized using the size={size} parameter on the Options line on the tmp.mount file"
          solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used: configure /etc/fstab as appropriate.
Example:

tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

# mount -o remount,noexec,nodev,nosuid /tmp

OR if systemd tmp.mount file is used:
Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

# [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/lib/systemd/system/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to reload the systemd daemon:

# systemctl daemon-reload

Run the following command to unmask and start tmp.mount:

# systemctl unmask tmp.mount
# systemctl --now enable tmp.mount"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|1.1.2,CN-L3|8.1.10.6(d),CSCv6|9.1,CSCv7|9.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl is-enabled tmp.mount"
          expect      : "enabled"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.1.2 Ensure /tmp is configured - config check"
          info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Rationale:

Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.

Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.

/tmp utilizing tmpfs can be resized using the size={size} parameter on the Options line on the tmp.mount file"
          solution    : "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file:
If /etc/fstab is used: configure /etc/fstab as appropriate.
Example:

tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp

# mount -o remount,noexec,nodev,nosuid /tmp

OR if systemd tmp.mount file is used:
Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist:

# [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/lib/systemd/system/tmp.mount /etc/systemd/system/

Edit the file /etc/systemd/system/tmp.mount:

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to reload the systemd daemon:

# systemctl daemon-reload

Run the following command to unmask and start tmp.mount:

# systemctl unmask tmp.mount
# systemctl --now enable tmp.mount"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.1.2,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|9.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/fstab"
          regex       : "^[\\s]*tmpfs[\\s]+\/tmp[\\s]+tmpfs.*?$"
          expect      : "^[\\s]*tmpfs[\\s]+\/tmp[\\s]+tmpfs.*?$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.3 Ensure nodev option set on /tmp partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp ."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,nodev /tmp

OR
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nodev to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to remount /tmp :

# mount -o remount,nodev /tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.3,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.4 Ensure nosuid option set on /tmp partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp ."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,nosuid /tmp

or
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nosuid to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to remount /tmp :

# mount -o remount,nosuid /tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.4,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5 Ensure noexec option set on /tmp partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp ."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /tmp :

# mount -o remount,noexec /tmp

or
Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add noexec to the /tmp mount options:

[Mount]
Options=mode=1777,strictatime,noexec,nodev,nosuid

Run the following command to remount /tmp :

# mount -o remount,noexec /tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.5,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|2.6,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.8 Ensure nodev option set on /var/tmp partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var/tmp ."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,nodev /var/tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.8,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /var/tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.9 Ensure nosuid option set on /var/tmp partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp ."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp:

# mount -o remount,nosuid /var/tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.9,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /var/tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.10 Ensure noexec option set on /var/tmp partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp ."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information.
Run the following command to remount /var/tmp :

# mount -o remount,noexec /var/tmp"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.10,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|2.6,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /var/tmp ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.14 Ensure nodev option set on /home partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. See the fstab(5) manual page for more information.

# mount -o remount,nodev /home

Additional Information:

The actions in this recommendation refer to the /home partition, which is the default user partition that is defined in many distributions. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.14,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /home ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.15 Ensure nodev option set on /dev/shm partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm :

# mount -o remount,nodev /dev/shm

Additional Information:

Some distributions mount /dev/shm through other means and require /dev/shm to be added to /etc/fstab even though it is already being mounted on boot. Others may configure /dev/shm in other locations and may override /etc/fstab configuration. Consult the documentation appropriate for your distribution."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.15,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /dev/shm ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.16 Ensure nosuid option set on /dev/shm partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm :

# mount -o remount,nosuid /dev/shm

Additional Information:

Some distributions mount /dev/shm through other means and require /dev/shm to be added to /etc/fstab even though it is already being mounted on boot. Others may configure /dev/shm in other locations and may override /etc/fstab configuration. Consult the documentation appropriate for your distribution."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.16,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /dev/shm ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.17 Ensure noexec option set on /dev/shm partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm:

# mount -o remount,noexec /dev/shm

Additional Information:

Some distributions mount /dev/shm through other means and require /dev/shm to be added to /etc/fstab even though it is already being mounted on boot. Others may configure /dev/shm in other locations and may override /etc/fstab configuration. Consult the documentation appropriate for your distribution."
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.17,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|2.6,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/mount | /usr/bin/grep 'on /dev/shm ' | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "1.1.18 Ensure nodev option set on removable media partitions"
      info            : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Removable media containing character and block special devices could be used to circumvent security controls by allowing non-root users to access sensitive device files such as /dev/kmem or the raw disk partitions."
      solution        : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference       : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.18,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|3.1,CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also        : "https://workbench.cisecurity.org/files/3366"
      file            : "/etc/fstab"
      regex           : "^[\\s]*[^#]*[\\s]+\\/m.*\/(floppy|cdrom|corder)[\\s]"
      expect          : "^[\\s]*[^#]*[\\s]+\\/m.*\/(floppy|cdrom|corder)[\\s].*,nodev"
      string_required : NO
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "1.1.19 Ensure nosuid option set on removable media partitions"
      info            : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them."
      solution        : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference       : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.19,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|3.1,CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also        : "https://workbench.cisecurity.org/files/3366"
      file            : "/etc/fstab"
      regex           : "^[\\s]*[^#]*[\\s]+\\/m.*\\/(floppy|cdrom|corder)[\\s]"
      expect          : "^[\\s]*[^#]*[\\s]+\\/m.*\\/(floppy|cdrom|corder)[\\s].*[,]?nosuid"
      string_required : NO
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "1.1.20 Ensure noexec option set on removable media partitions"
      info            : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Setting this option on a file system prevents users from executing programs from the removable media. This deters users from being able to introduce potentially malicious software on the system."
      solution        : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information."
      reference       : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.20,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|3.1,CSCv7|2.6,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also        : "https://workbench.cisecurity.org/files/3366"
      file            : "/etc/fstab"
      regex           : "^[\\s]*[^#]*[\\s]+\\/m.*\\/(floppy|cdrom|corder)[\\s]"
      expect          : "^[\\s]*[^#]*[\\s]+\\/m.*\\/(floppy|cdrom|corder)[\\s].*[,]?noexec"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.21 Ensure sticky bit is set on all world-writable directories"
      info        : "Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.

Rationale:

This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user."
      solution    : "Run the following command to set the sticky bit on all world writable directories:

# df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod a+t '{}'"
      reference   : "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),CIS_Recommendation|1.1.21,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|1A,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/df --local -P | /usr/bin/awk {'if (NR!=1) print $6'} | /usr/bin/xargs -I '{}' /usr/bin/find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'"
      expect      : "none"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.1.22 Disable Automounting"
      info          : "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.

Rationale:

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting."
      solution      : "Run the following command to disable autofs:

# systemctl --now disable autofs




Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

This control should align with the tolerance of the use of portable drives and optical media in the organization. On a server requiring an admin to manually mount media can be part of defense-in-depth to reduce the risk of unapproved software or information being introduced or proprietary software or information being exfiltrated. If admins commonly use flash drives and Server access has sufficient physical controls, requiring manual mounting may not increase security."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|1.1.22,CSCv6|9.1,CSCv7|8.4,CSCv7|8.5,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,LEVEL|2A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled autofs | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.23 Disable USB Storage - modprobe"
      info        : "USB storage provides a means to transfer and store files insuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.

Rationale:

Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/usb_storage.conf
and add the following line:

install usb-storage /bin/true

Run the following command to unload the usb-storage module:

rmmod usb-storage




Additional Information:

An alternative solution to disabling the usb-storage module may be found in USBGuard.

Use of USBGuard and construction of USB device policies should be done in alignment with site policy."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.23,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|3.1,CSCv7|8.4,CSCv7|8.5,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/modprobe -n -v usb-storage | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "install /bin/true"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.23 Disable USB Storage - lsmod"
      info        : "USB storage provides a means to transfer and store files insuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.

Rationale:

Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware."
      solution    : "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vim /etc/modprobe.d/usb_storage.conf
and add the following line:

install usb-storage /bin/true

Run the following command to unload the usb-storage module:

rmmod usb-storage




Additional Information:

An alternative solution to disabling the usb-storage module may be found in USBGuard.

Use of USBGuard and construction of USB device policies should be done in alignment with site policy."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|1.1.23,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|8.4,CSCv7|8.5,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/lsmod | /usr/bin/grep usb-storage | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2.1 Ensure Red Hat Subscription Manager connection is configured"
      info        : "Systems need to be registered with the Red Hat Subscription Manager (RHSM) to receive patch updates. This is usually configured during initial installation.

Rationale:

It is important to register with the Red Hat Subscription Manager to make sure that patches are updated on a regular basis. This helps to reduce the exposure time as new vulnerabilities are discovered.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to connect to the Red Hat Subscription Manager:

# subscription-manager register"
      reference   : "800-171|3.14.1,800-53|SI-2c.,CIS_Recommendation|1.2.1,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/subscription-manager identity"
      expect      : "ManualReviewRequired"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CHKCONFIG
      description : "1.2.2 Disable the rhnsd Daemon"
      info        : "The rhnsd daemon polls the Red Hat Network web site for scheduled actions and, if there are, executes those actions.

Rationale:

Patch management policies may require that organizations test the impact of a patch before it is deployed in a production environment. Having patches automatically deployed could have a negative impact on the environment. It is best to not allow an action by default but only after appropriate consideration has been made. It is recommended that the service be disabled unless the risk is understood and accepted or you are running your own satellite . This item is not scored because organizations may have addressed the risk."
      solution    : "Run the following command to disable rhnsd:

# systemctl --now disable rhnsd"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|1.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      service     : "rhnsd"
      levels      : "0123456"
      status      : OFF
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.2.3 Ensure GPG keys are configured"
      info          : "Most packages managers implement GPG key signing to verify package integrity during installation.

Rationale:

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution      : "Update your package manager GPG keys in accordance with site policy."
      reference     : "800-53|SI-7(6),CIS_Recommendation|1.2.3,CSCv7|3.4,CSF|PR.DS-6,ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|1M,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,QCSC-v1|3.2,SWIFT-CSCv1|6.2"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/rpm -q gpg-pubkey --queryformat '%{name}-%{version}-%{release} --> %{summary}\n'"
      expect        : "^gpg-pubkey(-[a-f0-9]{8}){2} --> gpg\\(Red\\s+Hat,\\s+Inc\\.\\s+\\(release\\s+key\\s*.*\\)\\s+\\<security@redhat\\.com\\>[\\)]?"
      dont_echo_cmd : YES
      severity      : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.2.4 Ensure gpgcheck is globally activated"
      info        : "The gpgcheck option, found in the main section of the /etc/yum.conf and individual /etc/yum/repos.d/* files determines if an RPM package's signature is checked prior to its installation.

Rationale:

It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source."
      solution    : "Edit /etc/yum.conf and set 'gpgcheck=1' in the [main] section.
Edit any failing files in /etc/yum.repos.d/* and set all instances of gpgcheck to '1'."
      reference   : "800-53|SI-7(6),CIS_Recommendation|1.2.4,CSCv7|3.4,CSF|PR.DS-6,ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|1A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,QCSC-v1|3.2,SWIFT-CSCv1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/yum.conf /etc/yum.repos.d/*.repo"
      regex       : "^[\\s]*gpgcheck[\\s]*="
      expect      : "^[\\s]*gpgcheck[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2.5 Ensure package manager repositories are configured"
      info        : "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

Rationale:

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure your package manager repositories according to site policy."
      reference   : "800-171|3.14.1,800-53|SI-2,CIS_Recommendation|1.2.5,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/yum repolist"
      expect      : "ManualReviewRequired"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.3.1 Ensure sudo is installed"
      info        : "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

Rationale:

sudo supports a plugin architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plugins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers.

The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific."
      solution    : "Run the following command to install sudo

# dnf install sudo"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|1.3.1,CSCv6|2.2,CSCv7|4.3,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "sudo-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.2 Ensure sudo commands use pty"
      info        : "sudo can be configured to run only from a psuedo-pty

Rationale:

Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.

Impact:

editing the sudo configuration incorrectly can cause sudo to stop functioning."
      solution    : "edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f and add the following line:

Defaults use_pty"
      reference   : "800-171|3.1.1,800-53|AC-3(7),CIS_Recommendation|1.3.2,CN-L3|7.1.2.2(g),CN-L3|7.1.3.2(c),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*Defaults[\\s]+(\[^#]+,[\\s]*)?use_pty' /etc/sudoers /etc/sudoers.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.3 Ensure sudo log file exists"
      info        : "sudo can use a custom log file

Rationale:

A sudo log file simplifies auditing of sudo commands

Impact:

editing the sudo configuration incorrectly can cause sudo to stop functioning"
      solution    : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f and add the following line:

Defaults  logfile='<PATH TO CUSTOM LOG FILE>'

Example

Defaults logfile='/var/log/sudo.log'"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.3.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*Defaults[\\s]+(\[^#]+,[\\s]*)?logfile=' /etc/sudoers /etc/sudoers.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "1.4.1 Ensure AIDE is installed"
      info        : "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

Rationale:

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries."
      solution    : "Run the following command to install AIDE:

# dnf install aide

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.
Initialize AIDE:
Run the following commands:

# aide --init

# mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz"
      reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|1.4.1,CSCv6|2.2,CSCv7|14.9,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "aide-0.0.0-0"
      operator    : "gt"
      required    : YES
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for crontab aide"
          cmd         : "/usr/bin/grep -Prs '^([^#]+\\s+)?(\\/usr\\/s?bin\\/|^\\s*)aide(\\.wrapper)?\\s(--?\\S+\\s)*(--(check|update)|\\$AIDEARGS)\\b' /etc/cron.* /etc/crontab /var/spool/cron/ | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"; else print \"pass\"}'"
          expect      : "pass"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - cron"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-53|SI-7(1),CIS_Recommendation|1.4.2,CN-L3|7.1.3.5(b),CSCv7|14.9,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|1A,NESA|T7.3.3,QCSC-v1|3.2,SWIFT-CSCv1|6.2"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -Prs '^([^#]+\\s+)?(\\/usr\\/s?bin\\/|^\\s*)aide(\\.wrapper)?\\s(--?\\S+\\s)*(--(check|update)|\\$AIDEARGS)\\b' /etc/cron.* /etc/crontab /var/spool/cron/ | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"; else print \"pass\"}'"
          expect      : "pass"
        </custom_item>

        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl is-enabled aidecheck.service"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv6|9.1,CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl is-enabled aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv6|9.1,CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl status aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.4.2 Ensure filesystem integrity is regularly checked - cron"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-53|SI-7(1),CIS_Recommendation|1.4.2,CN-L3|7.1.3.5(b),CSCv7|14.9,CSF|PR.DS-6,ITSG-33|SI-7(1),LEVEL|1A,NESA|T7.3.3,QCSC-v1|3.2,SWIFT-CSCv1|6.2"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl is-enabled aidecheck.service"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv6|9.1,CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl is-enabled aidecheck.service | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl is-enabled aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv6|9.1,CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl is-enabled aidecheck.timer | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.4.2 Ensure filesystem integrity is regularly checked - systemctl status aidecheck.timer"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/sbin/aide --check

OR if aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/sbin/aide --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.4.2,CN-L3|8.1.10.6(d),CSCv7|14.9,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl status aidecheck.timer | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "^[\\s]*Active: active \\(running\\)"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.1 Ensure permissions on bootloader config are configured"
      info        : "The grub configuration file contains information on boot settings and passwords for unlocking boot options.

The grub configuration is usually grub.cfg and grubenv stored in /boot/grub2/'

Rationale:

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them."
      solution    : "Run the following commands to set ownership and permissions on your grub configuration file(s):

# chown root:root /boot/grub2/grub.cfg
# test -f /boot/grub2/user.cfg && chown root:root /boot/grub2/user.cfg
# chmod og-rwx /boot/grub2/grub.cfg
# test -f /boot/grub2/user.cfg && chmod og-rwx /boot/grub2/user.cfg

OR If the system uses UEFI, edit /etc/fstab and add the fmask=0077 option:
Example:

<device> /boot/efi vfat defaults,umask=0027,fmask=0077,uid=0,gid=0 0 0

Note: This may require a re-boot to enable the change

Additional Information:

This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Replace /boot/grub2/grub.cfg and /boot/grub2/grubenv with the appropriate configuration file(s) for your environment"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.5.1,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "tst1=\"\" tst2=\"\" tst3=\"\" tst4=\"\" test1=\"\" test2=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubdir=\"\" grubfile=\"\" userfile=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.cfg \"$efidir\"/grub.conf; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.cfg \"$gbdir\"/grub.conf; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; userfile=\"$grubdir/user.cfg\"; stat -c \"%a\" \"$grubfile\" | /usr/bin/grep -Pq '^\\h*[0-7]00$' && tst1=pass; output=\"Permissions on \\\"$grubfile\\\" are \\\"$(stat -c \"%a\" \"$grubfile\")\\\"\"; stat -c \"%u:%g\" \"$grubfile\" | /usr/bin/grep -Pq '^\\h*0:0$' && tst2=pass; output2=\"\\\"$grubfile\\\" is owned by \\\"$(stat -c \"%U\" \"$grubfile\")\\\" and belongs to group \\\"$(stat -c \"%G\" \"$grubfile\")\\\"\"; [ \"$tst1\" = pass ] && [ \"$tst2\" = pass ] && test1=pass; if [ -f \"$userfile\" ]; then stat -c \"%a\" \"$userfile\" | /usr/bin/grep -Pq '^\\h*[0-7]00$' && tst3=pass; output3=\"Permissions on \\\"$userfile\\\" are \\\"$(stat -c \"%a\" \"$userfile\")\\\"\";    stat -c \"%u:%g\" \"$userfile\" | /usr/bin/grep -Pq '^\\h*0:0$' && tst4=pass; output4=\"\\\"$userfile\\\" is owned by \\\"$(stat -c \"%U\" \"$userfile\")\\\" and belongs to group \\\"$(stat -c \"%G\" \"$userfile\")\\\"\"; [ \"$tst3\" = pass ] && [ \"$tst4\" = pass ] && test2=pass; else test2=pass; fi; [ \"$test1\" = pass ] && [ \"$test2\" = pass ] && passing=true; if [ \"$passing\" = true ] ; then echo \"PASSED!\"; echo \"$output\"; echo \"$output2\"; [ -n \"$output3\" ] && echo \"$output3\"; [ -n \"$output4\" ] && echo \"$output4\"; else echo \"FAILED!\"; echo \"$output\"; echo \"$output2\"; [ -n \"$output3\" ] && echo \"$output3\"; [ -n \"$output4\" ] && echo \"$output4\"; fi"
      expect      : "PASSED"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.2 Ensure bootloader password is set"
      info        : "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Rationale:

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time).

Impact:

If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing 'e' or access the GRUB 2 command line by pressing 'c'

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items."
      solution    : "Create an encrypted password with grub2-setpassword :

# grub2-setpassword

Enter password: <password>
Confirm password: <password>

Run the following command to update the grub2 configuration:

# grub2-mkconfig -o /boot/grub2/grub.cfg




Additional Information:

This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Replace '/boot/grub2/grub.cfg with the appropriate grub configuration file for your environment

The superuser/user information and password do not have to be contained in the /etc/grub.d/00_header file. The information can be placed in any /etc/grub.d file as long as that file is incorporated into grub.cfg. The user may prefer to enter this data into a custom file, such as /etc/grub.d/40_custom so it is not overwritten should the Grub package be updated. If placing the information in a custom file, do not include the 'cat << EOF' and 'EOF' lines as the content is automatically added from these files."
      reference   : "800-171|3.1.1,800-53|AC-3.,CIS_Recommendation|1.5.2,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "tst1=\"\" tst2=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubdir=\"\" grubfile=\"\" grubext=\"\" userfile=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.cfg \"$efidir\"/grub.conf; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.cfg \"$gbdir\"/grub.conf; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; userfile=\"$grubdir/user.cfg\"; if [ -f \"$userfile\" ]; then /usr/bin/grep -Pq '^\\h*GRUB2_PASSWORD\\h*=\\h*.+$' \"$userfile\" && output=\"bootloader password set in \\\"$userfile\\\"\"; fi; if [ -z \"$output\" ]; then if [ -f \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then /usr/bin/grep -Piq '^\\h*password\\h+\\H+\\h+.+$' \"$grubfile\" && output=\"bootloader password set in \\\"$grubfile\\\"\"; elif [ \"$grubext\" = \"cfg\" ]; then /usr/bin/grep -Piq '^\\h*set\\h+superusers\\h*=\\h*\"?[^\"\\n\\r]+\"?(\\h+.*)?$' \"$grubfile\" && tst1=pass; /usr/bin/grep -Piq '^\\h*password\\h+\\H+\\h+.+$' \"$grubfile\" && tst2=pass; [ \"$tst1\" = pass ] && [ \"$tst2\" = pass ] && output=\"bootloader password set in \\\"$grubfile\\\"\"; fi; fi; fi; if [ -n \"$output\" ] ; then echo \"PASSED\"; echo \"$output\"; else echo \"FAILED\"; [ -f \"$userfile\" ] && echo \"bootloader password is not set in \\\"$userfile\\\"\"; [ \"$grubext\" = \"cfg\" ] && [ ! -f \"$userfile\" ] && echo \"\\\"$userfile\\\" doesn't exist\"; [ -f \"$grubfile\" ] && echo \"bootloaded password is not set in \\\"$grubfile\\\"\"; fi"
      expect      : "PASSED"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.3 Ensure authentication required for single user mode - rescue.service"
      info        : "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.

Rationale:

Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials."
      solution    : "Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      reference   : "800-53|SI-7(9),CIS_Recommendation|1.5.3,CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|1A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,QCSC-v1|3.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/usr/lib/systemd/system/rescue.service"
      regex       : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue"
      expect      : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.5.3 Ensure authentication required for single user mode - emergency.service"
      info        : "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.

Rationale:

Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials."
      solution    : "Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:

ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      reference   : "800-53|SI-7(9),CIS_Recommendation|1.5.3,CN-L3|8.1.2.3,CN-L3|8.1.4.6,CSCv7|5.1,CSF|PR.DS-6,ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|1A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,QCSC-v1|3.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/usr/lib/systemd/system/emergency.service"
      regex       : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
      expect      : "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - limits.conf limits.d"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*\\*[\\s]+hard[\\s]+core[\\s]+0[\\s]*$' /etc/security/limits.conf /etc/security/limits.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - sysctl"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl fs.suid_dumpable"
      expect      : "^[\\s]*fs\\.suid_dumpable[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1 Ensure core dumps are restricted - sysctl.conf sysctl.d"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*fs\\.suid_dumpable[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Determine whether coredump.service is installed"
          cmd         : "/usr/bin/systemctl is-enabled coredump.service"
          expect      : "(enabled|disabled|masked)"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.6.1 Ensure core dumps are restricted - Storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*[Ss]torage[\\s]*=[\\s]*"
          expect      : "^[\\s]*[Ss]torage[\\s]*=[\\s]*[Nn]one$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.6.1 Ensure core dumps are restricted - ProcessSizeMax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*[Pp]rocess[Ss]ize[Mm]ax[\\s]*=[\\s]*"
          expect      : "^[\\s]*[Pp]rocess[Ss]ize[Mm]ax[\\s]*=[\\s]*0$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.6.1 Ensure core dumps are restricted - Storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "1.6.1 Ensure core dumps are restricted - ProcessSizeMax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

If systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload"
          reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.6.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.2 Ensure address space layout randomization (ASLR) is enabled - sysctl"
      info        : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

kernel.randomize_va_space = 2

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2"
      reference   : "800-53|SI-16.,CIS_Recommendation|1.6.2,CSCv6|3.1,CSCv7|8.3,ITSG-33|SI-16,LEVEL|1A,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl kernel.randomize_va_space"
      expect      : "^[\\s]*kernel\\.randomize_va_space[\\s]*=[\\s]*2[\\s]*$"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.6.2 Ensure address space layout randomization (ASLR) is enabled - sysctl.conf sysctl.d"
      info          : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution      : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

kernel.randomize_va_space = 2

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2"
      reference     : "800-53|SI-16.,CIS_Recommendation|1.6.2,CSCv7|8.3,ITSG-33|SI-16,LEVEL|1A"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/grep -s -P '^[\\s]*kernel\\.randomize_va_space[\\s]*=[\\s]*2[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect        : "^pass$"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : BANNER_CHECK
      description : "1.8.1.1 Ensure message of the day is configured properly - banner text"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
      reference   : "800-171|3.1.9,800-53|AC-8,CIS_Recommendation|1.8.1.1,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/motd"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
      content     : "All activities performed on this system will be monitored."
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.8.1.1 Ensure message of the day is configured properly - mrsv"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR
If the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.1,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/motd"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : BANNER_CHECK
      description : "1.8.1.2 Ensure local login warning banner is configured properly - banner text"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue"
      reference   : "800-171|3.1.9,800-53|AC-8,CIS_Recommendation|1.8.1.2,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
      content     : "All activities performed on this system will be monitored."
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.8.1.2 Ensure local login warning banner is configured properly - mrsv"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.2,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : BANNER_CHECK
      description : "1.8.1.3 Ensure remote login warning banner is configured properly - banner text"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net"
      reference   : "800-171|3.1.9,800-53|AC-8,CIS_Recommendation|1.8.1.3,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue.net"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
      content     : "All activities performed on this system will be monitored."
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.8.1.3 Ensure remote login warning banner is configured properly - mrsv"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.3,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue.net"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.4 Ensure permissions on /etc/motd are configured"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Rationale:

If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/motd :

# chown root:root /etc/motd

# chmod u-x,go-wx /etc/motd"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.4,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/motd"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.5 Ensure permissions on /etc/issue are configured"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Rationale:

If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue :

# chown root:root /etc/issue

# chmod u-x,go-wx /etc/issue"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.5,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.8.1.6 Ensure permissions on /etc/issue.net are configured"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Rationale:

If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue.net :

# chown root:root /etc/issue.net

# chmod u-x,go-wx /etc/issue.net"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.8.1.6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/issue.net"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : RPM_CHECK
          description : "Check GDM installed"
          rpm         : "gdm-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.8.2 Ensure GDM login banner is configured - banner message enabled"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Edit or create the file /etc/gdm/greeter.dconf-defaults and add the following:

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='Authorized uses only. All activity may be monitored and reported.'

Additional Information:

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message file.

If a different GUI login service is in use, consult your documentation and apply an equivalent banner."
          reference   : "800-171|3.1.9,800-53|AC-8c.1.,CIS_Recommendation|1.8.2,CSCv7|5.1,ITSG-33|AC-8c.a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/gdm/greeter.dconf-defaults"
          regex       : "^[\\s]*banner-message-enable[\\s]*="
          expect      : "^[\\s]*banner-message-enable[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>

        <custom_item>
          system       : "Linux"
          type         : BANNER_CHECK
          description  : "1.8.2 Ensure GDM login banner is configured - banner message text"
          info         : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution     : "Edit or create the file /etc/gdm/greeter.dconf-defaults and add the following:

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='Authorized uses only. All activity may be monitored and reported.'

Additional Information:

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message file.

If a different GUI login service is in use, consult your documentation and apply an equivalent banner."
          reference    : "800-171|3.1.9,800-53|AC-8,CIS_Recommendation|1.8.2,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also     : "https://workbench.cisecurity.org/files/3366"
          file         : "/etc/gdm/greeter.dconf-defaults"
# Note: Variable @BANNER_TEXT@ replaced with "All activities performed on this system will be monitored." in field "content".
          content      : "All activities performed on this system will be monitored."
          is_substring : YES
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.8.2 Ensure GDM login banner is configured - banner message enabled"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Edit or create the file /etc/gdm/greeter.dconf-defaults and add the following:

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='Authorized uses only. All activity may be monitored and reported.'

Additional Information:

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message file.

If a different GUI login service is in use, consult your documentation and apply an equivalent banner."
          reference   : "800-171|3.1.9,800-53|AC-8c.1.,CIS_Recommendation|1.8.2,CSCv7|5.1,ITSG-33|AC-8c.a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "1.8.2 Ensure GDM login banner is configured - banner message text"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Edit or create the file /etc/gdm/greeter.dconf-defaults and add the following:

[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='Authorized uses only. All activity may be monitored and reported.'

Additional Information:

Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-message file.

If a different GUI login service is in use, consult your documentation and apply an equivalent banner."
          reference   : "800-171|3.1.9,800-53|AC-8,CIS_Recommendation|1.8.2,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.9 Ensure updates, patches, and additional security software are installed"
      info        : "Periodically patches are released for included software either due to security flaws or to include additional functionality.

Rationale:

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected."
      solution    : "Use your package manager to update all packages on the system according to site policy.
The following command will install all available updates:

# dnf update

Additional Information:

Site policy may mandate a testing period before install onto production systems for available updates.

# dnf check-update"
      reference   : "800-171|3.14.1,800-53|SI-2,CIS_Recommendation|1.9,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/dnf check-update && echo 'pass' || echo 'fail'"
      expect      : "^pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.10 Ensure system-wide crypto policy is not legacy"
      info        : "The system-wide crypto-policies followed by the crypto core components allow consistently deprecating and disabling algorithms system-wide.

The individual policy levels (DEFAULT, LEGACY, FUTURE, and FIPS) are included in the crypto-policies(7) package.

Rationale:

If the Legacy system-wide crypto policy is selected, it includes support for TLS 1.0, TLS 1.1, and SSH2 protocols or later. The algorithms DSA, 3DES, and RC4 are allowed, while RSA and Diffie-Hellman parameters are accepted if larger than 1023-bits.

These legacy protocols and algorithms can make the system vulnerable to attacks, including those listed in RFC 7457

Impact:

Environments that require compatibility with older insecure protocols may require the use of the less secure LEGACY policy level."
      solution    : "Run the following command to change the system-wide crypto policy

# update-crypto-policies --set <CRYPTO POLICY>

Example:

# update-crypto-policies --set DEFAULT

Run the following to make the updated system-wide crypto policy active

# update-crypto-policies

Default Value:

DEFAULT"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.10,CN-L3|8.1.10.6(d),CSCv7|14.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -i -E '^[\\s]*LEGACY[\\s]*([\\s]+#.*)?$' /etc/crypto-policies/config | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.1.1 Ensure xinetd is not installed"
      info        : "The eXtended InterNET Daemon ( xinetd ) is an open source super daemon that replaced the original inetd daemon. The xinetd daemon listens for well known services and dispatches the appropriate daemon to properly respond to service requests.

Rationale:

If there are no xinetd services required, it is recommended that the package be removed."
      solution    : "Run the following command to remove xinetd:

# dnf remove xinetd"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CIS_Recommendation|2.1.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "xinetd-0.0.0-0"
      operator    : "lt"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : RPM_CHECK
          description : "Check NTP installed"
          rpm         : "ntp-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.1.1 Ensure time synchronization is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Rationale:

Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On physical systems or virtual systems where host based time synchronization is not available install chrony:
Run the folloing command to install chrony:

# dnf install chrony

On virtual systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization.




Additional Information:

systemd-timesyncd is part of systemd. Some versions of systemd have been compiled without systemd-timesycnd. On these distributions, chrony or NTP should be used instead of systemd-timesycnd."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|2.2.1.1,CSCv6|2.2,CSCv7|6.1,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          rpm         : "ntp-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "2.2.1.1 Ensure time synchronization is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Rationale:

Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On physical systems or virtual systems where host based time synchronization is not available install chrony:
Run the folloing command to install chrony:

# dnf install chrony

On virtual systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization.




Additional Information:

systemd-timesyncd is part of systemd. Some versions of systemd have been compiled without systemd-timesycnd. On these distributions, chrony or NTP should be used instead of systemd-timesycnd."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|2.2.1.1,CSCv6|2.2,CSCv7|6.1,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          rpm         : "chrony-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : RPM_CHECK
          description : "Check chrony installed"
          rpm         : "chrony-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.2.1.2 Ensure chrony is configured - NTP server"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

This recommendation only applies if chrony is in use on the system."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Configure chrony to run as the chrony user"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CIS_Recommendation|2.2.1.2,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1A,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/chrony.conf"
# Note: Variable @NTP_SERVER@ replaced with "10\\.0\\.0\\.2" in field "regex".
          regex       : "^[\\s]*(server|pool)[\\s]+10\\.0\\.0\\.2"
# Note: Variable @NTP_SERVER@ replaced with "10\\.0\\.0\\.2" in field "expect".
          expect      : "^[\\s]*(server|pool)[\\s]+10\\.0\\.0\\.2"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.2.1.2 Ensure chrony is configured - user"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

This recommendation only applies if chrony is in use on the system."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Configure chrony to run as the chrony user"
          reference   : "800-171|3.1.4,800-53|AC-5.,CIS_Recommendation|2.2.1.2,CSCv7|6.1,CSF|PR.DS-5,ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5,LEVEL|1A,NESA|T5.1.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/ps -ef | /usr/bin/grep chronyd | /usr/bin/grep -v grep | /usr/bin/cut -d ' ' -f 1"
          expect      : "chrony"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.2.1.2 Ensure chrony is configured - NTP server"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

This recommendation only applies if chrony is in use on the system."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Configure chrony to run as the chrony user"
          reference   : "800-171|3.3.7,800-53|AU-8(1),CIS_Recommendation|2.2.1.2,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.4,ITSG-33|AU-8(1),LEVEL|1A,NESA|T3.6.7,NIAv2|NS44,NIAv2|NS45,NIAv2|NS46,NIAv2|NS47,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "2.2.1.2 Ensure chrony is configured - user"
          info        : "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.

Rationale:

If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.

This recommendation only applies if chrony is in use on the system."
          solution    : "Add or edit server or pool lines to /etc/chrony.conf as appropriate:

server <remote-server>

Configure chrony to run as the chrony user"
          reference   : "800-171|3.1.4,800-53|AC-5.,CIS_Recommendation|2.2.1.2,CSCv7|6.1,CSF|PR.DS-5,ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5,LEVEL|1A,NESA|T5.1.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.2 Ensure X Window System is not installed"
      info        : "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Rationale:

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Impact:

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the 'headless' Java packages for your specific Java runtime, if provided by your distribution."
      solution    : "Run the following command to remove the X Windows System packages.

# dnf remove xorg-x11-server-*"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|2.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/rpm -qa xorg-x11-server-* | /usr/bin/awk '{print} END {if (NR == 0) print \"No xorg-x11-server items found\"; else print}'"
      expect      : "^No xorg-x11-server items found$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : XINETD_SVC
      description : "2.2.3 Ensure rsync service is not enabled"
      info        : "The rsyncd service can be used to synchronize files between systems over network links.

Rationale:

The rsyncd service presents a security risk as it uses unencrypted protocols for communication."
      solution    : "Run the following command to disable rsyncd:

# systemctl --now disable rsyncd

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

On some distributions the rsync service is known as rsync, not rsyncd."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|2.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      service     : "rsync"
      status      : OFF
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.4 Ensure Avahi Server is not enabled - socket"
      info          : "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Rationale:

Automatic discovery of network services is not normally required for system functionality. It is recommended to disable the service to reduce the potential attack surface."
      solution      : "Run the following commands to disable avahi-daemon.socket and avahi-daemon.service:

# systemctl --now disable avahi-daemon.socket
# systemctl --now disable avahi-daemon.service




Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.4,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled avahi-daemon.socket | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.4 Ensure Avahi Server is not enabled - service"
      info          : "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Rationale:

Automatic discovery of network services is not normally required for system functionality. It is recommended to disable the service to reduce the potential attack surface."
      solution      : "Run the following commands to disable avahi-daemon.socket and avahi-daemon.service:

# systemctl --now disable avahi-daemon.socket
# systemctl --now disable avahi-daemon.service




Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.4,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled avahi-daemon.service | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.5 Ensure SNMP Server is not enabled"
      info          : "The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

Rationale:

The SNMP server can communicate using SNMP v1, which transmits data in the clear and does not require authentication to execute commands. Unless absolutely necessary, it is recommended that the SNMP service not be used. If SNMP is required the server should be configured to disallow SNMP v1."
      solution      : "Run the following command to disable snmpd:

# systemctl --now disable snmpd

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.5,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled snmpd | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.6 Ensure HTTP Proxy Server is not enabled"
      info          : "Squid is a standard proxy server used in many distributions and environments.

Rationale:

If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable squid:

# systemctl --now disable squid

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.6,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled squid | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.7 Ensure Samba is not enabled"
      info          : "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

Rationale:

If there is no need to mount directories and file systems to Windows systems, then this service can be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable smb:

# systemctl --now disable smb"
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.7,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled smb | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.8 Ensure IMAP and POP3 server is not enabled"
      info          : "dovecot is an open source IMAP and POP3 server for Linux based systems.

Rationale:

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the service be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable dovecot :

# systemctl --now disable dovecot

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

Several IMAP/POP3 servers exist and can use other service names. courier-imap and cyrus-imap are example services that provide a mail server. These and other services should also be audited."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.8,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled dovecot | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.9 Ensure HTTP server is not enabled"
      info          : "HTTP or web servers provide the ability to host web site content.

Rationale:

Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable httpd :

# systemctl --now disable httpd

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

Several httpd servers exist and can use other service names. apache, apache2, lighttpd, and nginx are example services that provide an HTTP server. These and other services should also be audited."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.9,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled httpd | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.10 Ensure FTP Server is not enabled"
      info          : "The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.

Rationale:

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable vsftpd :

# systemctl --now disable vsftpd

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.

Additional FTP servers also exist and should be audited."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.10,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled vsftpd | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.11 Ensure DNS Server is not enabled"
      info          : "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Rationale:

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable named :

# systemctl --now disable named

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.11,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled named | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.12 Ensure NFS is not enabled"
      info          : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not export NFS shares, it is recommended that the NFS be disabled to reduce the remote attack surface."
      solution      : "Run the following commands to disable the nfs-server:

# systemctl --now disable nfs-server

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.12,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled nfs-server | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.13 Ensure RPC is not enabled"
      info          : "The rpcbind service maps Remote Procedure Call (RPC) services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service.

Rationale:

If the system does not require rpc based services, it is recommended that rpcbind be disabled to reduce the remote attack surface.

Impact:

Because RPC-based services rely on rpcbind to make all connections with incoming client requests, rpcbind must be available before any of these services start"
      solution      : "Run the following commands to disable rpcbind:

# systemctl --now disable rpcbind"
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.13,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled rpcbind | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.14 Ensure LDAP server is not enabled"
      info          : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP server, it is recommended that the software be disabled to reduce the potential attack surface."
      solution      : "Run the following command to disable slapd :

# systemctl --now disable slapd"
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.14,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled slapd | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.15 Ensure DHCP Server is not enabled"
      info          : "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.

Rationale:

Unless a system is specifically set up to act as a DHCP server, it is recommended that this service be deleted to reduce the potential attack surface."
      solution      : "Run the following command to disable dhcpd:

# systemctl --now disable dhcpd"
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.15,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled dhcpd | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.16 Ensure CUPS is not enabled"
      info          : "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.

Rationale:

If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be disabled to reduce the potential attack surface.

Impact:

Disabling CUPS will prevent printing from the system, a common task for workstation systems."
      solution      : "Run the following command to disable cups:

# systemctl --now disable cups"
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.16,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,LEVEL|2A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled cups | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "2.2.17 Ensure NIS Server is not enabled"
      info          : "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be disabled and other, more secure services be used"
      solution      : "Run the following command to disable ypserv:

# systemctl --now disable ypserv

Additional Information:

Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(4),CIP|007-6-R1,CIS_Recommendation|2.2.17,CSCv6|9.1,CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled ypserv | /usr/bin/awk '{print} END { if(NR==0) print \"disabled\" }'"
      expect        : "disabled"
      dont_echo_cmd : YES
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : RPM_CHECK
          description : "Check if Postfix is installed"
          rpm         : "postfix-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.2.18 Ensure mail transfer agent is configured for local-only mode"
          info        : "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

Rationale:

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems."
          solution    : "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix

# systemctl restart postfix




Additional Information:

This recommendation is designed around the postfix mail server, depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state."
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|2.2.18,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|9.2,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          file        : "/etc/postfix/main.cf"
          regex       : "^[\\s]*inet_interfaces[\\s]*=[\\s]*"
          expect      : "^[\\s]*inet_interfaces[\\s]*=[\\s]*(127\.0\.0\.1|\[::1\]|loopback-only|localhost|[\\s,]?){1,}[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.2.18 Ensure mail transfer agent is configured for local-only mode"
          info        : "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

Rationale:

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems."
          solution    : "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix

# systemctl restart postfix




Additional Information:

This recommendation is designed around the postfix mail server, depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state."
          reference   : "800-171|3.4.2,800-53|CM-6b.,CIP|007-6-R1,CIS_Recommendation|2.2.18,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|9.2,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.1 Ensure NIS Client is not installed"
      info        : "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Run the following command to Uninstall ypbind

# dnf remove ypbind"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CIS_Recommendation|2.3.1,CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "ypbind-0.0.0-0"
      operator    : "lt"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.2 Ensure telnet client is not installed"
      info        : "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

Rationale:

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Run the following command to uninstall telnet

# dnf remove telnet"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CIS_Recommendation|2.3.2,CSCv7|4.5,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "telnet-0.0.0-0"
      operator    : "lt"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : RPM_CHECK
      description : "2.3.3 Ensure LDAP client is not installed"
      info        : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment."
      solution    : "Run the following command to uninstall openldap-clients.

# dnf remove openldap-clients"
      reference   : "800-171|3.4.8,800-53|CM-7(4),CIS_Recommendation|2.3.3,CSCv7|2.6,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS13a,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      rpm         : "openldap-clients-0.0.0-0"
      operator    : "lt"
      required    : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.1 Ensure IP forwarding is disabled - ipv4 sysctl"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.ip_forward"
      expect      : "^[\\s]*net\\.ipv4\\.ip_forward[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.1 Ensure IP forwarding is disabled - ipv4 /etc/sysctl.conf /etc/sysctl.d/*"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.ip_forward[\\s]*=[\\s]*1[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for ipv6"
          cmd         : "passing=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubfile=\"\" grubext=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; if [ -f \"$grubdir\"/grubenv ]; then grubfile=\"$grubdir/grubenv\"; else grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; fi; if [ -s \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then ! /usr/bin/grep \"^\\s*kernel\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ \"$grubext\" = \"cfg\" ]; then ! /usr/bin/grep \"^\\s*linux\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ -z \"$grubext\" ]; then ! /usr/bin/grep \"^\\s*kernelopts=\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; fi; fi; if /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\"; then [ -n \"$output\" ] && output=\"$output, and in sysctl config\" || output=\"ipv6 disabled in sysctl config\"; passing=\"true\"; fi; if [ \"$passing\" = true ] ; then echo \"$output\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure IP forwarding is disabled - ipv6 sysctl"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.all.forwarding"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure IP forwarding is disabled - ipv6 /etc/sysctl.conf /etc/sysctl.d/*"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*=[\\s]*1[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.1.1 Ensure IP forwarding is disabled - ipv6 sysctl"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.1.1 Ensure IP forwarding is disabled - ipv6 /etc/sysctl.conf /etc/sysctl.d/*"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.ip_forward\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1

# grep -Els '^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure packet redirect sending is disabled - 'net.ipv4.conf.all.send_redirects = 0'"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure packet redirect sending is disabled - files 'net.ipv4.conf.default.send_redirects = 0'"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure packet redirect sending is disabled - 'net.ipv4.conf.default.send_redirects = 0'"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.1.2 Ensure packet redirect sending is disabled - files 'net.ipv4.conf.all.send_redirects = 0'"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.send_redirects=0
# sysctl -w net.ipv4.conf.default.send_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.1.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure source routed packets are not accepted - 'sysctl net.ipv4.conf.all.accept_source_route'"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure source routed packets are not accepted - 'sysctl net.ipv4.conf.default.accept_source_route'"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv4.conf.all.accept_source_route = 0'"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv4.conf.default.accept_source_route = 0'"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for ipv6"
          cmd         : "passing=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubfile=\"\" grubext=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; if [ -f \"$grubdir\"/grubenv ]; then grubfile=\"$grubdir/grubenv\"; else grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; fi; if [ -s \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then ! /usr/bin/grep \"^\\s*kernel\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ \"$grubext\" = \"cfg\" ]; then ! /usr/bin/grep \"^\\s*linux\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ -z \"$grubext\" ]; then ! /usr/bin/grep \"^\\s*kernelopts=\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; fi; fi; if /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\"; then [ -n \"$output\" ] && output=\"$output, and in sysctl config\" || output=\"ipv6 disabled in sysctl config\"; passing=\"true\"; fi; if [ \"$passing\" = true ] ; then echo \"$output\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure source routed packets are not accepted - 'net.ipv6.conf.all.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.all.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure source routed packets are not accepted - 'net.ipv6.conf.default.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.default.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv6.conf.default.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv6.conf.all.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.1 Ensure source routed packets are not accepted - 'net.ipv6.conf.all.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.1 Ensure source routed packets are not accepted - 'net.ipv6.conf.default.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv6.conf.default.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.1 Ensure source routed packets are not accepted - files 'net.ipv6.conf.all.accept_source_route = 0'"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_source_route=0
# sysctl -w net.ipv4.conf.default.accept_source_route=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_source_route=0
# sysctl -w net.ipv6.conf.default.accept_source_route=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv4.conf.all.accept_redirects = 0'"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure ICMP redirects are not accepted - 'net.ipv4.conf.all.accept_redirects = 0'"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv4.conf.default.accept_redirects = 0'"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure ICMP redirects are not accepted - 'net.ipv4.conf.default.accept_redirects = 0'"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for ipv6"
          cmd         : "passing=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubfile=\"\" grubext=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; if [ -f \"$grubdir\"/grubenv ]; then grubfile=\"$grubdir/grubenv\"; else grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; fi; if [ -s \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then ! /usr/bin/grep \"^\\s*kernel\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ \"$grubext\" = \"cfg\" ]; then ! /usr/bin/grep \"^\\s*linux\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ -z \"$grubext\" ]; then ! /usr/bin/grep \"^\\s*kernelopts=\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; fi; fi; if /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\"; then [ -n \"$output\" ] && output=\"$output, and in sysctl config\" || output=\"ipv6 disabled in sysctl config\"; passing=\"true\"; fi; if [ \"$passing\" = true ] ; then echo \"$output\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv6.conf.all.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.2 Ensure ICMP redirects are not accepted - sysctl 'net.ipv6.conf.all.accept_redirects'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.all.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv6.conf.default.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.2 Ensure ICMP redirects are not accepted - sysctl 'net.ipv6.conf.default.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.default.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv6.conf.all.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.2 Ensure ICMP redirects are not accepted - sysctl 'net.ipv6.conf.all.accept_redirects'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.2 Ensure ICMP redirects are not accepted - files 'net.ipv6.conf.default.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.2 Ensure ICMP redirects are not accepted - sysctl 'net.ipv6.conf.default.accept_redirects = 0'"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
          solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.accept_redirects=0
# sysctl -w net.ipv4.conf.default.accept_redirects=0
# sysctl -w net.ipv4.route.flush=1

IF IPv6 is not disabled
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_redirects=0
# sysctl -w net.ipv6.conf.default.accept_redirects=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.2,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.3 Ensure secure ICMP redirects are not accepted - files 'net.ipv4.conf.all.secure_redirects = 0'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.3,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.3 Ensure secure ICMP redirects are not accepted - 'net.ipv4.conf.default.secure_redirects = 0'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.3,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.3 Ensure secure ICMP redirects are not accepted - files 'net.ipv4.conf.default.secure_redirects = 0'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.3,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.3 Ensure secure ICMP redirects are not accepted - 'net.ipv4.conf.all.secure_redirects = 0'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.secure_redirects=0
# sysctl -w net.ipv4.conf.default.secure_redirects=0
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.3,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.4 Ensure suspicious packets are logged - files 'net.ipv4.conf.all.log_martians = 1'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.2.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.log_martians[\\s]*=[\\s]*1[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.4 Ensure suspicious packets are logged - files 'net.ipv4.conf.default.log_martians = 1'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.2.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.log_martians[\\s]*=[\\s]*1[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.4 Ensure suspicious packets are logged - 'net.ipv4.conf.default.log_martians = 1'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.2.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.4 Ensure suspicious packets are logged - 'net.ipv4.conf.all.log_martians = 1'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv4.conf.all.log_martians=1
# sysctl -w net.ipv4.conf.default.log_martians=1
# sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|3.2.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.5 Ensure broadcast ICMP requests are ignored - sysctl"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Run the following command to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.icmp_echo_ignore_broadcasts\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.icmp_echo_ignore_broadcasts\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.icmp_echo_ignore_broadcasts=1; sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.5,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.5 Ensure broadcast ICMP requests are ignored - sysctl.conf sysctl.d"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Run the following command to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.icmp_echo_ignore_broadcasts\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.icmp_echo_ignore_broadcasts\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.icmp_echo_ignore_broadcasts=1; sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.5,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.6 Ensure bogus ICMP responses are ignored - sysctl"
      info        : "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.icmp_ignore_bogus_error_responses\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.icmp_ignore_bogus_error_responses\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1; sysctl -w net.ipv4.route.flush=1




Default Value:

net.ipv4.icmp_ignore_bogus_error_responses = 1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.6,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responses"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_ignore_bogus_error_responses[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.6 Ensure bogus ICMP responses are ignored - /etc/sysctl.conf /etc/sysctl.d/*"
      info        : "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Run the following commands to restore the default parameters and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.icmp_ignore_bogus_error_responses\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.icmp_ignore_bogus_error_responses\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1; sysctl -w net.ipv4.route.flush=1




Default Value:

net.ipv4.icmp_ignore_bogus_error_responses = 1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.6,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.icmp_ignore_bogus_error_responses[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.7 Ensure Reverse Path Filtering is enabled - 'net.ipv4.conf.default.rp_filter = 1'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following command to restore the default net.ipv4.conf.all.rp_filter = 1 parameter and set the active kernel parameter:

# grep -Els '^\s*net\.ipv4\.conf\.all\.rp_filter\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.net.ipv4.conf\.all\.rp_filter\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.conf.all.rp_filter=1; sysctl -w net.ipv4.route.flush=1

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.default.rp_filter=1

Run the following commands to set the active kernel parameter:

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1

Default Value:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 0"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.7,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.default.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.7 Ensure Reverse Path Filtering is enabled - 'net.ipv4.conf.all.rp_filter = 1'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following command to restore the default net.ipv4.conf.all.rp_filter = 1 parameter and set the active kernel parameter:

# grep -Els '^\s*net\.ipv4\.conf\.all\.rp_filter\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.net.ipv4.conf\.all\.rp_filter\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.conf.all.rp_filter=1; sysctl -w net.ipv4.route.flush=1

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.default.rp_filter=1

Run the following commands to set the active kernel parameter:

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1

Default Value:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 0"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.7,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.conf.all.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.7 Ensure Reverse Path Filtering is enabled - files 'net.ipv4.conf.default.rp_filter = 1'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following command to restore the default net.ipv4.conf.all.rp_filter = 1 parameter and set the active kernel parameter:

# grep -Els '^\s*net\.ipv4\.conf\.all\.rp_filter\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.net.ipv4.conf\.all\.rp_filter\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.conf.all.rp_filter=1; sysctl -w net.ipv4.route.flush=1

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.default.rp_filter=1

Run the following commands to set the active kernel parameter:

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1

Default Value:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 0"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.7,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\s]*=[\\s]*1[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.7 Ensure Reverse Path Filtering is enabled - files 'net.ipv4.conf.all.rp_filter = 1'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following command to restore the default net.ipv4.conf.all.rp_filter = 1 parameter and set the active kernel parameter:

# grep -Els '^\s*net\.ipv4\.conf\.all\.rp_filter\s*=\s*0' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.net.ipv4.conf\.all\.rp_filter\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.conf.all.rp_filter=1; sysctl -w net.ipv4.route.flush=1

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv4.conf.default.rp_filter=1

Run the following commands to set the active kernel parameter:

# sysctl -w net.ipv4.conf.default.rp_filter=1

# sysctl -w net.ipv4.route.flush=1

Default Value:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 0"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.7,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.8 Ensure TCP SYN Cookies is enabled - sysctl"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Run the following command to restore the default parameter and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.tcp_syncookies\s*=\s*[02]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.tcp_syncookies\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.tcp_syncookies=1; sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.8,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sysctl net.ipv4.tcp_syncookies"
      expect      : "^[\\s]*net\\.ipv4\\.tcp_syncookies[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.8 Ensure TCP SYN Cookies is enabled - sysctl.conf sysctl.d"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Run the following command to restore the default parameter and set the active kernel parameters:

# grep -Els '^\s*net\.ipv4\.tcp_syncookies\s*=\s*[02]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^\s*(net\.ipv4\.tcp_syncookies\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/' $filename; done; sysctl -w net.ipv4.tcp_syncookies=1; sysctl -w net.ipv4.route.flush=1"
      reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.8,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*net\\.ipv4\\.tcp_syncookies[\\s]*=[\\s]*[02][\\s]*' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for ipv6"
          cmd         : "passing=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubfile=\"\" grubext=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; if [ -f \"$grubdir\"/grubenv ]; then grubfile=\"$grubdir/grubenv\"; else grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; fi; if [ -s \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then ! /usr/bin/grep \"^\\s*kernel\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ \"$grubext\" = \"cfg\" ]; then ! /usr/bin/grep \"^\\s*linux\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ -z \"$grubext\" ]; then ! /usr/bin/grep \"^\\s*kernelopts=\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; fi; fi; if /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\"; then [ -n \"$output\" ] && output=\"$output, and in sysctl config\" || output=\"ipv6 disabled in sysctl config\"; passing=\"true\"; fi; if [ \"$passing\" = true ] ; then echo \"$output\"; else echo \"IPv6 is enabled on the system\"; fi"
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'grep net.ipv6.conf.default.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\.ipv6\.conf\.default\.accept_ra[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.default.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.default.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'grep net.ipv6.conf.all.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s -P '^[\\s]*net\.ipv6\.conf\.all\.accept_ra[\\s]*=[\\s]*0[\\s]*' /etc/sysctl.conf /etc/sysctl.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.all.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.all.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'grep net.ipv6.conf.default.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.default.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'grep net.ipv6.conf.all.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.2.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.all.accept_ra = 0'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
          solution    : "IF IPv6 is enabled:
Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:

net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

Run the following commands to set the active kernel parameters:

# sysctl -w net.ipv6.conf.all.accept_ra=0
# sysctl -w net.ipv6.conf.default.accept_ra=0
# sysctl -w net.ipv6.route.flush=1"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.2.9,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|5.1,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <if>
      <condition type:"OR">
        <custom_item>
          type        : RPM_CHECK
          description : "firewalld install check"
          rpm         : "firewalld-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          type        : RPM_CHECK
          description : "nftables install check"
          rpm         : "nftables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          type        : RPM_CHECK
          description : "iptables install check"
          rpm         : "iptables-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          type        : RPM_CHECK
          description : "iptables-services install check"
          rpm         : "iptables-services-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "3.4.1.1 Ensure a Firewall package is installed"
          info        : "A Firewall package should be selected. Most firewall configuration utilities operate as a front end to nftables or iptables.

Rationale:

A Firewall package is required for firewall management and configuration."
          solution    : "Run one of the following commands to install a Firewall package.
For firewalld:

# dnf install firewalld

For nftables:

# dnf install nftables

For iptables:

# dnf install iptables iptables-services"
          reference   : "800-53|SC-7(12),CIS_Recommendation|3.4.1.1,CSCv7|9.4,CSCv8|4.4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </then>

      <else>
        <report type:"FAILED">
          description : "3.4.1.1 Ensure a Firewall package is installed"
          info        : "A Firewall package should be selected. Most firewall configuration utilities operate as a front end to nftables or iptables.

Rationale:

A Firewall package is required for firewall management and configuration."
          solution    : "Run one of the following commands to install a Firewall package.
For firewalld:

# dnf install firewalld

For nftables:

# dnf install nftables

For iptables:

# dnf install iptables iptables-services"
          reference   : "800-53|SC-7(12),CIS_Recommendation|3.4.1.1,CSCv7|9.4,CSCv8|4.4,LEVEL|1A"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type          : CMD_EXEC
          description   : "firewalld is active"
          cmd           : "/usr/bin/systemctl is-active firewalld"
          expect        : "^active$"
          dont_echo_cmd : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.1 Ensure firewalld service is enabled and running - enabled"
          info          : "Ensure that the firewalld service is enabled to protect your system

Rationale:

firewalld (Dynamic Firewall Manager) tool provides a dynamically managed firewall. The tool enables network/firewall zones to define the trust level of network connections and/or interfaces. It has support both for IPv4 and IPv6 firewall settings. Also, it supports Ethernet bridges and allow you to separate between runtime and permanent configuration options. Finally, it supports an interface for services or applications to add firewall rules directly

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution      : "Run the following command to enable and start firewalld

# systemctl --now enable firewalld"
          reference     : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CIS_Recommendation|3.4.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-enabled firewalld"
          expect        : "enabled"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.1 Ensure firewalld service is enabled and running - running"
          info          : "Ensure that the firewalld service is enabled to protect your system

Rationale:

firewalld (Dynamic Firewall Manager) tool provides a dynamically managed firewall. The tool enables network/firewall zones to define the trust level of network connections and/or interfaces. It has support both for IPv4 and IPv6 firewall settings. Also, it supports Ethernet bridges and allow you to separate between runtime and permanent configuration options. Finally, it supports an interface for services or applications to add firewall rules directly

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution      : "Run the following command to enable and start firewalld

# systemctl --now enable firewalld"
          reference     : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/firewall-cmd --state | /usr/bin/awk '{print} END {if(NR==0) print \"not running\" }'"
          expect        : "^running$"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.2 Ensure iptables service is not enabled with firewalld - inactive"
          info          : "IPtables is an application that allows a system administrator to configure the IPv4 and IPv6 tables, chains and rules provided by the Linux kernel firewall.

IPtables is installed as a dependency with firewalld.

Rationale:

Running firewalld and IPtables concurrently may lead to conflict, therefore IPtables should be stopped and masked when using firewalld."
          solution      : "Run the following command to stop and mask iptables

systemctl --now mask iptables"
          reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-active iptables"
          expect        : "inactive"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.2 Ensure iptables service is not enabled with firewalld - disabled"
          info          : "IPtables is an application that allows a system administrator to configure the IPv4 and IPv6 tables, chains and rules provided by the Linux kernel firewall.

IPtables is installed as a dependency with firewalld.

Rationale:

Running firewalld and IPtables concurrently may lead to conflict, therefore IPtables should be stopped and masked when using firewalld."
          solution      : "Run the following command to stop and mask iptables

systemctl --now mask iptables"
          reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-enabled iptables"
          expect        : "disabled|masked"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.3 Ensure nftables is not enabled with firewalld - disabled"
          info          : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

nftables are installed as a dependency with firewalld.

Rationale:

Running firewalld and nftables concurrently may lead to conflict, therefore nftables should be stopped and masked when using firewalld."
          solution      : "Run the following command to mask and stop nftables

systemctl --now mask nftables

Additional Information:

firewalld is dependent on nftables. nftables should be stopped and disabled."
          reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-enabled nftables"
          expect        : "disabled|masked"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.2.3 Ensure nftables is not enabled with firewalld - inactive"
          info          : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

nftables are installed as a dependency with firewalld.

Rationale:

Running firewalld and nftables concurrently may lead to conflict, therefore nftables should be stopped and masked when using firewalld."
          solution      : "Run the following command to mask and stop nftables

systemctl --now mask nftables

Additional Information:

firewalld is dependent on nftables. nftables should be stopped and disabled."
          reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-active nftables"
          expect        : "inactive"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.2.4 Ensure firewalld default zone is set"
          info        : "A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.

The default zone is the zone that is used for everything that is not explicitely bound/assigned to another zone.

That means that if there is no zone assigned to a connection, interface or source, only the default zone is used. The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.

Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.

Rationale:

Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, it is important for the default zone to set

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following command to set the default zone:

# firewall-cmd --set-default-zone=<NAME_OF_ZONE>

Example:

# firewall-cmd --set-default-zone=public"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/firewall-cmd --get-default-zone"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.2.5 Ensure network interfaces are assigned to appropriate zone"
          info        : "firewall zones define the trust level of network connections or interfaces.

Rationale:

A network interface not assigned to the appropriate zone can allow unexpected or undesired network traffic to be accepted on the interface

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following command to assign an interface to the approprate zone.

# firewall-cmd --zone=<Zone NAME> --change-interface=<INTERFACE NAME>

Example:

# firewall-cmd --zone=customezone --change-interface=eth0

Default Value:

If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/nmcli -t connection show | /usr/bin/awk -F: \'{if($4){print $4}}\' | while read INT; do /usr/bin/firewall-cmd --get-active-zones | /usr/bin/grep -B1 $INT; done"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.2.6 Ensure firewalld drops unnecessary services and ports"
          info        : "Services and ports can be accepted or explicitly rejected or dropped by a zone.

For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.

By setting the target to ACCEPT, you accept all incoming packets except those disabled by a specific rule.

If you set the target to REJECT or DROP, you disable all incoming packets except those that you have allowed in specific rules. When packets are rejected, the source machine is informed about the rejection, while there is no information sent when the packets are dropped.

Rationale:

To reduce the attack surface of a system, all services and ports should be blocked unless required

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following command to remove an unnecessary service:

# firewall-cmd --remove-service=<service>

Example:

#firewall-cmd --remove-service=cockpit

Run the following command to remove an unnecessary port:

# firewall-cmd --remove-port=<port-number>/<port-type>

Example:

# firewall-cmd --remove-port=25/tcp

Run the following command to make new settings persistent:

# firewall-cmd --runtime-to-permanent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/firewall-cmd --get-active-zones | /usr/bin/awk '!/:/ {print $1}' | while read ZN; do /usr/bin/firewall-cmd --list-all --zone=$ZN; done"
          expect      : ""
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.4.2.1 Ensure firewalld service is enabled and running - enabled"
          info        : "Ensure that the firewalld service is enabled to protect your system

Rationale:

firewalld (Dynamic Firewall Manager) tool provides a dynamically managed firewall. The tool enables network/firewall zones to define the trust level of network connections and/or interfaces. It has support both for IPv4 and IPv6 firewall settings. Also, it supports Ethernet bridges and allow you to separate between runtime and permanent configuration options. Finally, it supports an interface for services or applications to add firewall rules directly

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to enable and start firewalld

# systemctl --now enable firewalld"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIP|007-6-R1,CIS_Recommendation|3.4.2.1,CN-L3|8.1.10.6(j),CSCv6|9.2,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.1 Ensure firewalld service is enabled and running - running"
          info        : "Ensure that the firewalld service is enabled to protect your system

Rationale:

firewalld (Dynamic Firewall Manager) tool provides a dynamically managed firewall. The tool enables network/firewall zones to define the trust level of network connections and/or interfaces. It has support both for IPv4 and IPv6 firewall settings. Also, it supports Ethernet bridges and allow you to separate between runtime and permanent configuration options. Finally, it supports an interface for services or applications to add firewall rules directly

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to enable and start firewalld

# systemctl --now enable firewalld"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.2 Ensure iptables service is not enabled with firewalld - inactive"
          info        : "IPtables is an application that allows a system administrator to configure the IPv4 and IPv6 tables, chains and rules provided by the Linux kernel firewall.

IPtables is installed as a dependency with firewalld.

Rationale:

Running firewalld and IPtables concurrently may lead to conflict, therefore IPtables should be stopped and masked when using firewalld."
          solution    : "Run the following command to stop and mask iptables

systemctl --now mask iptables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.2 Ensure iptables service is not enabled with firewalld - disabled"
          info        : "IPtables is an application that allows a system administrator to configure the IPv4 and IPv6 tables, chains and rules provided by the Linux kernel firewall.

IPtables is installed as a dependency with firewalld.

Rationale:

Running firewalld and IPtables concurrently may lead to conflict, therefore IPtables should be stopped and masked when using firewalld."
          solution    : "Run the following command to stop and mask iptables

systemctl --now mask iptables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.2.2,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.3 Ensure nftables is not enabled with firewalld - disabled"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

nftables are installed as a dependency with firewalld.

Rationale:

Running firewalld and nftables concurrently may lead to conflict, therefore nftables should be stopped and masked when using firewalld."
          solution    : "Run the following command to mask and stop nftables

systemctl --now mask nftables

Additional Information:

firewalld is dependent on nftables. nftables should be stopped and disabled."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.3 Ensure nftables is not enabled with firewalld - inactive"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

nftables are installed as a dependency with firewalld.

Rationale:

Running firewalld and nftables concurrently may lead to conflict, therefore nftables should be stopped and masked when using firewalld."
          solution    : "Run the following command to mask and stop nftables

systemctl --now mask nftables

Additional Information:

firewalld is dependent on nftables. nftables should be stopped and disabled."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.2.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.4 Ensure firewalld default zone is set"
          info        : "A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.

The default zone is the zone that is used for everything that is not explicitely bound/assigned to another zone.

That means that if there is no zone assigned to a connection, interface or source, only the default zone is used. The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.

Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.

Rationale:

Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, it is important for the default zone to set"
          solution    : "Run the following command to set the default zone:

# firewall-cmd --set-default-zone=<NAME_OF_ZONE>

Example:

# firewall-cmd --set-default-zone=public"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.5 Ensure network interfaces are assigned to appropriate zone"
          info        : "firewall zones define the trust level of network connections or interfaces.

Rationale:

A network interface not assigned to the appropriate zone can allow unexpected or undesired network traffic to be accepted on the interface

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to assign an interface to the approprate zone.

# firewall-cmd --zone=<Zone NAME> --change-interface=<INTERFACE NAME>

Example:

# firewall-cmd --zone=customezone --change-interface=eth0

Default Value:

If the zone is not set in the configuration file, the interfaces will be assigned to the default zone defined in the firewalld configuration"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.2.6 Ensure firewalld drops unnecessary services and ports"
          info        : "Services and ports can be accepted or explicitly rejected or dropped by a zone.

For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.

By setting the target to ACCEPT, you accept all incoming packets except those disabled by a specific rule.

If you set the target to REJECT or DROP, you disable all incoming packets except those that you have allowed in specific rules. When packets are rejected, the source machine is informed about the rejection, while there is no information sent when the packets are dropped.

Rationale:

To reduce the attack surface of a system, all services and ports should be blocked unless required"
          solution    : "Run the following command to remove an unnecessary service:

# firewall-cmd --remove-service=<service>

Example:

#firewall-cmd --remove-service=cockpit

Run the following command to remove an unnecessary port:

# firewall-cmd --remove-port=<port-number>/<port-type>

Example:

# firewall-cmd --remove-port=25/tcp

Run the following command to make new settings persistent:

# firewall-cmd --runtime-to-permanent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7.,CIS_Recommendation|3.4.2.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type          : CMD_EXEC
          description   : "nftables is active"
          cmd           : "/usr/bin/systemctl is-active nftables"
          expect        : "^active$"
          dont_echo_cmd : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.1 Ensure iptables are flushed with nftables - ipv4"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.3.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables -L"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.1 Ensure iptables are flushed with nftables - ipv6"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.3.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/ip6tables -L"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.2 Ensure an nftables table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter"
          reference   : "800-171|3.13.1,800-53|SC-7(15),CIS_Recommendation|3.4.3.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(15),LEVEL|1A,NESA|T4.5.3,NIAv2|NS5c,NIAv2|NS6a,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list tables | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook input'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/grep 'hook input'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook forward'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/grep 'hook forward'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook output'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/grep 'hook output'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.4 Ensure nftables loopback traffic is configured - iif lo accept"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on a machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept
# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv7|19.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/awk '/hook input/,/}/' | /usr/bin/grep 'iif \"lo\" accept'"
          expect      : "^iif[\\s]+\"lo\"[\\s]+accept"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.4 Ensure nftables loopback traffic is configured - ip saddr"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on a machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept
# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv7|19.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/awk '/hook input/,/}/' | /usr/bin/grep 'ip saddr'"
          expect      : "^ip[\\s]+saddr[\\s]+127\\.0\\.0\\.0\\/8"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check for ipv6"
              cmd         : "passing=\"\" output=\"\" efidir=\"\" gbdir=\"\" grubfile=\"\" grubext=\"\"; efidir=$(find /boot/efi/EFI/* -type d -not -name 'BOOT'); gbdir=$(find /boot -maxdepth 1 -type d -name 'grub*'); for file in \"$efidir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$efidir\" && grubfile=$file; done; if [ -z \"$grubdir\" ]; then for file in \"$gbdir\"/grub.c*; do [ -f \"$file\" ] && grubdir=\"$gbdir\" && grubfile=$file; done; fi; if [ -f \"$grubdir\"/grubenv ]; then grubfile=\"$grubdir/grubenv\"; else grubext=\"$(echo \"$grubfile\" | cut -d. -f2)\"; fi; if [ -s \"$grubfile\" ]; then if [ \"$grubext\" = \"conf\" ]; then ! /usr/bin/grep \"^\\s*kernel\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ \"$grubext\" = \"cfg\" ]; then ! /usr/bin/grep \"^\\s*linux\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; elif [ -z \"$grubext\" ]; then ! /usr/bin/grep \"^\\s*kernelopts=\" \"$grubfile\" | /usr/bin/grep -vq ipv6.disable=1 && passing=\"true\" && output=\"ipv6 disabled in grub config\"; fi; fi; if /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && /usr/bin/grep -Pqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | /usr/bin/grep -Pq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\"; then [ -n \"$output\" ] && output=\"$output, and in sysctl config\" || output=\"ipv6 disabled in sysctl config\"; passing=\"true\"; fi; if [ \"$passing\" = true ] ; then echo \"$output\"; else echo \"IPv6 is enabled on the system\"; fi"
              expect      : "IPv6 is enabled on the system"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.3.4 Ensure nftables loopback traffic is configured - ip6 saddr"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on a machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept
# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv7|19.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/sbin/nft -n list ruleset | /usr/bin/awk '/hook input/,/}/' | /usr/bin/grep 'ip saddr'"
              expect      : "^ip6[\\s]+saddr[\\s]+::1"
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
              description : "3.4.3.4 Ensure nftables loopback traffic is configured - ip6 saddr"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on a machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept
# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv7|19.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.5 Ensure nftables outbound and established connections are configured - incoming, established"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/awk '/hook input/,/}/' | /usr/bin/egrep 'ip protocol (tcp|udp|icmp) ct state'"
          expect      : "ManualReviewRequired"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.5 Ensure nftables outbound and established connections are configured - outgoing, established"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/awk '/hook output/,/}/' | /usr/bin/egrep 'ip protocol (tcp|udp|icmp) ct state'"
          expect      : "ManualReviewRequired"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain FORWARD"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/grep 'hook forward'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;[\\s]*policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain OUTPUT"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/grep 'hook output'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;[\\s]*policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain INPUT"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/grep 'hook input'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;[\\s]*policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system        : "Linux"
          type          : CMD_EXEC
          description   : "3.4.3.7 Ensure nftables service is enabled"
          info          : "The nftables service allows for the loading of nftables rulesets during boot, or starting of the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/sysconfig/nftables.conf file durring boot or the starting of the nftables service"
          solution      : "Run the following command to enable the nftables service:

# systemctl --now enable nftables"
          reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.3.7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/3366"
          cmd           : "/usr/bin/systemctl is-enabled nftables"
          expect        : "enabled"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.8 Ensure nftables rules are permanent - input"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "[[ -n $(/usr/bin/grep -E \"^\\s*include\" /etc/sysconfig/nftables.conf) ]] && /usr/bin/awk '/hook input/,/}/' $(/usr/bin/awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/sysconfig/nftables.conf) | /usr/bin/awk '{print} END {if (NR > 0) print \"pass\"; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.8 Ensure nftables rules are permanent - forward"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "[[ -n $(/usr/bin/grep -E \"^\\s*include\" /etc/sysconfig/nftables.conf) ]] && /usr/bin/awk '/hook forward/,/}/' $(/usr/bin/awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/sysconfig/nftables.conf) | /usr/bin/awk '{print} END {if (NR > 0) print \"pass\"; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.3.8 Ensure nftables rules are permanent - output"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "[[ -n $(/usr/bin/grep -E \"^\\s*include\" /etc/sysconfig/nftables.conf) ]] && /usr/bin/awk '/hook output/,/}/' $(/usr/bin/awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/sysconfig/nftables.conf) | /usr/bin/awk '{print} END {if (NR > 0) print \"pass\"; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.4.3.1 Ensure iptables are flushed with nftables - ipv4"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded"
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.3.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.1 Ensure iptables are flushed with nftables - ipv6"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded"
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables

# ip6tables -F"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.3.1,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.2 Ensure an nftables table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter"
          reference   : "800-171|3.13.1,800-53|SC-7(15),CIS_Recommendation|3.4.3.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|PR.AC-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(15),LEVEL|1A,NESA|T4.5.3,NIAv2|NS5c,NIAv2|NS6a,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook input'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook forward'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.3 Ensure nftables base chains exist - 'hook output'"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.4 Ensure nftables loopback traffic is configured"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on a machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept
# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled:
Run the following command to implement the IPv6 loopback rules:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.4,CSCv7|19.4,CSCv7|9.4,CSCv8|4.4,ITSG-33|SC-7(12),LEVEL|1A,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.5 Ensure nftables outbound and established connections are configured - incoming, established"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.5 Ensure nftables outbound and established connections are configured - outgoing, established"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.5,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain FORWARD"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain OUTPUT"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.6 Ensure nftables default deny firewall policy - Chain INPUT"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

if configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.6,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.7 Ensure nftables service is enabled"
          info        : "The nftables service allows for the loading of nftables rulesets during boot, or starting of the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/sysconfig/nftables.conf file durring boot or the starting of the nftables service"
          solution    : "Run the following command to enable the nftables service:

# systemctl --now enable nftables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.3.7,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.8 Ensure nftables rules are permanent - input"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.8 Ensure nftables rules are permanent - forward"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.3.8 Ensure nftables rules are permanent - output"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/sysconfig/nftables.conf file for a nftables file or files to include in the nftables ruleset.

An nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot."
          solution    : "Edit the /etc/sysconfig/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/sysconfig/nftables.conf

Add the line:

include '/etc/nftables/nftables.rules'"
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.3.8,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type          : CMD_EXEC
          description   : "iptables is active"
          cmd           : "/usr/bin/systemctl is-active iptables"
          expect        : "^active$"
          dont_echo_cmd : YES
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain FORWARD"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables --list | /usr/bin/grep 'Chain FORWARD'"
          expect      : "^Chain FORWARD \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain OUTPUT"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables --list | /usr/bin/grep 'Chain OUTPUT'"
          expect      : "^Chain OUTPUT \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain INPUT"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables --list | /usr/bin/grep 'Chain INPUT'"
          expect      : "^Chain INPUT \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Input accept all lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables -L INPUT -v -n"
          expect      : "^[\\s]*[\\S]+[\\s]+[\\S]+[\\s]+ACCEPT[\\s]+all[\\s]+--[\\s]+lo[\\s]+\\*[\\s]+0\\.0\\.0\\.0\\/0[\\s]+0\\.0\\.0\\.0\\/0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Input drop all"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables -L INPUT -v -n"
          expect      : "^[\\s]*[\\S]+[\\s]+[\\S]+[\\s]+DROP[\\s]+all[\\s]+--[\\s]+\\*[\\s]+\\*[\\s]+127\\.0\\.0\\.0\\/8[\\s]+0\\.0\\.0\\.0\\/0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Output accept all lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables -L OUTPUT -v -n"
          expect      : "^[\\s]*[\\S]+[\\s]+[\\S]+[\\s]+ACCEPT[\\s]+all[\\s]+--[\\s]+\\*[\\s]+lo[\\s]+0\\.0\\.0\\.0\\/0[\\s]+0\\.0\\.0\\.0\\/0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.3 Ensure iptables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.4.1.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/iptables -L -v -n"
          expect      : "ManualReviewRequired"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.4 Ensure iptables firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.4,CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/netstat -ln; /usr/sbin/iptables -L INPUT -v -n"
          expect      : "ManualReviewRequired"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.1.5 Ensure iptables is enabled and active"
          info        : "iptables.service is a utility for configuring and maintaining iptables.

Rationale:

iptables.service will load the iptables rules saved in the file /etc/sysconfig/iptables at boot, otherwise the iptables rules will be cleared during a re-boot of the system."
          solution    : "Run the following command to enable and start iptables:

# systemctl --now enable iptables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.4.1.5,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl is-enabled iptables | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain INPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/ip6tables --list | /usr/bin/grep 'Chain INPUT'"
          expect      : "^Chain INPUT \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain FORWARD'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/ip6tables --list | /usr/bin/grep 'Chain FORWARD'"
          expect      : "^Chain FORWARD \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain OUTPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/sbin/ip6tables --list | /usr/bin/grep 'Chain OUTPUT'"
          expect      : "^Chain OUTPUT \\(policy (DROP|REJECT)\\)"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "IPv6 is disabled"
              cmd         : "/usr/bin/grep -P '^[\\s]*kernelopts=.*ipv6\.disable=1.*$' /boot/grub2/grubenv | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
              expect      : "^pass$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "3.4.4.2.2 Ensure ip6tables loopback traffic is configured"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.4.2.2 Ensure ip6tables loopback traffic is configured"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/sbin/ip6tables -L INPUT -v -n; /usr/sbin/ip6tables -L OUTPUT -v -n"
              expect      : "ManualReviewRequired"
              severity    : MEDIUM
            </custom_item>
          </else>
        </if>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "IPv6 is disabled"
              cmd         : "/usr/bin/grep -P '^[\\s]*kernelopts=.*ipv6\.disable=1.*$' /boot/grub2/grubenv | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
              expect      : "^pass$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "3.4.4.2.3 Ensure ip6tables outbound and established connections are configured"
              info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
              solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.4.2.3 Ensure ip6tables outbound and established connections are configured"
              info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/sbin/ip6tables -L -v -n"
              expect      : ""
              severity    : MEDIUM
            </custom_item>
          </else>
        </if>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "IPv6 is disabled"
              cmd         : "/usr/bin/grep -P '^[\\s]*kernelopts=.*ipv6\.disable=1.*$' /boot/grub2/grubenv | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
              expect      : "^pass$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - ports"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>

            <report type:"PASSED">
              description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - firewall rules"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>

            <report type:"PASSED">
              description : "3.4.4.2.5 Ensure ip6tables is enabled and active"
              info        : "ip6tables.service is a utility for configuring and maintaining ip6tables.

Rationale:

ip6tables.service will load the iptables rules saved in the file /etc/sysconfig/ip6tables at boot, otherwise the ip6tables rules will be cleared during a re-boot of the system."
              solution    : "Run the following command to enable and start ip6tables:

# systemctl --now start ip6tables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.4.2.5,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
            </report>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - ports"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/sbin/ss -6tuln; /usr/sbin/ip6tables -L INPUT -v -n"
              expect      : ""
              severity    : MEDIUM
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - firewall rules"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
              reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/sbin/ip6tables -L -v -n"
              expect      : ""
              severity    : MEDIUM
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.4.4.2.5 Ensure ip6tables is enabled and active"
              info        : "ip6tables.service is a utility for configuring and maintaining ip6tables.

Rationale:

ip6tables.service will load the iptables rules saved in the file /etc/sysconfig/ip6tables at boot, otherwise the ip6tables rules will be cleared during a re-boot of the system."
              solution    : "Run the following command to enable and start ip6tables:

# systemctl --now start ip6tables"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.4.2.5,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/systemctl is-enabled ip6tables | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
              expect      : "enabled"
            </custom_item>
          </else>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain FORWARD"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain OUTPUT"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.1 Ensure iptables default deny firewall policy - Chain INPUT"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Input accept all lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Input drop all"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.2 Ensure iptables loopback traffic is configured - Output accept all lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP




Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.3 Ensure iptables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|3.4.4.1.3,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.1.4 Ensure iptables firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.1.4,CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain INPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain FORWARD'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.1 Ensure ip6tables default deny firewall policy - 'Chain OUTPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.1,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.2 Ensure ip6tables loopback traffic is configured"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.2,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.3 Ensure ip6tables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.3,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.4 Ensure ip6tables firewall rules exist for all open ports - firewall rules"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

Additional Information:

Changing firewall settings while connected over network can result in being locked out of the system.

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy."
          reference   : "800-171|3.13.1,800-53|SC-7(12),CIS_Recommendation|3.4.4.2.4,CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "3.4.4.2.5 Ensure ip6tables is enabled and active"
          info        : "ip6tables.service is a utility for configuring and maintaining ip6tables.

Rationale:

ip6tables.service will load the iptables rules saved in the file /etc/sysconfig/ip6tables at boot, otherwise the ip6tables rules will be cleared during a re-boot of the system."
          solution    : "Run the following command to enable and start ip6tables:

# systemctl --now start ip6tables"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIP|007-6-R1,CIS_Recommendation|3.4.4.2.5,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSCv7|9.4,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.5 Ensure wireless interfaces are disabled"
      info        : "Wireless networking is used when wired networks are unavailable. CentOS Linux contains a wireless tool kit to allow system administrators to configure and use wireless networks.

Rationale:

If wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled."
      solution    : "Run the following command to disable any wireless interfaces:

# nmcli radio all off

Disable any wireless interfaces in your network configuration."
      reference   : "800-171|3.1.16,800-53|AC-18(3),CIS_Recommendation|3.5,CSCv7|15.4,CSCv7|15.5,CSF|PR.PT-4,ITSG-33|AC-18(3),LEVEL|1A,LEVEL|2A,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/nmcli radio wifi"
      expect      : "disabled"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for rsyslog status"
          cmd         : "/usr/bin/systemctl status rsyslog | /usr/bin/grep Active:"
          expect      : "^[\\s]*Active: active \\(running\\)"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : RPM_CHECK
          description : "4.2.1.1 Ensure rsyslog is installed"
          info        : "The rsyslog software is a recommended replacement to the original syslogd daemon which provide improvements over syslogd, such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server.

Rationale:

The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package."
          solution    : "Run the folloing command to install rsyslog:

# dnf install rsyslog"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|4.2.1.1,CSCv6|2.2,CSCv7|6.2,CSCv7|6.3,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          rpm         : "rsyslog-0.0.0-0"
          operator    : "gt"
          required    : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.2 Ensure rsyslog Service is enabled"
          info        : "Once the rsyslog package is installed it needs to be activated.

Rationale:

If the rsyslog service is not activated the system may default to the syslogd service or lack logging instead."
          solution    : "Run the following command to enable rsyslog:

# systemctl --now enable rsyslog

Additional Information:

Additional methods of enabling a service exist. Consult your distribution documentation for appropriate methods."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIP|007-6-R1,CIS_Recommendation|4.2.1.2,CSCv6|9.1,CSCv7|6.2,CSCv7|6.3,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/systemctl is-enabled rsyslog | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.3 Ensure rsyslog default file permissions configured"
          info        : "rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected."
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to 0640 or more restrictive:

$FileCreateMode 0640"
          reference   : "800-171|3.3.8,800-53|AU-9,CIS_Recommendation|4.2.1.3,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv7|5.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -s '$FileCreateMode' /etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          expect      : ".*?:\\$FileCreateMode 0640"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.1.4 Ensure logging is configured"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment:

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
news.crit                               -/var/log/news/news.crit
news.err                                -/var/log/news/news.err
news.notice                             -/var/log/news/news.notice
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|4.2.1.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/ls -l /var/log/"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check to see if target is rsyslog client or server"
              cmd         : "/usr/bin/lsof -i -P -n | /usr/bin/grep rsyslogd | /usr/bin/awk \'{print} END {if (NR==0) print \"client\"; else print \"server\"}\'"
              expect      : "client"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host"
              info        : "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system"
              solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host).

*.* @@loghost.example.com

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|4.2.1.5,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.6,CSCv7|6.8,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
              see_also    : "https://workbench.cisecurity.org/files/3366"
# Note: Variable @SYSLOG_SERVER@ replaced with "10\\.0\\.0\\.2" in field "cmd".
              cmd         : "/usr/bin/grep -s '^\\*\\.\\*[^I][^I]*\\@\\@10\\.0\\.0\\.2' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
              expect      : "pass"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - ModLoad imtcp"
              info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
              solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/grep -sh '$ModLoad imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
              expect      : "([\\s]*\\$ModLoad[\\s]+imtcp[\\s]*$|none)"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - InputTCPServerRun"
              info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
              solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/grep -sh '$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
              expect      : "([\\s]*\\$InputTCPServerRun[\\s]+514[\\s]*$|none)"
            </custom_item>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host"
              info        : "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system"
              solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host).

*.* @@loghost.example.com

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|4.2.1.5,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.6,CSCv7|6.8,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/grep -sh '^\\*\\.\\*[^I][^I]*\\@' /etc/rsyslog.conf /etc/rsyslog.d/*.conf  | /usr/bin/awk '{print} END {if (NR==0) print \"none\"}'"
# Note: Variable @SYSLOG_SERVER@ replaced with "10\\.0\\.0\\.2" in field "expect".
              expect      : "(\\*\\.\\*[^I][^I]*\\@\\@10\\.0\\.0\\.2|none)"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - ModLoad imtcp"
              info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
              solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/grep -sh '$ModLoad imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf"
              expect      : "^[\\s]*\\$ModLoad[\\s]+imtcp[\\s]*$"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - InputTCPServerRun"
              info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
              solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/files/3366"
              cmd         : "/usr/bin/grep -sh '$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf"
              expect      : "^[\\s]*\\$InputTCPServerRun[\\s]+514[\\s]*$"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.2.1 Ensure journald is configured to send logs to rsyslog"
          info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the rsyslog service provides a consistent means of log collection and export.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
          solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

ForwardToSyslog=yes"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|4.2.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -P ^[\\s]*ForwardToSyslog /etc/systemd/journald.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
          expect      : "^[\\s]*ForwardToSyslog[\\s]*=[\\s]*yes[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.2.1.1 Ensure rsyslog is installed"
          info        : "The rsyslog software is a recommended replacement to the original syslogd daemon which provide improvements over syslogd, such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server.

Rationale:

The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package."
          solution    : "Run the folloing command to install rsyslog:

# dnf install rsyslog"
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIS_Recommendation|4.2.1.1,CSCv6|2.2,CSCv7|6.2,CSCv7|6.3,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|12.3.7,PCI-DSSv3.2|12.3.7,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.2 Ensure rsyslog Service is enabled"
          info        : "Once the rsyslog package is installed it needs to be activated.

Rationale:

If the rsyslog service is not activated the system may default to the syslogd service or lack logging instead."
          solution    : "Run the following command to enable rsyslog:

# systemctl --now enable rsyslog

Additional Information:

Additional methods of enabling a service exist. Consult your distribution documentation for appropriate methods."
          reference   : "800-171|3.4.8,800-53|CM-7(5),CIP|007-6-R1,CIS_Recommendation|4.2.1.2,CSCv6|9.1,CSCv7|6.2,CSCv7|6.3,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.3 Ensure rsyslog default file permissions configured"
          info        : "rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected."
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to 0640 or more restrictive:

$FileCreateMode 0640"
          reference   : "800-171|3.3.8,800-53|AU-9,CIS_Recommendation|4.2.1.3,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv7|5.1,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.4 Ensure logging is configured"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment:

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
news.crit                               -/var/log/news/news.crit
news.err                                -/var/log/news/news.err
news.notice                             -/var/log/news/news.notice
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|4.2.1.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host"
          info        : "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system"
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host).

*.* @@loghost.example.com

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.8,800-53|AU-9(2),CIS_Recommendation|4.2.1.5,CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.6,CSCv7|6.8,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - ModLoad imtcp"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - InputTCPServerRun"
          info        : "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port.

Rationale:

The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location."
          solution    : "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un-comment or add the following lines:

$ModLoad imtcp

$InputTCPServerRun 514

For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines:

# $ModLoad imtcp

# $InputTCPServerRun 514

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,CIS_Recommendation|4.2.1.6,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9.2,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>

        <report type:"PASSED">
          description : "4.2.2.1 Ensure journald is configured to send logs to rsyslog"
          info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the rsyslog service provides a consistent means of log collection and export.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
          solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

ForwardToSyslog=yes"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|4.2.2.1,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/files/3366"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.2.2 Ensure journald is configured to compress large log files"
      info        : "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.

Rationale:

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Compress=yes"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|4.2.2.2,CN-L3|8.1.10.6(d),CSCv7|6.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -P ^[\\s]*Compress /etc/systemd/journald.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "^[\\s]*Compress[\\s]*=[\\s]*yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.2.3 Ensure journald is configured to write logfiles to persistent disk"
      info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss.

Rationale:

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Storage=persistent"
      reference   : "800-171|3.3.8,800-53|AU-9.,CIS_Recommendation|4.2.2.3,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSCv7|6.2,CSCv7|6.3,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,LEVEL|1A,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -P ^[\\s]*Storage /etc/systemd/journald.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'"
      expect      : "^[\\s]*Storage[\\s]*=[\\s]*persistent[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.3 Ensure permissions on all logfiles are configured"
      info        : "Log files stored in /var/log/ contain logged information from many services on the system, or on log hosts others as well.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected."
      solution    : "Run the following commands to set permissions on all existing log files:

# find /var/log/ -type f -perm /g+wx,o+rwx -exec chmod g-wx,o-rwx '{}' +

Additional Information:

You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|4.2.3,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "OUTPUT=$(ls -l /var/log); /usr/bin/find /var/log/ -type f -perm /g+wx,o+rwx -exec ls -l \"{}\" + | /usr/bin/awk -v awkvar=\"${OUTPUT}\" '{print} END {if (NR == 0) print awkvar \"\\npass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <report type:"WARNING">
      description : "4.3 Ensure logrotate is configured"
      info        : "The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/logrotate.d/syslog is the configuration file used to rotate log files created by syslog or rsyslog.

Rationale:

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Edit /etc/logrotate.conf and /etc/logrotate.d/* to ensure logs are rotated according to site policy.

Additional Information:

If no maxage setting is set for logrotate a situation can occur where logrotate is interrupted and fails to delete rotated logfiles. It is recommended to set this to a value greater than the longest any log file should exist on your system to ensure that any such logfile is removed but standard rotation settings are not overridden."
      reference   : "800-53|AU-4,CIS_Recommendation|4.3,CSCv7|6.4,CSCv8|8.3,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/files/3366"
    </report>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "5.1.1 Ensure cron daemon is enabled"
      info          : "The cron daemon is used to execute batch jobs on the system.

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them."
      solution      : "Run the following command to enable cron:

# systemctl --now enable crond

Additional Information:

Additional methods of enabling a service exist. Consult your distribution documentation for appropriate methods."
      reference     : "800-171|3.4.8,800-53|CM-7(5),CIP|007-6-R1,CIS_Recommendation|5.1.1,CSCv6|9.1,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/systemctl is-enabled crond | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "enabled"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.2 Ensure permissions on /etc/crontab are configured"
      info        : "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

Rationale:

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access."
      solution    : "Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.2,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/crontab"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.3 Ensure permissions on /etc/cron.hourly are configured"
      info        : "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on /etc/cron.hourly :

# chown root:root /etc/cron.hourly

# chmod og-rwx /etc/cron.hourly"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.3,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.hourly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.4 Ensure permissions on /etc/cron.daily are configured"
      info        : "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on /etc/cron.daily :

# chown root:root /etc/cron.daily

# chmod og-rwx /etc/cron.daily"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.4,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.daily"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.5 Ensure permissions on /etc/cron.weekly are configured"
      info        : "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on /etc/cron.weekly :

# chown root:root /etc/cron.weekly

# chmod og-rwx /etc/cron.weekly"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.5,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.weekly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.6 Ensure permissions on /etc/cron.monthly are configured"
      info        : "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on /etc/cron.monthly :

# chown root:root /etc/cron.monthly

# chmod og-rwx /etc/cron.monthly"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.6,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.monthly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.7 Ensure permissions on /etc/cron.d are configured"
      info        : "The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on /etc/cron.d :

# chown root:root /etc/cron.d

# chmod og-rwx /etc/cron.d"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.1.7,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.d"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "5.1.8 Ensure at/cron is restricted to authorized users - cron.deny"
      info        : "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to:

remove /etc/cron.deny and /etc/at.deny

create, set permissions, and set and ownership for /etc/cron.allow and /etc/at.allow:

# rm /etc/cron.deny
# rm /etc/at.deny

# touch /etc/cron.allow
# touch /etc/at.allow

# chmod og-rwx /etc/cron.allow
# chmod og-rwx /etc/at.allow

# chown root:root /etc/cron.allow
# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CIS_Recommendation|5.1.8,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|9.1,CSCv7|16,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.deny"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "5.1.8 Ensure at/cron is restricted to authorized users - at.deny"
      info        : "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to:

remove /etc/cron.deny and /etc/at.deny

create, set permissions, and set and ownership for /etc/cron.allow and /etc/at.allow:

# rm /etc/cron.deny
# rm /etc/at.deny

# touch /etc/cron.allow
# touch /etc/at.allow

# chmod og-rwx /etc/cron.allow
# chmod og-rwx /etc/at.allow

# chown root:root /etc/cron.allow
# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIP|007-6-R1,CIS_Recommendation|5.1.8,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|9.1,CSCv7|16,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.2,PCI-DSSv3.1|2.2.3,PCI-DSSv3.2|2.2.2,PCI-DSSv3.2|2.2.3,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/at.deny"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.8 Ensure at/cron is restricted to authorized users - cron.allow"
      info        : "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to:

remove /etc/cron.deny and /etc/at.deny

create, set permissions, and set and ownership for /etc/cron.allow and /etc/at.allow:

# rm /etc/cron.deny
# rm /etc/at.deny

# touch /etc/cron.allow
# touch /etc/at.allow

# chmod og-rwx /etc/cron.allow
# chmod og-rwx /etc/at.allow

# chown root:root /etc/cron.allow
# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|5.1.8,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|3.1,CSCv7|16,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/cron.allow"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.8 Ensure at/cron is restricted to authorized users - at.allow"
      info        : "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to:

remove /etc/cron.deny and /etc/at.deny

create, set permissions, and set and ownership for /etc/cron.allow and /etc/at.allow:

# rm /etc/cron.deny
# rm /etc/at.deny

# touch /etc/cron.allow
# touch /etc/at.allow

# chmod og-rwx /etc/cron.allow
# chmod og-rwx /etc/at.allow

# chown root:root /etc/cron.allow
# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|5.1.8,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|3.1,CSCv7|16,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/at.allow"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured"
      info        : "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.

Rationale:

The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users."
      solution    : "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config:

# chown root:root /etc/ssh/sshd_config
# chmod og-rwx /etc/ssh/sshd_config"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.2.1,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.2 Ensure SSH access is limited - sshd_config"
      info        : "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

AllowUsers:

The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

AllowGroups:

The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

DenyUsers:

The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

DenyGroups:

The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Rationale:

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system."
      solution    : "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows:

AllowUsers <userlist>

OR

AllowGroups <grouplist>

OR

DenyUsers <userlist>

OR

DenyGroups <grouplist>

Default Value:

None"
      reference   : "800-171|3.1.5,800-53|AC-6(7)(b),CIS_Recommendation|5.2.2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,ITSG-33|AC-6,LEVEL|1A,NESA|M1.1.3,NESA|T5.1.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)(Allow|Deny)(Users|Groups)(?-i)[\\s]"
      expect      : "^[\\s]*(?i)(Allow|Deny)(Users|Groups)(?-i)[\\s]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.2 Ensure SSH access is limited - sshd output"
      info        : "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

AllowUsers:

The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

AllowGroups:

The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

DenyUsers:

The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

DenyGroups:

The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Rationale:

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system."
      solution    : "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows:

AllowUsers <userlist>

OR

AllowGroups <grouplist>

OR

DenyUsers <userlist>

OR

DenyGroups <grouplist>

Default Value:

None"
      reference   : "800-171|3.1.5,800-53|AC-6(7)(b),CIS_Recommendation|5.2.2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.5,ITSG-33|AC-6,LEVEL|1A,NESA|M1.1.3,NESA|T5.1.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep -Pi '^\\h*(allow|deny)(users|groups)\\h+\\H+(\\h+.*)?$'"
      expect      : "^[\\s]*(?i)(Allow|Deny)(Users|Groups)(?-i)[\\s]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.3 Ensure permissions on SSH private host key files are configured"
      info        : "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

Rationale:

If an unauthorized user obtains the private SSH host key file, the host could be impersonated"
      solution    : "Run the following commands to set permissions, ownership, and group on the private SSH host key files:

# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod u-x,g-wx,o-rwx {} \;
# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \;"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.2.3,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat -c '\%a \%n \%U \%G' {} \\; | /usr/bin/awk -F' ' 'BEGIN { f=0; print \"Octal, File, User, Group\"; } { printf \"%s, %s, %s, %s\",$1,$2,$3,$4; if($4 ~ \"root\"){ if ($3 ~ \"root\" && $1 ~ /[1-6]00/){ printf \" - pass\";} else { ++f; printf \" - fail\"; } } else if($4 ~ \"ssh_keys\"){ if ($3 ~ \"root\" &&  $1 ~ /[1-6][0-4]0/){ printf \" - pass\";} else { ++f; printf \" - fail\"; } } printf \"\\n\"; } END { if(f != 0){ print \"Failures found\"; } else { print \"All files pass\"; } }'"
      expect      : "All files pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.4 Ensure permissions on SSH public host key files are configured"
      info        : "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

Rationale:

If a public host key file is modified by an unauthorized user, the SSH service may be compromised."
      solution    : "Run the following commands to set permissions and ownership on the SSH host public key files

# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod u-x,go-wx {} \;
# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \;

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.2.4,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/ssh_host_*_key.pub"
      owner       : "root"
      mask        : "7133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.5 Ensure SSH LogLevel is appropriate - sshd_config"
      info        : "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Rationale:

SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LogLevel VERBOSE

OR

LogLevel INFO

Default Value:

LogLevel INFO"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|5.2.5,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)LogLevel(?-i)[\\s]"
      expect      : "^[\\s]*(?i)LogLevel(?-i)[\\s]+(INFO|VERBOSE)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.5 Ensure SSH LogLevel is appropriate - sshd output"
      info        : "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Rationale:

SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LogLevel VERBOSE

OR

LogLevel INFO

Default Value:

LogLevel INFO"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|5.2.5,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep loglevel"
      expect      : "^[\\s]*(?i)LogLevel(?-i)[\\s]+(INFO|VERBOSE)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.7 Ensure SSH MaxAuthTries is set to 4 or less - sshd_config"
      info        : "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Rationale:

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxAuthTries 4

Default Value:

MaxAuthTries 6"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.2.7,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|16.13,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)MaxAuthTries(?-i)[\\s]"
      expect      : "^[\\s]*(?i)MaxAuthTries(?-i)[\\s]+[1-4][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.7 Ensure SSH MaxAuthTries is set to 4 or less - sshd output"
      info        : "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Rationale:

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxAuthTries 4

Default Value:

MaxAuthTries 6"
      reference   : "800-171|3.1.8,800-53|AC-7.,CIS_Recommendation|5.2.7,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|16.13,ITSG-33|AC-7,LEVEL|1A,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep maxauthtries"
      expect      : "^[\\s]*(?i)MaxAuthTries(?-i)[\\s]+[1-4][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.8 Ensure SSH IgnoreRhosts is enabled - sshd_config"
      info        : "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.

Rationale:

Setting this parameter forces users to enter a password when authenticating with ssh."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

IgnoreRhosts yes

Default Value:

IgnoreRhosts yes"
      reference   : "800-171|3.5.2,800-53|AC-14a.,800-53|IA-5.,CIS_Recommendation|5.2.8,CSCv7|9.2,CSF|PR.AC-1,ITSG-33|AC-14a.,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,NESA|T5.6.1,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)IgnoreRhosts(?-i)[\\s]"
      expect      : "^[\\s]*(?i)IgnoreRhosts(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.8 Ensure SSH IgnoreRhosts is enabled - sshd output"
      info        : "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.

Rationale:

Setting this parameter forces users to enter a password when authenticating with ssh."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

IgnoreRhosts yes

Default Value:

IgnoreRhosts yes"
      reference   : "800-171|3.5.2,800-53|AC-14,800-53|IA-5,CIS_Recommendation|5.2.8,CSCv7|9.2,CSF|PR.AC-1,ITSG-33|AC-14,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep ignorerhosts"
      expect      : "^[\\s]*(?i)IgnoreRhosts(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.9 Ensure SSH HostbasedAuthentication is disabled - sshd_config"
      info        : "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.

Rationale:

Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

HostbasedAuthentication no
''

Default Value:

HostbasedAuthentication no"
      reference   : "800-171|3.5.2,800-53|AC-14a.,800-53|IA-5.,CIS_Recommendation|5.2.9,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|AC-14a.,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,NESA|T5.6.1,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)HostbasedAuthentication(?-i)[\\s]"
      expect      : "^[\\s]*(?i)HostbasedAuthentication(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.9 Ensure SSH HostbasedAuthentication is disabled - sshd output"
      info        : "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.

Rationale:

Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

HostbasedAuthentication no
''

Default Value:

HostbasedAuthentication no"
      reference   : "800-171|3.5.2,800-53|AC-14,800-53|IA-5,CIS_Recommendation|5.2.9,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|AC-14,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep hostbasedauthentication"
      expect      : "^[\\s]*(?i)HostbasedAuthentication(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.10 Ensure SSH root login is disabled - sshd_config"
      info        : "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no.

Rationale:

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitRootLogin no

Default Value:

PermitRootLogin without-password"
      reference   : "800-171|3.1.2,800-171|3.1.15,800-53|AC-17(4),CIS_Recommendation|5.2.10,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSCv7|4.3,CSF|PR.AC-3,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(4),LEVEL|1A,NESA|T5.4.5,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitRootLogin(?-i)[\\s]"
      expect      : "^[\\s]*(?i)PermitRootLogin(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.10 Ensure SSH root login is disabled - sshd output"
      info        : "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no.

Rationale:

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitRootLogin no

Default Value:

PermitRootLogin without-password"
      reference   : "800-171|3.1.2,800-171|3.1.15,800-53|AC-17(4),CIS_Recommendation|5.2.10,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSCv7|4.3,CSF|PR.AC-3,CSF|PR.PT-4,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(4),LEVEL|1A,NESA|T5.4.5,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep permitrootlogin"
      expect      : "^[\\s]*(?i)PermitRootLogin(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.11 Ensure SSH PermitEmptyPasswords is disabled - sshd_config"
      info        : "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Rationale:

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitEmptyPasswords no

Default Value:

PermitEmptyPasswords no"
      reference   : "800-171|3.5.2,800-53|IA-5.,CIS_Recommendation|5.2.11,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitEmptyPasswords(?-i)[\\s]"
      expect      : "^[\\s]*(?i)PermitEmptyPasswords(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.11 Ensure SSH PermitEmptyPasswords is disabled - sshd output"
      info        : "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Rationale:

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitEmptyPasswords no

Default Value:

PermitEmptyPasswords no"
      reference   : "800-171|3.5.2,800-53|IA-5.,CIS_Recommendation|5.2.11,CSCv7|16.3,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep permitemptypasswords"
      expect      : "^[\\s]*(?i)PermitEmptyPasswords(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.12 Ensure SSH PermitUserEnvironment is disabled - sshd_config"
      info        : "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.

Rationale:

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitUserEnvironment no

Default Value:

PermitUserEnvironment no"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|5.2.12,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitUserEnvironment(?-i)[\\s]"
      expect      : "^[\\s]*(?i)PermitUserEnvironment(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.12 Ensure SSH PermitUserEnvironment is disabled - sshd output"
      info        : "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.

Rationale:

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitUserEnvironment no

Default Value:

PermitUserEnvironment no"
      reference   : "800-171|3.4.2,800-53|CM-6.,CIS_Recommendation|5.2.12,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep permituserenvironment"
      expect      : "^[\\s]*(?i)PermitUserEnvironment(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.13 Ensure SSH Idle Timeout Interval is configured - ClientAliveInterval sshd_config"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is no greater than 900 seconds (15 minutes)

The recommended ClientAliveCountMax setting is 0

At the 15 minute interval, if the ssh session is inactive, the session will be terminated.




Impact:

In some cases this setting may cause termination of long-running scripts over SSH or remote automation tools which rely on SSH. In developing the local site policy, the requirements of such scripts should be considered and appropriate ServerAliveInterval and ClientAliveInterval settings should be calculated to insure operational continuity."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 900 and ClientAliveCountMax of 0:

ClientAliveInterval 900
ClientAliveCountMax 0

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.13,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49,PCI-DSSv3.1|8.1.8,PCI-DSSv3.1|12.3.8,PCI-DSSv3.2|8.1.8,PCI-DSSv3.2|12.3.8"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]"
      expect      : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.13 Ensure SSH Idle Timeout Interval is configured - ClientAliveInterval sshd output"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is no greater than 900 seconds (15 minutes)

The recommended ClientAliveCountMax setting is 0

At the 15 minute interval, if the ssh session is inactive, the session will be terminated.




Impact:

In some cases this setting may cause termination of long-running scripts over SSH or remote automation tools which rely on SSH. In developing the local site policy, the requirements of such scripts should be considered and appropriate ServerAliveInterval and ClientAliveInterval settings should be calculated to insure operational continuity."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 900 and ClientAliveCountMax of 0:

ClientAliveInterval 900
ClientAliveCountMax 0

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.13,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep clientaliveinterval"
      expect      : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.13 Ensure SSH Idle Timeout Interval is configured - ClientAliveCountMax sshd_config"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is no greater than 900 seconds (15 minutes)

The recommended ClientAliveCountMax setting is 0

At the 15 minute interval, if the ssh session is inactive, the session will be terminated.




Impact:

In some cases this setting may cause termination of long-running scripts over SSH or remote automation tools which rely on SSH. In developing the local site policy, the requirements of such scripts should be considered and appropriate ServerAliveInterval and ClientAliveInterval settings should be calculated to insure operational continuity."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 900 and ClientAliveCountMax of 0:

ClientAliveInterval 900
ClientAliveCountMax 0

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.13,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49,PCI-DSSv3.1|8.1.8,PCI-DSSv3.1|12.3.8,PCI-DSSv3.2|8.1.8,PCI-DSSv3.2|12.3.8"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)ClientAliveCountMax(?-i)[\\s]"
      expect      : "^[\\s]*(?i)ClientAliveCountMax(?-i)[\\s]+0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.13 Ensure SSH Idle Timeout Interval is configured - ClientAliveCountMax sshd output"
      info        : "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions.

ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3.

The client alive messages are sent through the encrypted channel

Setting ClientAliveCountMax to 0 disables connection termination

Example: The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds

Rationale:

Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.

The recommended ClientAliveInterval setting is no greater than 900 seconds (15 minutes)

The recommended ClientAliveCountMax setting is 0

At the 15 minute interval, if the ssh session is inactive, the session will be terminated.




Impact:

In some cases this setting may cause termination of long-running scripts over SSH or remote automation tools which rely on SSH. In developing the local site policy, the requirements of such scripts should be considered and appropriate ServerAliveInterval and ClientAliveInterval settings should be calculated to insure operational continuity."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 900 and ClientAliveCountMax of 0:

ClientAliveInterval 900
ClientAliveCountMax 0

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.13,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep clientalivecountmax"
      expect      : "^[\\s]*(?i)ClientAliveCountMax(?-i)[\\s]+0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.14 Ensure SSH LoginGraceTime is set to one minute or less - sshd_config"
      info        : "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Rationale:

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LoginGraceTime 60

Default Value:

LoginGraceTime 120"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.14,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|5.1,HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49,PCI-DSSv3.1|8.1.8,PCI-DSSv3.1|12.3.8,PCI-DSSv3.2|8.1.8,PCI-DSSv3.2|12.3.8"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)LoginGraceTime(?-i)[\\s]"
      expect      : "^[\\s]*(?i)LoginGraceTime(?-i)[\\s]+([1-9]|[1-5][0-9]|60)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.14 Ensure SSH LoginGraceTime is set to one minute or less - sshd output"
      info        : "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Rationale:

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LoginGraceTime 60

Default Value:

LoginGraceTime 120"
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.2.14,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|5.1,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep logingracetime"
      expect      : "^[\\s]*(?i)LoginGraceTime(?-i)[\\s]+([1-9]|[1-5][0-9]|60)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.15 Ensure SSH warning banner is configured"
      info        : "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Rationale:

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

Banner /etc/issue.net"
      reference   : "800-171|3.1.9,800-53|AC-8.,CIS_Recommendation|5.2.15,CSCv7|5.1,ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep banner"
      expect      : "^[\\s]*(?i)Banner(?-i)[\\s]+/etc/issue\\.net[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.16 Ensure SSH PAM is enabled - sshd_config"
      info        : "UsePAM Enables the Pluggable Authentication Module interface. If set to 'yes' this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types

Rationale:

When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server

Impact:

If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

UsePAM yes

Default Value:

usePAM yes"
      reference   : "800-171|3.5.2,800-53|IA-5.,CIS_Recommendation|5.2.16,CSCv7|5.1,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)UsePAM(?-i)[\\s]"
      expect      : "^[\\s]*(?i)UsePAM(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.16 Ensure SSH PAM is enabled - sshd output"
      info        : "UsePAM Enables the Pluggable Authentication Module interface. If set to 'yes' this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types

Rationale:

When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server

Impact:

If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

UsePAM yes

Default Value:

usePAM yes"
      reference   : "800-171|3.5.2,800-53|IA-5.,CIS_Recommendation|5.2.16,CSCv7|5.1,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep usepam"
      expect      : "^[\\s]*(?i)UsePAM(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.18 Ensure SSH MaxStartups is configured - sshd_config"
      info        : "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

Rationale:

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

maxstartups 10:30:60

Default Value:

MaxStartups 10:30:100"
      reference   : "800-53|AC-10.,CIS_Recommendation|5.2.18,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)MaxStartups(?-i)[\\s]"
# Note: Variable @MAX_START_UP@ replaced with "10:30:60" in field "expect".
      expect      : "^[\\s]*(?i)MaxStartups(?-i)[\\s]+10:30:60[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.18 Ensure SSH MaxStartups is configured - sshd output"
      info        : "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

Rationale:

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

maxstartups 10:30:60

Default Value:

MaxStartups 10:30:100"
      reference   : "800-53|AC-10.,CIS_Recommendation|5.2.18,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep maxstartups"
# Note: Variable @MAX_START_UP@ replaced with "10:30:60" in field "expect".
      expect      : "^[\\s]*(?i)MaxStartups(?-i)[\\s]+10:30:60[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.19 Ensure SSH MaxSessions is set to 4 or less - sshd_config"
      info        : "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

Rationale:

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxSessions 10

Default Value:

MaxSessions 10"
      reference   : "800-53|AC-10.,CIS_Recommendation|5.2.19,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)MaxSessions(?-i)[\\s]"
# Note: Variable @MAX_SESSIONS@ replaced with "4" in field "expect".
      expect      : "^[\\s]*(?i)MaxSessions(?-i)[\\s]+([1-4]|4)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.19 Ensure SSH MaxSessions is set to 4 or less - sshd output"
      info        : "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

Rationale:

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxSessions 10

Default Value:

MaxSessions 10"
      reference   : "800-53|AC-10.,CIS_Recommendation|5.2.19,CSCv7|5.1,ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/usr/bin/grep $(hostname) /etc/hosts | /usr/bin/awk '{print $1}')\" | /usr/bin/grep maxsessions"
# Note: Variable @MAX_SESSIONS@ replaced with "4" in field "expect".
      expect      : "^[\\s]*(?i)MaxSessions(?-i)[\\s]+([1-4]|4)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2.20 Ensure system-wide crypto policy is not over-ridden"
      info        : "System-wide Crypto policy can be over-ridden or opted out of for openSSH

Rationale:

Over-riding or opting out of the system-wide crypto policy could allow for the use of less secure Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm"
      solution    : "Run the following commands:

# sed -ri 's/^\s*(CRYPTO_POLICY\s*=.*)$/# \1/' /etc/sysconfig/sshd
# systemctl reload sshd"
      reference   : "800-171|3.13.11,800-53|SC-13.,CIS_Recommendation|5.2.20,CSCv7|14.4,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -i '^[\\s]*CRYPTO_POLICY=' /etc/sysconfig/sshd | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.1 Create custom authselect profile"
      info        : "A custom profile can be created by copying and customizing one of the default profiles. The default profiles include: sssd, winbind, or the nis.

Rationale:

A custom profile is required to customize many of the pam options"
      solution    : "Run the following command to create a custom authselect profile:

# authselect create-profile <custom-profile name> -b <default profile to copy>

Example:

# authselect create-profile custom-profile -b sssd --symlink-meta"
      reference   : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|5.3.1,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|5.1,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/authselect current | /usr/bin/grep 'Profile[[:space:]]*ID:'"
# Note: Variable @CUSTOM_PROFILE@ replaced with "sssd" in field "expect".
      expect      : "^[\\s]*Profile[\\s]*ID:[\\s]*sssd[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.2 Select authselect profile"
      info        : "You can select a profile for the authselect utility for a specific host. The profile will be applied to every user logging into the host.

You can create and deploy a custom profile by customizing one of the default profiles, the sssd, winbind, or the nis profile.

Rationale:

When you deploy a profile, the profile is applied to every user logging into the given host

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to select a custom authselect profile

# authselect select custom/<CUSTOM PROFILE NAME> {with-<OPTIONS>}

Example:

# authselect select custom/custom-profile with-sudo with-faillock without-nullok"
      reference   : "800-171|3.5.1,800-53|IA-2,CIS_Recommendation|5.3.2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/authselect current"
      expect      : ""
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.3 Ensure authselect includes with-faillock - password-auth auth required"
      info        : "The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications. It stores the failure records into per-user files in the tally directory

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Run the following command to include the with-faillock option

# authselect select <PROFILE NAME> with-faillock

Example:

# authselect select custom/custom-profile with-sudo with-faillock without-nullok"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.3.3,CN-L3|8.1.4.1(b),CSCv7|16.7,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/authselect/password-auth"
      regex       : "^[\\h]*auth[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
      expect      : "^[\\h]*auth[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.3 Ensure authselect includes with-faillock - password-auth account required"
      info        : "The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications. It stores the failure records into per-user files in the tally directory

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Run the following command to include the with-faillock option

# authselect select <PROFILE NAME> with-faillock

Example:

# authselect select custom/custom-profile with-sudo with-faillock without-nullok"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.3.3,CN-L3|8.1.4.1(b),CSCv7|16.7,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/authselect/password-auth"
      regex       : "^[\\h]*account[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
      expect      : "^[\\h]*account[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.3 Ensure authselect includes with-faillock - system-auth auth required"
      info        : "The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications. It stores the failure records into per-user files in the tally directory

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Run the following command to include the with-faillock option

# authselect select <PROFILE NAME> with-faillock

Example:

# authselect select custom/custom-profile with-sudo with-faillock without-nullok"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.3.3,CN-L3|8.1.4.1(b),CSCv7|16.7,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/authselect/system-auth"
      regex       : "^[\\h]*auth[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
      expect      : "^[\\h]*auth[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.3.3 Ensure authselect includes with-faillock - system-auth account required"
      info        : "The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications. It stores the failure records into per-user files in the tally directory

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Run the following command to include the with-faillock option

# authselect select <PROFILE NAME> with-faillock

Example:

# authselect select custom/custom-profile with-sudo with-faillock without-nullok"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.3.3,CN-L3|8.1.4.1(b),CSCv7|16.7,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/authselect/system-auth"
      regex       : "^[\\h]*account[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
      expect      : "^[\\h]*account[\\h]+required[\\h]+([^#\\r\\n]+[\\h]+)?pam_faillock\\.so[\\h]*([\\h]+.*)?$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - password-auth try_first_pass"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.

try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

** Either of the following can be used to enforce complex passwords:**

minclass=4 - provide at least four classes of characters for the new password

OR

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy

minclass = 4

OR

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Run the following to update the system-auth and password-auth files

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF
[[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF
done
authselect apply-changes

Additional Information:

All default authselect profiles have pam_pwquality enabled with the expectation that options will be specified in pwquality.conf"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.4.1,CN-L3|8.1.4.1(b),CSCv7|4.4,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/password-auth"
      regex       : "^[\\s]*password[\\s]+requisite[\\s]+pam_pwquality\\.so[\\s]"
# Note: Variable @TRY_FIRST_PASS@ replaced with "try_first_pass" in field "expect".
      expect      : "try_first_pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - system-auth try_first_pass"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.

try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

** Either of the following can be used to enforce complex passwords:**

minclass=4 - provide at least four classes of characters for the new password

OR

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy

minclass = 4

OR

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Run the following to update the system-auth and password-auth files

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF
[[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF
done
authselect apply-changes

Additional Information:

All default authselect profiles have pam_pwquality enabled with the expectation that options will be specified in pwquality.conf"
      reference   : "800-171|3.5.2,800-53|IA-5(13),CIS_Recommendation|5.4.1,CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/system-auth"
      regex       : "^[\\s]*password[\\s]+requisite[\\s]+pam_pwquality\\.so[\\s]"
# Note: Variable @TRY_FIRST_PASS@ replaced with "try_first_pass" in field "expect".
      expect      : "try_first_pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - password-auth retry=3"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.

try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

** Either of the following can be used to enforce complex passwords:**

minclass=4 - provide at least four classes of characters for the new password

OR

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy

minclass = 4

OR

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Run the following to update the system-auth and password-auth files

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF
[[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF
done
authselect apply-changes

Additional Information:

All default authselect profiles have pam_pwquality enabled with the expectation that options will be specified in pwquality.conf"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.4.1,CN-L3|8.1.4.1(b),CSCv7|4.4,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/password-auth"
      regex       : "^[\\s]*password[\\s]+requisite[\\s]+pam_pwquality\\.so[\\s]"
# Note: Variable @PW_RETRY@ replaced with "[1-3]" in field "expect".
      expect      : "[\\s]+retry[\\s]*=[\\s]*[1-3]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - system-auth retry=3"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.

try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

** Either of the following can be used to enforce complex passwords:**

minclass=4 - provide at least four classes of characters for the new password

OR

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy

minclass = 4

OR

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Run the following to update the system-auth and password-auth files

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF
[[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF
done
authselect apply-changes

Additional Information:

All default authselect profiles have pam_pwquality enabled with the expectation that options will be specified in pwquality.conf"
      reference   : "800-171|3.1.8,800-53|AC-7a.,CIS_Recommendation|5.4.1,CN-L3|8.1.4.1(b),CSCv6|16.7,CSCv7|4.4,ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/system-auth"
      regex       : "^[\\s]*password[\\s]+requisite[\\s]+pam_pwquality\\.so[\\s]"
# Note: Variable @PW_RETRY@ replaced with "[1-3]" in field "expect".
      expect      : "[\\s]+retry[\\s]*=[\\s]*[1-3]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - minlen"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.

try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.

retry=3 - Allow 3 tries before sending back a failure.

minlen=14 - password must be 14 characters or more

** Either of the following can be used to enforce complex passwords:**

minclass=4 - provide at least four classes of characters for the new password

OR

dcredit=-1 - provide at least one digit

ucredit=-1 - provide at least one uppercase character

ocredit=-1 - provide at least one special character

lcredit=-1 - provide at least one lowercase character

The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy

minclass = 4

OR

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Run the following to update the system-auth and password-auth files

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF
[[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF
done
authselect apply-changes

Additional Information:

All default authselect profiles have pam_pwquality enabled with the expectation that options will be specified in pwquality.conf"
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),CIP|007-6-R5.5,CIS_Recommendation|5.4.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/security/pwquality.conf"
      regex       : "^[\\s]*minlen[\\s]*="
# Note: Variable @PW_MINLEN@ replaced with "(1[4-9]|[2-9][0-9])" in field "expect".
      expect      : "^[\\s]*minlen[\\s]*=[\\s]*(1[4-9]|[2-9][0-9])[\\s]*$"
    </custom_item>

    <if>
      <condition type:"OR">
        <custom_item>
          type        : CMD_EXEC
          description : "5.4.1 Ensure password creation requirements are configured - minclass"
          cmd         : "/usr/bin/grep -P '^[\\s]*minclass' /etc/security/pwquality.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.4.1 Ensure password creation requirements are configured - password complexity"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options. try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password. retry=3 - Allow 3 tries before sending back a failure. minlen=14 - password must be 14 characters or more ** Either of the following can be used to enforce complex passwords:** minclass=4 - provide at least four classes of characters for the new password OR dcredit=-1 - provide at least one digit ucredit=-1 - provide at least one uppercase character ocredit=-1 - provide at least one special character lcredit=-1 - provide at least one lowercase character The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies  Strong passwords protect systems from being hacked through brute force methods."
          solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy minlen = 14 Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy minclass = 4 OR dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1 Run the following to update the system-auth and password-auth files CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/) for FN in system-auth password-auth; do [[ -n $CP ]] &amp;&amp; PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN [[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] &amp;&amp; sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF [[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] &amp;&amp; sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF done authselect apply-changes"
          reference   : "800-171|3.5.7,800-53|IA-5(1)(a),CIS_Recommendation|5.4.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -P '^[\\s]*minclass[\\s]*=[\\s]*4' /etc/security/pwquality.conf | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "5.4.1 Ensure password creation requirements are configured - password complexity"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options. try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password. retry=3 - Allow 3 tries before sending back a failure. minlen=14 - password must be 14 characters or more ** Either of the following can be used to enforce complex passwords:** minclass=4 - provide at least four classes of characters for the new password OR dcredit=-1 - provide at least one digit ucredit=-1 - provide at least one uppercase character ocredit=-1 - provide at least one special character lcredit=-1 - provide at least one lowercase character The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies  Strong passwords protect systems from being hacked through brute force methods."
          solution    : "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy minlen = 14 Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy minclass = 4 OR dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1 Run the following to update the system-auth and password-auth files CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/) for FN in system-auth password-auth; do [[ -n $CP ]] &amp;&amp; PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN [[ -z $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*enforce-for-root\s*.*$' $PTF) ]] &amp;&amp; sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 enforce-for-root/' $PTF [[ -n $(grep -E '^\s*password\s+requisite\s+pam_pwquality.so\s+.*\s+retry=\S+\s*.*$' $PTF) ]] &amp;&amp; sed -ri '/pwquality/s/retry=\S+/retry=3/' $PTF || sed -ri 's/^\s*(password\s+requisite\s+pam_pwquality.so\s+)(.*)$/\1\2 retry=3/' $PTF done authselect apply-changes"
          reference   : "800-171|3.5.7,800-53|IA-5(1)(a),CIS_Recommendation|5.4.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
          see_also    : "https://workbench.cisecurity.org/files/3366"
          cmd         : "/usr/bin/grep -P '^[\\s]*\\Scredit[\\s]*=[\\s]*-[1-9]' /etc/security/pwquality.conf | /usr/bin/sed ':a;$!{N;s/\\n/ /;ba;}' | /usr/bin/grep -P '(?=.*?dcredit).*(?=.*?ucredit).*(?=.*?ocredit).*(?=.*?lcredit)' | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.2 Ensure lockout for failed password attempts is configured"
      info        : "Lock out users after n unsuccessful consecutive login attempts.

deny= - Number of attempts before the account is locked

unlock_time= - Time in seconds before the account is unlocked

Set the lockout number and unlock time to follow local site policy.

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
      solution    : "Set password lockouts and unlock times to conform to site policy
Run the following to update the system-auth and password-auth files. This script will update/add the deny=5 and unlock_time=900 options.
This script should be modified as needed to follow local site policy.

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN
[[ -n $(grep -E '^\s*auth\s+required\s+pam_faillock.so\s+.*deny=\S+\s*.*$' $PTF) ]] && sed -ri '/pam_faillock.so/s/deny=\S+/deny=5/g' $PTF || sed -ri 's/^\^\s*(auth\s+required\s+pam_faillock\.so\s+)(.*[^{}])(\{.*\}|)$/\1\2 deny=5 \3/' $PTF
[[ -n $(grep -E '^\s*auth\s+required\s+pam_faillock.so\s+.*unlock_time=\S+\s*.*$' $PTF) ]] && sed -ri '/pam_faillock.so/s/unlock_time=\S+/unlock_time=900/g' $PTF || sed -ri 's/^\s*(auth\s+required\s+pam_faillock\.so\s+)(.*[^{}])(\{.*\}|)$/\1\2 unlock_time=900 \3/' $PTF
done
authselect apply-changes

Additional Information:

Additional module options may be set, recommendation only covers those listed here.

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_faillock.so module, the user can be unlocked by issuing the command faillock -u --reset. This command sets the failed count to 0, effectively unlocking the user.

Use of the 'audit' keyword may log credentials in the case of user error during authentication. This risk should be evaluated in the context of the site policies of your organization."
      reference   : "800-171|3.1.8,800-53|AC-7.,CIS_Recommendation|5.4.2,CN-L3|8.1.4.1(b),CSCv7|16.7,ITSG-33|AC-7,LEVEL|1A,NIAv2|AM24,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -s -P '^[\\s]*auth[\\s]+required[\\s]+(pam_faillock\\.so|pam_tally2\\.so)[\\s]*' /etc/pam.d/password-auth /etc/pam.d/system-auth /etc/pam.d/common-auth | /usr/bin/awk '{print} END {if(NR==0) print \"fail\"}'"
      expect      : "(deny=[0-5][\\s]+.*unlock_time=(9[0-9][0-9]|\d{4,})|unlock_time=(9[0-9][0-9]|\d{4,}).*deny=[0-5])"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.4.3 Ensure password reuse is limited"
      info        : "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.

remember=<5> - Number of old passwords to remember

Rationale:

Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.

Note: These change only apply to accounts configured on the local system."
      solution    : "Set remembered password history to conform to site policy.
Run the following script to add or modify the pam_pwhistory.so and pam_unix.so lines to include the remember option:

#!/bin/bash

if authselect current | awk 'NR == 1 {print $3}' | grep -q custom/; then
   PTF=/etc/authselect/'$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)'/system-auth
else
   PTF=/etc/authselect/system-auth
fi

if grep -Eq '^\s*password\s+(sufficient\s+pam_unix|requi(red|site)\s+pam_pwhistory).so\s+([^#]+\s+)*remember=\S+\s*.*$' $PTF; then
   sed -ri 's/^\s*(password\s+(requisite|sufficient)\s+(pam_pwhistory\.so|pam_unix\.so)\s+)(.*)(remember=\S+\s*)(.*)$/\1\4 remember=5 \6/' $PTF
else
   sed -ri 's/^\s*(password\s+(requisite|sufficient)\s+(pam_pwhistory\.so|pam_unix\.so)\s+)(.*)$/\1\4 remember=5/' $PTF
fi

authselect apply-changes

Additional Information:

Additional module options may be set, recommendation only covers those listed here."
      reference   : "800-171|3.5.8,800-53|IA-5(1)(e),CIS_Recommendation|5.4.3,CSCv7|16,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(e),LEVEL|1A,NESA|T5.2.3,NIAv2|AM22c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -P '^\\h*password\\h+(requisite|sufficient)\\h+(pam_pwhistory\\.so|pam_unix\\.so)\\h+([^#\\r]+\\h+)?remember=([5-9]|[1-9][0-9]+)\\h*(\\h+.*)?$' /etc/pam.d/system-auth | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.4 Ensure password hashing algorithm is SHA-512 - password-auth"
      info        : "The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm). All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm.

Rationale:

The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.

Note that these changes only apply to accounts configured on the local system."
      solution    : "Set password hashing algorithm to sha512.
Run the following script to dd or modify the pam_unix.so lines in the password-auth and system-auth files to include the sha512 option:

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -z $(grep -E '^\s*password\s+sufficient\s+pam_unix.so\s+.*sha512\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+sufficient\s+pam_unix.so\s+)(.*)$/\1\2 sha512/' $PTF
done
authselect apply-changes

Additional Information:

Additional module options may be set, recommendation only covers those listed here.

If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID's be immediately expired and forced to change their passwords on next login. To accomplish that, the following commands can be used. Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems.

# awk -F: '( $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $1 != 'nfsnobody' ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0"
      reference   : "800-171|3.5.10,800-171|3.13.11,800-53|IA-5(1)(c),800-53|SC-13,CIS_Recommendation|5.4.4,CSCv7|16.4,CSF|PR.AC-1,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|IA-5(1)(c),ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T5.2.3,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY6,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/password-auth"
      regex       : "^[\\s]*password[\\s]+sufficient[\\s]+pam_unix\\.so[\\s]*"
      expect      : "sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.4 Ensure password hashing algorithm is SHA-512 - system-auth"
      info        : "The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm). All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm.

Rationale:

The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.

Note that these changes only apply to accounts configured on the local system."
      solution    : "Set password hashing algorithm to sha512.
Run the following script to dd or modify the pam_unix.so lines in the password-auth and system-auth files to include the sha512 option:

CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/)
for FN in system-auth password-auth; do
[[ -z $(grep -E '^\s*password\s+sufficient\s+pam_unix.so\s+.*sha512\s*.*$' $PTF) ]] && sed -ri 's/^\s*(password\s+sufficient\s+pam_unix.so\s+)(.*)$/\1\2 sha512/' $PTF
done
authselect apply-changes

Additional Information:

Additional module options may be set, recommendation only covers those listed here.

If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID's be immediately expired and forced to change their passwords on next login. To accomplish that, the following commands can be used. Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems.

# awk -F: '( $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $1 != 'nfsnobody' ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0"
      reference   : "800-171|3.5.10,800-171|3.13.11,800-53|IA-5(1)(c),800-53|SC-13,CIS_Recommendation|5.4.4,CSCv7|16.4,CSF|PR.AC-1,CSF|PR.DS-5,ISO/IEC-27001|A.10.1.1,ITSG-33|IA-5(1)(c),ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T5.2.3,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY6,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/system-auth"
      regex       : "^[\\s]*password[\\s]+sufficient[\\s]+pam_unix\\.so[\\s]*"
      expect      : "sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.1 Ensure password expiration is 365 days or less - login.defs"
      info        : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity."
      solution    : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 5th field should be 365 or less for all users with a password.

Note: A value of -1 will disable password expiration. Additionally the password expiration must be greater than the minimum days between password changes or users will be unable to change their password."
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIP|007-6-R5.6,CIS_Recommendation|5.5.1.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MAX_DAYS[\\s]"
      expect      : "^[\\s]*PASS_MAX_DAYS[\\s]+([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-5])[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.1 Ensure password expiration is 365 days or less - users"
      info        : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity."
      solution    : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 5th field should be 365 or less for all users with a password.

Note: A value of -1 will disable password expiration. Additionally the password expiration must be greater than the minimum days between password changes or users will be unable to change their password."
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIS_Recommendation|5.5.1.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/echo 'Username, Maximum number of days between password change'; output=\"\"; failures=0; for i in $(/usr/bin/egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" | /usr/bin/grep 'Maximum number of days between password change' | cut -d: -f2 | /usr/bin/awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -le 365 ] && [ $change_date -ge 1 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.2 Ensure minimum days between password changes is 7 or more - login.defs"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 7 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 7 in /etc/login.defs :

PASS_MIN_DAYS 7

Modify user parameters for all users with a password set to match:

# chage --mindays 7 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 4th field should be 7 or more for all users with a password."
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIP|007-6-R5.6,CIS_Recommendation|5.5.1.2,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/login.defs"
      regex       : "^[\\s\\t]*(?i)PASS_MIN_DAYS(?-i)[\\s]+"
      expect      : "(?i)PASS_MIN_DAYS(?-i)[\\s]+([7-9]|[1-9][0-9]+)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.2 Ensure minimum days between password changes is 7 or more - users"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 7 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 7 in /etc/login.defs :

PASS_MIN_DAYS 7

Modify user parameters for all users with a password set to match:

# chage --mindays 7 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 4th field should be 7 or more for all users with a password."
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIS_Recommendation|5.5.1.2,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/echo 'Username, Minimum number of days between password change'; output=\"\"; failures=0; for i in $(/usr/bin/egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" | /usr/bin/grep 'Minimum number of days between password change' | cut -d: -f2 | /usr/bin/awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -ge 7 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.3 Ensure password expiration warning days is 7 or more - login.defs"
      info        : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution    : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 6th field should be 7 or more for all users with a password."
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),CIP|007-6-R5.6,CIS_Recommendation|5.5.1.3,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,PCI-DSSv3.1|8.2.4,PCI-DSSv3.2|8.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_WARN_AGE\\s+"
      expect      : "^[\\s]*PASS_WARN_AGE\\s+([7-9]|[1-9][0-9]+)\\s*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.3 Ensure password expiration warning days is 7 or more - users"
      info        : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution    : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 6th field should be 7 or more for all users with a password."
      reference   : "800-53|AC-9(3),CIS_Recommendation|5.5.1.3,CSCv7|4.4,ITSG-33|AC-9(3),LEVEL|1A,NESA|T5.5.1,TBA-FIISB|45.2.4"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/echo 'Username, Number of days of warning before password expires'; output=\"\"; failures=0; for i in $(/usr/bin/egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" | /usr/bin/grep 'Number of days of warning before password expires' | cut -d: -f2 | /usr/bin/awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -ge 7 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.4 Ensure inactive password lock is 30 days or less - useradd"
      info        : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution    : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 7th field should be 30 or less for all users with a password.

Note: A value of -1 would disable this setting."
      reference   : "800-171|3.1.1,800-53|AC-2(3),CIP|004-6-R5,CIS_Recommendation|5.5.1.4,CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv6|16.1,CSCv6|16.6,CSCv7|4.4,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,PCI-DSSv3.1|8.1.4,PCI-DSSv3.2|8.1.4,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/default/useradd"
      regex       : "^[\\s]*INACTIVE[\\s]*=[\\s]*"
      expect      : "^[\\s]*INACTIVE[\\s]*=[\\s]*(30|[1-2][0-9]|[1-9])[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.4 Ensure inactive password lock is 30 days or less - users"
      info        : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution    : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>

Additional Information:

You can also check this setting in /etc/shadow directly. The 7th field should be 30 or less for all users with a password.

Note: A value of -1 would disable this setting."
      reference   : "800-171|3.1.1,800-53|AC-2(3),CIS_Recommendation|5.5.1.4,CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|4.4,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/echo 'Username, Inactive password days'; output=\"\"; failures=0; for i in $(/usr/bin/egrep \"^[^:]+:[^!*]\" /etc/shadow | cut -d: -f1); do password_expires=$(/usr/bin/egrep \"^\\b$i\\b\" /etc/shadow | cut -d: -f7 | tr -d '\\n'); if [ -z \"$password_expires\" ]; then password_expires=-1; fi; output=\"${i}, ${password_expires}\"; if [ $password_expires -le 30 ] && [ $password_expires -ge 1 ]; then status=\"Pass\"; else status=\"Fail\"; failures=$((failures+1)); fi; echo \"${output} - ${status}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.5 Ensure all users last password change date is in the past"
      info        : "All users should have a password change date in the past.

Rationale:

If a users recorded password change date is in the future then they could bypass any set password expiration."
      solution    : "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate."
      reference   : "800-171|3.5.2,800-53|IA-5f.,CIS_Recommendation|5.5.1.5,CN-L3|8.1.4.1(a),CSCv7|4.4,CSF|PR.AC-1,ITSG-33|IA-5f.,LEVEL|1A,NESA|T5.5.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "echo 'Username, Current Days, Last Password Change Days'; output=\"\"; failures=0; for i in $(cut -d: -f1 < /etc/shadow); do now=$(($(date +%s) / 86400)); change_date=$(chage --list \"$i\" | /usr/bin/grep 'Last password change' | cut -d: -f2 | /usr/bin/awk '{$1=$1};1'); if [[ $change_date != \"never\" ]]; then epoch_change_date=$(($(date -d \"${change_date}\" +%s) / 86400)); else epoch_change_date='Never'; fi; output=\"${i}, ${now}, ${epoch_change_date}\"; if [[ $epoch_change_date < $now ]]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; ((failures++)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.2 Ensure system accounts are secured - 'login shell'"
      info        : "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.

Rationale:

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands."
      solution    : "Run the commands appropriate for your distribution:
Set the shell for any accounts returned by the audit to nologin:

# usermod -s $(which nologin) <user>

Lock any non root accounts returned by the audit:

# usermod -L <user>

The following command will set all system accounts to a non login shell:

awk -F: '($1!='root' && $1!='sync' && $1!='shutdown' && $1!='halt' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $7!='''$(which nologin)''' && $7!='/bin/false') {print $1}' /etc/passwd | while read user do usermod -s $(which nologin) $user done

The following command will automatically lock not root system accounts:

awk -F: '($1!='root' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!='L' && $2!='LK') {print $1}' | while read user do usermod -L $user done

Additional Information:

The root, sync, shutdown, and halt users are exempted from requiring a non-login shell."
      reference   : "800-171|3.1.5,800-53|AC-6.,CIS_Recommendation|5.5.2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|16,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~\/^\\+\/ && $3<'\"$(/usr/bin/awk '\/^[\\s]*UID_MIN\/{print $2}' /etc/login\.defs)\"' && $7!=\"'\"$(which nologin)\"'\" && $7!=\"\/bin\/false\" && $7 != \"/sbin/nologin\") {print}' /etc/passwd | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.2 Ensure system accounts are secured - 'lock system accounts'"
      info        : "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.

Rationale:

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands."
      solution    : "Run the commands appropriate for your distribution:
Set the shell for any accounts returned by the audit to nologin:

# usermod -s $(which nologin) <user>

Lock any non root accounts returned by the audit:

# usermod -L <user>

The following command will set all system accounts to a non login shell:

awk -F: '($1!='root' && $1!='sync' && $1!='shutdown' && $1!='halt' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $7!='''$(which nologin)''' && $7!='/bin/false') {print $1}' /etc/passwd | while read user do usermod -s $(which nologin) $user done

The following command will automatically lock not root system accounts:

awk -F: '($1!='root' && $1!~/^\+/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!='L' && $2!='LK') {print $1}' | while read user do usermod -L $user done

Additional Information:

The root, sync, shutdown, and halt users are exempted from requiring a non-login shell."
      reference   : "800-171|3.1.5,800-53|AC-6(1),CIS_Recommendation|5.5.2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|16,CSF|PR.AC-4,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(1),LEVEL|1A,NESA|T5.1.1,NESA|T5.4.4,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|VL3b,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!=\"root\" && $1!~\/^\\+\/ && $3<'\"$(/usr/bin/awk '\/^[\\s]*UID_MIN\/{print $2}' /etc/login\.defs)\"') {print $1}' /etc/passwd | /usr/bin/xargs -I '{}' /usr/bin/passwd -S '{}' | /usr/bin/awk '($2!=\"L\" && $2!=\"LK\") {print $1}' | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.3 Ensure default user shell timeout is 900 seconds or less - bashrc"
      info        : "TMOUT is an environmental setting that determines the timeout of a shell in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout.

readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.

export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bashrc - System wide version of .bashrc. In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session."
      solution    : "Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bashrc

TMOUT configuration examples:
As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT

As a single line:

readonly TMOUT=900 ; export TMOUT




Additional Information:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a timeout exist for other shells not covered here.

Ensure that the timeout conforms to your local policy."
      reference   : "800-171|3.1.11,800-53|AC-12.,CIS_Recommendation|5.5.3,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "output1=\"\" output2=\"\"; [ -f /etc/bashrc ] && BRC=\"/etc/bashrc\"; for f in \"$BRC\" /etc/profile /etc/profile.d/*.sh ; do /usr/bin/grep -Pq '^\\s*([^#]+\\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\b' \"$f\" && /usr/bin/grep -Pq '^\\s*([^#]+;\\s*)?readonly\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\b' \"$f\" && /usr/bin/grep -Pq '^\\s*([^#]+;\\s*)?export\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\b' \"$f\" && output1=\"$f\"; done; /usr/bin/grep -Pq '^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' /etc/profile /etc/profile.d/*.sh \"$BRC\" && output2=$(/usr/bin/grep -Ps '^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' /etc/profile /etc/profile.d/*.sh $BRC); if [ -n \"$output1\" ] && [ -z \"$output2\" ]; then echo -e \"\\nPASSED\\n\\nTMOUT is configured in: \\\"$output1\\\"\\n\"; else [ -z \"$output1\" ] && echo -e \"\\nFAILED\\n\\nTMOUT is not configured\\n\"; [ -n \"$output2\" ] && echo -e \"\\nFAILED\\n\\nTMOUT is incorrectly configured in: \\\"$output2\\\"\\n\"; fi"
      expect      : "^TMOUT is configured in: "
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.4 Ensure default group for the root account is GID 0"
      info        : "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.

Rationale:

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users."
      solution    : "Run the following command to set the root user default group to GID 0 :

# usermod -g 0 root"
      reference   : "800-171|3.1.1,800-53|AC-2c.,CIS_Recommendation|5.5.4,CN-L3|7.1.3.2(d),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2c.,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/passwd"
      regex       : "^root:"
      expect      : "^root:x:0:0:"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.5 Ensure default user umask is 027 or more restrictive - default user umask"
      info        : "The user file-creation mode mask (umask) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either octal or Symbolic values:

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o. The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

The default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File. The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File, ( .bash_profile or .bashrc), in their home directory.




Setting the default umask:

pam_umask module:

will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.

umask=<mask> value in the /etc/login.defs file is interpreted as Octal

Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):

will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid, and username is the same as the <primary group name>

userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

System Wide Shell Configuration File:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bashrc - System wide version of .bashrc. In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc.

User Shell Configuration Files:

~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system."
      solution    : "Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all umask entries to follow local site policy. Any remaining entries should be: umask 027, umask u=rwx,g=rx,o= or more restrictive.
Configure umask in one of the following files:

a file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bashrc

Example:

# vi /etc/profile.d/set_umask.sh

umask 027

Run the following command and remove or modify the umask of any returned files:

# grep -RPi '(^|^[^#]*)\s*umask\s+([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b|[0-7][01][0-7]\b|[0-7][0-7][0-6]\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\b)' /etc/login.defs /etc/profile* /etc/bashrc*

Follow one of the following methods to set the default user umask:
Edit /etc/login.defs and edit the UMASK and USERGROUPS_ENAB lines as follows:

UMASK 027

USERGROUPS_ENAB no

Edit the files /etc/pam.d/password-auth and /etc/pam.d/system-auth and add or edit the following:

session     optional      pam_umask.so

OR Configure umask in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bashrc

Example: /etc/profile.d/set_umask.sh

umask 027

Note: this method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Default Value:

UMASK 022

Additional Information:

Other methods of setting a default user umask exist

If other methods are in use in your environment they should be audited

The default user umask can be overridden with a user specific umask

The user creating the directories or files has the discretion of changing the permissions:

Using the chmod command

Setting a different default umask by adding the umask command into a User Shell Configuration File, (.bashrc), in their home directory

Manually changing the umask for the duration of a login session by running the umask command"
      reference   : "800-171|3.1.1,800-53|AC-3(4)(d),CIS_Recommendation|5.5.5,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "passing=\"\"; /usr/bin/grep -Piq '^\\s*UMASK\\s+(0[0-7][2-7]7|[0-7][2-7]7)\\b' /etc/login.defs && /usr/bin/grep -Pqi '^\\s*USERGROUPS_ENAB\\s*\"?no\"?\\b' /etc/login.defs && /usr/bin/grep -Pq '^\\s*session\\s+(optional|requisite|required)\\s+pam_umask\\.so\\b' /etc/pam.d/common-session && passing=true; /usr/bin/grep -REiq '^\\s*UMASK\\s+\\s*(0[0-7][2-7]7|[0-7][2-7]7|u=(r?|w?|x?)(r?|w?|x?)(r?|w?|x?),g=(r?x?|x?r?),o=)\\b' /etc/profile* /etc/bashrc* && passing=true; [ \"$passing\" = true ] && echo \"Default user umask is set\" || echo \"Default user umask not found or invalid\""
      expect      : "Default user umask is set"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.5 Ensure default user umask is 027 or more restrictive - less restrictive system wide umask"
      info        : "The user file-creation mode mask (umask) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either octal or Symbolic values:

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o. The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

The default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File. The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File, ( .bash_profile or .bashrc), in their home directory.




Setting the default umask:

pam_umask module:

will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.

umask=<mask> value in the /etc/login.defs file is interpreted as Octal

Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):

will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid, and username is the same as the <primary group name>

userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

System Wide Shell Configuration File:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bashrc - System wide version of .bashrc. In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc.

User Shell Configuration Files:

~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system."
      solution    : "Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all umask entries to follow local site policy. Any remaining entries should be: umask 027, umask u=rwx,g=rx,o= or more restrictive.
Configure umask in one of the following files:

a file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bashrc

Example:

# vi /etc/profile.d/set_umask.sh

umask 027

Run the following command and remove or modify the umask of any returned files:

# grep -RPi '(^|^[^#]*)\s*umask\s+([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b|[0-7][01][0-7]\b|[0-7][0-7][0-6]\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\b)' /etc/login.defs /etc/profile* /etc/bashrc*

Follow one of the following methods to set the default user umask:
Edit /etc/login.defs and edit the UMASK and USERGROUPS_ENAB lines as follows:

UMASK 027

USERGROUPS_ENAB no

Edit the files /etc/pam.d/password-auth and /etc/pam.d/system-auth and add or edit the following:

session     optional      pam_umask.so

OR Configure umask in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bashrc

Example: /etc/profile.d/set_umask.sh

umask 027

Note: this method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Default Value:

UMASK 022

Additional Information:

Other methods of setting a default user umask exist

If other methods are in use in your environment they should be audited

The default user umask can be overridden with a user specific umask

The user creating the directories or files has the discretion of changing the permissions:

Using the chmod command

Setting a different default umask by adding the umask command into a User Shell Configuration File, (.bashrc), in their home directory

Manually changing the umask for the duration of a login session by running the umask command"
      reference   : "800-171|3.1.1,800-53|AC-3(4)(d),CIS_Recommendation|5.5.5,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv7|5.1,CSF|PR.AC-4,CSF|PR.PT-3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/grep -RPi '(^|^[^#]*)\\s*umask\\s+([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b|[0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\\b)' /etc/login.defs /etc/profile* /etc/bashrc* | /usr/bin/awk '{print} END {if (NR == 0) print \"No files returned\"; else print \"fail\"}'"
      expect      : "No files returned"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "5.6 Ensure root login is restricted to system console"
      info          : "The file /etc/securetty contains a list of valid terminals that may be logged in directly as root.

Rationale:

Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined."
      solution      : "Remove entries for any consoles that are not in a physically secure location."
      reference     : "800-171|3.1.5,800-53|AC-6(3),CIS_Recommendation|5.6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.1.2,ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(3),LEVEL|1M,NESA|T5.1.1,NESA|T5.5.4,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/grep -v \"console\" /etc/securetty | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect        : "none"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "5.7 Ensure access to the su command is restricted - wheel group contains root"
      info          : "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo , which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su , the su command will only allow users in the wheel group to execute su .

Rationale:

Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program."
      solution      : "Add the following line to the /etc/pam.d/su file:

auth required pam_wheel.so use_uid

Create a comma separated list of users in the wheel statement in the /etc/group file:

wheel:x:<GID>:root,<user list>

Example:

wheel:x:10:root,user1,user2,user3"
      reference     : "800-171|3.1.1,800-53|AC-2c.,CIS_Recommendation|5.7,CN-L3|7.1.3.2(d),CSCv7|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2c.,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/grep ^wheel: /etc/group"
# Note: Variable @WHEEL_GROUP_USERS@ replaced with "root" in field "expect".
      expect        : "^wheel:x:10:(root|[\\s]*$)"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.7 Ensure access to the su command is restricted - pam_wheel.so"
      info        : "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo , which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su , the su command will only allow users in the wheel group to execute su .

Rationale:

Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program."
      solution    : "Add the following line to the /etc/pam.d/su file:

auth required pam_wheel.so use_uid

Create a comma separated list of users in the wheel statement in the /etc/group file:

wheel:x:<GID>:root,<user list>

Example:

wheel:x:10:root,user1,user2,user3"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|5.7,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/pam.d/su"
      regex       : "^[\\s]*auth[\\s]+required[\\s]+pam_wheel\\.so[\\s]+use_uid[\\s]*$"
      expect      : "^[\\s]*auth[\\s]+required[\\s]+pam_wheel\\.so[\\s]+use_uid[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.2 Ensure permissions on /etc/passwd are configured"
      info        : "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

Rationale:

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following command to set permissions on /etc/passwd:

# chown root:root /etc/passwd
# chmod 644 /etc/passwd

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.5.2,800-53|IA-5(6),CIS_Recommendation|6.1.2,CSCv6|3.1,CSCv7|16.4,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/passwd"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.3 Ensure permissions on /etc/passwd- are configured"
      info        : "The /etc/passwd- file contains backup user account information.

Rationale:

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/passwd-:

# chown root:root /etc/passwd-
# chmod chmod u-x,go-wx /etc/passwd-

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.1.3,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/passwd-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.4 Ensure permissions on /etc/shadow are configured"
      info        : "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/shadow:

# chown root:root /etc/shadow
# chmod 0000 /etc/shadow

Default Value:

Access: (0000/----------) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.5.2,800-53|IA-5(6),CIS_Recommendation|6.1.4,CSCv6|3.1,CSCv7|16.4,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/shadow"
      owner       : "root"
      mask        : "777"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.5 Ensure permissions on /etc/shadow- are configured"
      info        : "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/shadow- :

# chown root:root /etc/shadow-
# chmod 0000 /etc/shadow-

Default Value:

Access: (0000/----------) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.1.5,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/shadow-"
      owner       : "root"
      mask        : "777"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.6 Ensure permissions on /etc/gshadow are configured"
      info        : "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/gshadow

# chown root:root /etc/gshadow
# chmod 0000 /etc/gshadow

Default Value:

Access: (0000/----------) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.5.2,800-53|IA-5(6),CIS_Recommendation|6.1.6,CSCv6|3.1,CSCv7|16.4,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/gshadow"
      owner       : "root"
      mask        : "777"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.7 Ensure permissions on /etc/gshadow- are configured"
      info        : "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/gshadow- :

# chown root:root /etc/gshadow-
# chmod 0000 /etc/gshadow-

Default Value:

Access: (0000/----------) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.1.7,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/gshadow-"
      owner       : "root"
      mask        : "777"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.8 Ensure permissions on /etc/group are configured"
      info        : "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

Rationale:

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/group:

# chown root:root /etc/group
# chmod u-x,g-wx,o-wx /etc/group

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.5.2,800-53|IA-5(6),CIS_Recommendation|6.1.8,CSCv6|3.1,CSCv7|16.4,CSF|PR.AC-1,ITSG-33|IA-5(6),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|26.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/group"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.9 Ensure permissions on /etc/group- are configured"
      info        : "The /etc/group- file contains a backup list of all the valid groups defined in the system.

Rationale:

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to set owner, group, and permissions on /etc/group-:

# chown root:root /etc/group-
# chmod u-x,go-wx /etc/group-

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.1.9,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,PCI-DSSv3.1|2.2.4,PCI-DSSv3.2|2.2.4,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/group-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.1.10 Ensure no world writable files exist"
      info        : "Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the chmod(2) man page for more information.

Rationale:

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity."
      solution    : "Removing write access for the 'other' category ( chmod o-w <filename> ) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file."
      reference   : "800-171|3.1.5,800-53|AC-6.,CIS_Recommendation|6.1.10,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|13,CSCv7|5.1,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.1|7.1.2,PCI-DSSv3.2|7.1.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "find_world_writeable_files"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.11 Ensure no unowned files or directories exist"
      info        : "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-53|AC-16(3),CIS_Recommendation|6.1.11,CSCv7|13.2,CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16(3),LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "find_orphan_files"
      find_option : "nouser"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.12 Ensure no ungrouped files or directories exist"
      info        : "Sometimes when administrators delete users or groups from the system they neglect to remove all files owned by those users or groups.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-53|AC-16(3),CIS_Recommendation|6.1.12,CSCv7|13.2,CSF|PR.AC-4,ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16(3),LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "find_orphan_files"
      find_option : "nogroup"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.13 Audit SUID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Ensure that no rogue SUID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-171|3.1.5,800-53|AC-6(8),CIS_Recommendation|6.1.13,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "find_suid_sgid_files"
      severity    : MEDIUM
    </item>

    <item>
      system      : "Linux"
      description : "6.1.14 Audit SGID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Ensure that no rogue SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-171|3.1.5,800-53|AC-6(8),CIS_Recommendation|6.1.14,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "find_suid_sgid_files"
      severity    : MEDIUM
    </item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "6.2.1 Ensure password fields are not empty"
      info          : "An account with an empty password field means that anybody may log in as that user without providing a password.

Rationale:

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user."
      solution      : "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off."
      reference     : "800-171|3.5.7,800-53|IA-5(1)(a),CIP|007-6-R5.5,CIS_Recommendation|6.2.1,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSCv7|4.4,CSF|PR.AC-1,HIPAA|164.308(a)(5)(ii)(D),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|1A,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,PCI-DSSv3.1|8.2.3,PCI-DSSv3.2|8.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
      see_also      : "https://workbench.cisecurity.org/files/3366"
      cmd           : "/usr/bin/cat /etc/shadow | /usr/bin/awk -F : '($2 == \"\") { print $1 \" does not have a password.\"; flag++ } END { if(flag<1) print \"none\" }'"
      expect        : "none"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "6.2.2 Ensure no legacy '+' entries exist in /etc/passwd - + entries exist in /etc/passwd"
      info        : "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.

Rationale:

These entries may provide an avenue for attackers to gain privileged access on the system."
      solution    : "Remove any legacy '+' entries from /etc/passwd if they exist."
      reference   : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|6.2.2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/passwd"
      regex       : "^\\+[^:\\n\\r]*:"
      expect      : "^\\+[^:\\n\\r]*:"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.3 Ensure root PATH Integrity"
      info        : "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Rationale:

Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program."
      solution    : "Correct or justify any items discovered in the Audit step."
      reference   : "800-171|3.4.7,800-53|CM-7(2),CIS_Recommendation|6.2.3,CSCv6|8.4,CSCv7|5.1,CSF|PR.IP-1,CSF|PR.PT-3,ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "dot_in_root_path_variable"
    </item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "6.2.4 Ensure no legacy '+' entries exist in /etc/shadow - + entries exist in /etc/shadow"
      info        : "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.

Rationale:

These entries may provide an avenue for attackers to gain privileged access on the system."
      solution    : "Remove any legacy '+' entries from /etc/shadow if they exist."
      reference   : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|6.2.4,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/shadow"
      regex       : "^\\+[^:\\n\\r]*:"
      expect      : "^\\+[^:\\n\\r]*:"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "6.2.5 Ensure no legacy '+' entries exist in /etc/group - + entries exist in /etc/group"
      info        : "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.

Rationale:

These entries may provide an avenue for attackers to gain privileged access on the system."
      solution    : "Remove any legacy '+' entries from /etc/group if they exist."
      reference   : "800-171|3.5.1,800-53|IA-2.,CIS_Recommendation|6.2.5,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      file        : "/etc/group"
      regex       : "^\\+[^:\\n\\r]*:"
      expect      : "^\\+[^:\\n\\r]*:"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.6 Ensure root is the only UID 0 account"
      info        : "Any account with UID 0 has superuser privileges on the system.

Rationale:

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in recommendation 'Ensure access to the su command is restricted'."
      solution    : "Remove any users other than root with UID 0 or assign them a new UID if appropriate."
      reference   : "800-171|3.1.5,800-53|AC-6(5),CIS_Recommendation|6.2.6,CN-L3|8.1.10.6(a),CSCv6|5.1,CSCv7|5.1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "passwd_zero_uid"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.7 Ensure users' home directories permissions are 750 or more restrictive"
      info        : "While the system administrator can establish secure permissions for users' home directories, the users can easily override these.

Rationale:

Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution    : "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy.
The following script can be used to remove permissions is excess of 750 from users' home directories:

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {print $6}' /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      dirperm=$(stat -L -c '%A' '$dir')
      if [ '$(echo '$dirperm' | cut -c6)' != '-' ] || [ '$(echo '$dirperm' | cut -c8)' != '-' ] || [ '$(echo '$dirperm' | cut -c9)' != '-' ] || [ '$(echo '$dirperm' | cut -c10)' != '-' ]; then
         chmod g-w,o-rwx '$dir'
      fi
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.7,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) {print $1 \" \" $6}' /etc/passwd | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"User: \\\"$user\\\" home directory: \\\"$dir\\\" doesn't exist\"; else dirperm=$(stat -L -c \"%A\" \"$dir\"); if [ \"$(echo \"$dirperm\" | cut -c6)\" != \"-\" ] || [ \"$(echo \"$dirperm\" | cut -c8)\" != \"-\" ] || [ \"$(echo \"$dirperm\" | cut -c9)\" != \"-\" ] || [ \"$(echo \"$dirperm\" | cut -c10)\" != \"-\" ]; then echo \"User: \\\"$user\\\" home directory: \\\"$dir\\\" has permissions: \\\"$(stat -L -c \"%a\" \"$dir\")\\\"\"; fi; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"All home directories have proper permissions\"}'"
      expect      : "All home directories have proper permissions"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.8 Ensure users own their home directories"
      info        : "The user home directory is space defined for the particular user to set local environment variables and to store personal files.

Rationale:

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory."
      solution    : "Change the ownership of any home directories that are not owned by the defined user to the correct user.
The following script will create missing home directories, set the owner, and set the permissions for interactive users' home directories:

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $1 ' ' $6 }' /etc/passwd | while read -r user dir; do
   if [ ! -d '$dir' ]; then
      echo 'User: \'$user\' home directory: \'$dir\' does not exist, creating home directory'
      mkdir '$dir'
      chmod g-w,o-rwx '$dir'
      chown '$user' '$dir'
   else
      owner=$(stat -L -c '%U' '$dir')
      if [ '$owner' != '$user' ]; then
         chmod g-w,o-rwx '$dir'
         chown '$user' '$dir'
      fi
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.8,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"User: \\\"$user\\\" home directory: \\\"$dir\\\" does not exist.\"; else owner=$(stat -L -c \"%U\" \"$dir\"); if [ \"$owner\" != \"$user\" ]; then echo \"User: \\\"$user\\\" home directory: \\\"$dir\\\" is owned by \\\"$owner\\\"\"; fi; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"All home directories have proper owners\" }'"
      expect      : "All home directories have proper owners"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.9 Ensure users' dot files are not group or world writable"
      info        : "While the system administrator can establish secure permissions for users' 'dot' files, the users can easily override these.

Rationale:

Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.
The following script will remove excessive permissions on dot files within interactive users' home directories.

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $6 }' /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      for file in '$dir'/.*; do
         if [ ! -h '$file' ] && [ -f '$file' ]; then
            fileperm=$(stat -L -c '%A' '$file')
            if [ '$(echo '$fileperm' | cut -c6)' != '-' ] || [ '$(echo '$fileperm' | cut -c9)' != '-' ]; then
               chmod go-w '$file'
            fi
         fi
      done
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.9,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ -d \"$dir\" ]; then for file in \"$dir\"/.*; do if [ ! -h \"$file\" ] && [ -f \"$file\" ]; then fileperm=$(stat -L -c \"%A\" \"$file\"); if [ \"$(echo \"$fileperm\" | cut -c6)\" != \"-\" ] || [ \"$(echo \"$fileperm\" | cut -c9)\" != \"-\" ]; then echo \"User: \\\"$user\\\" file: \\\"$file\\\" has permissions: \\\"$fileperm\\\"\"; fi; fi; done; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"All dot files have proper permissions\" }'"
      expect      : "All dot files have proper permissions"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.10 Ensure no users have .forward files"
      info        : "The .forward file specifies an email address to forward the user's mail to.

Rationale:

Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy.
The following script will remove .forward files from interactive users' home directories

#!/bin/bash

awk -F: '($1!~/(root|halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $6 }' /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      file='$dir/.forward'
      [ ! -h '$file' ] && [ -f '$file' ] && rm -r '$file'
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.10,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(root|halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ -d \"$dir\" ]; then file=\"$dir/.forward\"; if [ ! -h \"$file\" ] && [ -f \"$file\" ]; then echo \"User: \\\"$user\\\" file: \\\"$file\\\" exists\"; fi; fi; done | /usr/bin/awk '{print} END {if (NR == 0) print \"No .forward files found\"; else print \"fail\"}'"
      expect      : "No .forward files found"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.11 Ensure no users have .netrc files"
      info        : "The .netrc file contains data for logging into a remote host for file transfers via FTP.

Rationale:

The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy.
The following script will remove .netrc files from interactive users' home directories

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $6 }'  /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      file='$dir/.netrc'
      [ ! -h '$file' ] && [ -f '$file' ] && rm -f '$file'
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.11,CN-L3|8.1.10.6(d),CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(root|halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ -d \"$dir\" ]; then file=\"$dir/.netrc\"; if [ ! -h \"$file\" ] && [ -f \"$file\" ]; then echo \"User: \\\"$user\\\" file: \\\"$file\\\" exists\"; fi; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"No .netrc files found\" }'"
      expect      : "No .netrc files found"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.12 Ensure users' .netrc Files are not group or world accessible"
      info        : "While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these.

Rationale:

The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems.

If a .netrc file is required, and follows local site policy, it should have permissions of 600 or more restrictive."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy.
The following script will remove .netrc files from interactive users' home directories

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $6 }'  /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      file='$dir/.netrc'
      [ ! -h '$file' ] && [ -f '$file' ] && rm -f '$file'
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.12,CN-L3|8.1.10.6(d),CSCv7|14.6,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ -d \"$dir\" ]; then file=\"$dir/.netrc\"; if [ ! -h \"$file\" ] && [ -f \"$file\" ]; then if stat -L -c \"%A\" \"$file\" | cut -c4-10 | /usr/bin/grep -Pq '[^-]+'; then echo \"FAILED: User: \\\"$user\\\" file: \\\"$file\\\" exists with permissions: \\\"$(stat -L -c \"%a\" \"$file\")\\\", remove file or excessive permissions\"; else echo \"WARNING: User: \\\"$user\\\" file: \\\"$file\\\" exists with permissions: \\\"$(stat -L -c \"%a\" \"$file\")\\\", remove file unless required\"; fi; fi; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"All .netrc files are not group or world accessible\" }'"
      expect      : "All .netrc files are not group or world accessible"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.13 Ensure no users have .rhosts files"
      info        : "While no .rhosts files are shipped by default, users can easily create them.

Rationale:

This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf . Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf , they may have been brought over from other systems and could contain information useful to an attacker for those other systems."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .rhosts files and determine the action to be taken in accordance with site policy.
The following script will remove .rhosts files from interactive users' home directories

#!/bin/bash

awk -F: '($1!~/(root|halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $6 }' /etc/passwd | while read -r dir; do
   if [ -d '$dir' ]; then
      file='$dir/.rhosts'
      [ ! -h '$file' ] && [ -f '$file' ] && rm -r '$file'
   fi
done"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.13,CN-L3|8.1.10.6(d),CSCv7|16.4,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(root|halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ -d \"$dir\" ]; then file=\"$dir/.rhosts\"; if [ ! -h \"$file\" ] && [ -f \"$file\" ]; then echo \"User: \\\"$user\\\" file: \\\"$file\\\" exists\"; fi; fi; done | /usr/bin/awk '{ print } END { if (NR==0) print \"No .rhosts files found\" }'"
      expect      : "No .rhosts files found"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.14 Ensure all groups in /etc/passwd exist in /etc/group"
      info        : "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group .

Rationale:

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed."
      solution    : "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found."
      reference   : "800-171|3.1.1,800-53|AC-2c.,CIS_Recommendation|6.2.14,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2c.,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "passwd_invalid_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.15 Ensure no duplicate UIDs exist"
      info        : "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Rationale:

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,CIS_Recommendation|6.2.15,CN-L3|8.1.4.1(a),CSCv7|16,CSF|PR.AC-1,ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "passwd_duplicate_uid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.16 Ensure no duplicate GIDs exist"
      info        : "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

Rationale:

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.

Additional Information:

You can also use the grpck command to check for other inconsistencies in the /etc/group file."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,CIS_Recommendation|6.2.16,CN-L3|8.1.4.1(a),CSCv7|16,CSF|PR.AC-1,ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "group_duplicate_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.17 Ensure no duplicate user names exist"
      info        : "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

Rationale:

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd . For example, if 'test4' has a UID of 1000 and a subsequent 'test4' entry has a UID of 2000, logging in as 'test4' will use UID 1000. Effectively, the UID is shared, which is a security problem."
      solution    : "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,CIS_Recommendation|6.2.17,CN-L3|8.1.4.1(a),CSCv7|16,CSF|PR.AC-1,ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "passwd_duplicate_username"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.18 Ensure no duplicate group names exist"
      info        : "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

Rationale:

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group . Effectively, the GID is shared, which is a security problem."
      solution    : "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs."
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,CIS_Recommendation|6.2.18,CN-L3|8.1.4.1(a),CSCv7|16,CSF|PR.AC-1,ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      name        : "group_duplicate_name"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.19 Ensure shadow group is empty - /etc/passwd"
      info        : "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Rationale:

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts."
      solution    : "Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.19,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: -v GID=\"$(/usr/bin/awk -F: '($1==\"shadow\") {print $3}' /etc/group)\" '($4==GID) {print $1}' /etc/passwd | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"'}"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.19 Ensure shadow group is empty - /etc/group"
      info        : "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Rationale:

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts."
      solution    : "Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>"
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.19,CN-L3|8.1.10.6(d),CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1==\"shadow\") {print $NF}' /etc/group | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"'}"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.20 Ensure all users' home directories exist"
      info        : "Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Rationale:

If the user's home directory does not exist or is unassigned, the user will be placed in '/' and will not be able to write any files or have local environment variables set."
      solution    : "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a home directory as appropriate.
The following script will create a home directory for users with an interactive shell whose home directory doesn't exist:

#!/bin/bash

awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $1 ' ' $6 }' /etc/passwd | while read -r user dir; do
   if [ ! -d '$dir' ]; then
      mkdir '$dir'
      chmod g-w,o-wrx '$dir'
      chown '$user' '$dir'
   fi
done

Additional Information:

The audit script checks all users with interactive shells except halt, sync, shutdown, and nfsnobody."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.2.20,CN-L3|8.1.10.6(d),CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3366"
      cmd         : "/usr/bin/awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) { print $1 \" \" $6 }' /etc/passwd | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"User: \\\"$user\\\" home directory: \\\"$dir\\\" does not exist.\"; fi; done | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"'}"
      expect      : "^none"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Red_Hat_EL8_Server_L1_v1.0.1.audit from CIS Red Hat Enterprise Linux 8 Benchmark v1.0.1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/3366"
    </report>
  </else>
</if>

</check_type>
