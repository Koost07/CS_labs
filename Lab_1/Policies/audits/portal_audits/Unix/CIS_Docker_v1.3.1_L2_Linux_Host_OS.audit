#
# This script is Copyright (C) 2004-2021 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2021/07/20 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Docker Benchmark v1.3.1
#
#<ui_metadata>
#<display_name>CIS Docker v1.3.1 L2 Linux Host OS</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Docker L2 Linux Host OS</name>
#  <version>1.3.1</version>
#  <link>https://workbench.cisecurity.org/files/3353</link>
#</spec>
#<labels>unix,cis,docker,agent</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7,CIS_Recommendation</benchmark_refs>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check if this is a Docker Vessel/Host"
      cmd         : "/usr/bin/docker info"
      expect      : "Containers"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Docker_v1.3.1_L2_Linux_Host_OS.audit from CIS Docker Benchmark v1.3.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.4 Ensure auditing is configured for Docker files and directories - /run/containerd"
      info        : "Audit /run/containerd.

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behaviour depends on some key files and directories. /run/containerd is one such directory. As it holds all the information about containers it should be audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /run/containerd directory.
    For example,
    Add the line as below to the /etc/audit/audit.rules file:

    -a exit,always -F path=/run/containerd -F perm=war -k docker

    Then, restart the audit daemon using the following command

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.4,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /run/containerd"
      expect      : "-w /run/containerd -p rwa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.5 Ensure auditing is configured for Docker files and directories - /var/lib/docker"
      info        : "Audit /var/lib/docker.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behaviour depends on some key files and directories. /var/lib/docker is one such directory. As it holds all the information about containers it should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /var/lib/docker directory.
For example,
Add the line as below to the /etc/audit/audit.rules file:

-a exit,always -F path=/var/lib/docker -F perm=war -k docker

Then, restart the audit daemon using the following command

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.5,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /var/lib/docker"
      expect      : "-w /var/lib/docker -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "2.1 Run the Docker daemon as a non-root user, if possible"
      info        : "Rootless mode executes the Docker daemon and containers inside a user namespace, with both the daemon and the container are running without root privileges.

    Rationale:

    Rootless mode allows running the Docker daemon and containers as a non-root user to mitigate potential vulnerabilities in the daemon and the container runtime.

    Impact:

    There are multiple prerequisites depending on which distribution that is in use, and also known limitations regarding networking and resource limitation.

    Running in rootless mode also changes the location of any configuration files in use, including all containers using the daemon."
      solution    : "Follow the current Docker documentation on how to install the Docker daemon as a non-root user.

    Default Value:

    The Docker daemon is running as the root user by default."
      reference   : "800-171|3.1.5,800-53|AC-6.,CIS_Recommendation|2.1,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4,CSF|PR.AC-4,CSF|PR.DS-5,ITSG-33|AC-6,LEVEL|2M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "ps -fe | grep 'dockerd' | grep 'root' | awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "^none$"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Docker_v1.3.1_L2_Linux_Host_OS.audit from CIS Docker Benchmark v1.3.1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/3353"
    </report>
  </else>
</if>

</check_type>
