#
# This script is Copyright (C) 2004-2021 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2021/07/20 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Docker Benchmark v1.3.1
#
#<ui_metadata>
#<display_name>CIS Docker v1.3.1 L1 Linux Host OS</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Docker L1 Linux Host OS</name>
#  <version>1.3.1</version>
#  <link>https://workbench.cisecurity.org/files/3353</link>
#</spec>
#<labels>unix,cis,docker,agent</labels>
#<benchmark_refs>LEVEL,CSCv6,CSCv7,CIS_Recommendation</benchmark_refs>
#<variables>
#  <variable>
#    <name>DOCKER_VERSION</name>
#    <default>19.[0-9]+.[0-9]+</default>
#    <description>Swarm Manager Nodes</description>
#    <info>The number of swarm manager nodes configured.</info>
#  </variable>
#  <variable>
#    <name>DOCKER_GROUP_USERS</name>
#    <default>none</default>
#    <description>Docker Group User Accounts</description>
#    <info>List of user accounts in the docker group</info>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check if this is a Docker Vessel/Host"
      cmd         : "/usr/bin/docker info"
      expect      : "Containers"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Docker_v1.3.1_L1_Linux_Host_OS.audit from CIS Docker Benchmark v1.3.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "1.1.1 Ensure a separate partition for containers has been created"
      info        : "All Docker containers and their data and metadata is stored under /var/lib/docker directory. By default, /var/lib/docker should be mounted under either the / or /var partitions dependent on how the Linux operating system in use is configured.

Rationale:

Docker depends on /var/lib/docker as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.

Impact:

None."
      solution    : "For new installations, you should create a separate partition for the /var/lib/docker mount point. For systems which have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.

Default Value:

By default, /var/lib/docker is mounted under the / or /var partitions dependent on how the OS is configured."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|1.1.1,CN-L3|8.1.10.6(d),CSCv6|14,CSCv7|14,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      file        : "/proc/mounts"
      regex       : "^[\\s]*.*[\\s]+/var/lib/docker[\\s]"
      expect      : "^[\\s]*.*[\\s]+/var/lib/docker[\\s]"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.2 Ensure only trusted users are allowed to control Docker daemon"
      info        : "The Docker daemon currently requires access to the Docker socket which is, by default, owned by the user root and the group docker.

Rationale:

Docker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the / directory on your host to the container. The container would then be able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the docker group and subsequently start a container which maps the root / directory on the host.

Impact:

Provided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted."
      solution    : "You should remove any untrusted users from the docker group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.

Default Value:

Not Applicable"
      reference   : "800-171|3.1.7,800-53|AC-6(10),CIS_Recommendation|1.1.2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|5.1,CSCv7|4,CSF|PR.AC-4,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "getent group docker"
# Note: Variable @DOCKER_GROUP_USERS@ replaced with "none" in field "expect".
      expect      : "docker:.*?:.*?:none"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.3 Ensure auditing is configured for the Docker daemon"
      info        : "Audit all Docker daemon activities.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add rules for the Docker daemon.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /usr/bin/dockerd -k docker

Then, restart the audit daemon using the following command

systemctl restart auditd

Default Value:

By default, the Docker daemon is not audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.3,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/dockerd"
      expect      : "-w /usr/bin/dockerd -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.6 Ensure auditing is configured for Docker files and directories - /etc/docker"
      info        : "Audit /etc/docker.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, one of these being /etc/docker. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and as such it should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /etc/docker directory.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /etc/docker -k docker

Then restart the audit daemon. For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.6,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /etc/docker"
      expect      : "-w /etc/docker -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.7 Ensure auditing is configured for Docker files and directories - docker.service"
      info        : "Audit the docker.service if applicable.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories with docker.service being one such file. The docker.service file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "If the file exists, a rule for it should be added.
For example:
Add the line as below in /etc/audit/audit.rules file:

-w /usr/lib/systemd/system/docker.service -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file docker.service may not be present on the system."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.7,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/lib/systemd/system/docker.service"
      expect      : "-w /usr/lib/systemd/system/docker.service -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.8 Ensure auditing is configured for Docker files and directories - containerd.sock"
      info        : "Audit containerd.sock, if applicable.

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories with containerd.sock being one such file, and as this holds various parameters for the Docker daemon, it should be audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "If the file exists, you should add a rule for it.
    For example:
    Add the line below to the /etc/audit/audit.rules file:

    -w /run/containerd/containerd.sock -k docker

    Then restart the audit daemon.
    For example:

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited. The file containerd.sock may not be present, but if it is, it should be audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.8,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /run/containerd/containerd.sock"
      expect      : "-w /run/containerd/containerd.sock -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.9 Ensure auditing is configured for Docker files and directories - docker.socket"
      info        : "Audit docker.socket, if applicable.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories with docker.socket being one such file, and as this holds various parameters for the Docker daemon, it should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "If the file exists, you should add a rule for it.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /var/run/docker.sock -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file docker.socket may not be present, but if it is, it should be audited."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.9,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/lib/systemd/system/docker.socket"
      expect      : "-w /usr/lib/systemd/system/docker.socket -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.10 Ensure auditing is configured for Docker files and directories - /etc/default/docker"
      info        : "Audit /etc/default/docker, if applicable.

Rationale:

As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /etc/default/docker is one such file. It holds various parameters related to the Docker daemon and should therefore be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /etc/default/docker file.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /etc/default/docker -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file /etc/default/docker may not be present, and if so, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.10,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /etc/default/docker"
      expect      : "-w /etc/default/docker -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.11 Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json"
      info        : "Audit /etc/docker/daemon.json, if applicable.

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /etc/docker/daemon.json is one such file. This holds various parameters for the Docker daemon, and as such it should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /etc/docker/daemon.json file.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /etc/docker/daemon.json -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file /etc/docker/daemon.json may not exist on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.11,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /etc/docker/daemon.json"
      expect      : "-w /etc/docker/daemon.json -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.12 Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml"
      info        : "Audit /etc/containerd/config.toml if applicable

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges it is very important to audit its activities and usage. Its behavior depends on some key files and directories and /etc/containerd/config.toml is one such file as it contains various parameters. If present, it is important that it is audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for /etc/containerd/config.toml file.
    For example:
    Add the line below to the /etc/audit/audit.rules file:

    -w /etc/containerd/config.toml -k docker

    Then restart the audit daemon.
    For example:

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited. The file /etc/containerd/config.toml may not be present on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.12,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /etc/containerd/config.toml"
      expect      : "-w /etc/containerd/config.toml -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.13 Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker"
      info        : "Audit /etc/sysconfig/docker if applicable

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges it is very important to audit its activities and usage. Its behavior depends on some key files and directories and /etc/sysconfig/docker is one such file as it contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for /etc/sysconfig/docker file.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /etc/sysconfig/docker -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file /etc/sysconfig/docker may not be presemt on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.13,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /etc/sysconfig/docker"
      expect      : "-w /etc/sysconfig/docker -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.14 Ensure auditing is configured for Docker files and directories - /usr/bin/containerd"
      info        : "Audit /usr/bin/containerd if applicable.

Rationale:

As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /usr/bin/containerd is one such file and as such should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /usr/bin/containerd file.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /usr/bin/containerd -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file /usr/bin/containerd may not be present on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.14,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/containerd"
      expect      : "-w /usr/bin/containerd -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.15 Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim"
      info        : "Audit /usr/bin/containerd-shim if applicable.

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /usr/bin/containerd-shim is one such file and as such should be audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /usr/bin/containerd-shim file.
    For example:
    Add the line below to the /etc/audit/audit.rules file:

    -w /usr/bin/containerd-shim -k docker

    Then restart the audit daemon.
    For example:

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited. The file /usr/bin/containerd-shim may not be present on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.15,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/containerd-shim"
      expect      : "-w /usr/bin/containerd-shim -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.16 Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v1"
      info        : "Audit /usr/bin/containerd-shim-runc-v1 if applicable.

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /usr/bin/containerd-shim-runc-v1 is one such file and as such should be audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /usr/bin/containerd-shim-runc-v1 file.
    For example:
    Add the line below to the /etc/audit/audit.rules file:

    -w /usr/bin/containerd-shim-runc-v1 -k docker

    Then restart the audit daemon.
    For example:

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited. The file /usr/bin/containerd-shim-runc-v1 may not be present on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.16,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/containerd-shim-runc-v1"
      expect      : "-w /usr/bin/containerd-shim-runc-v1 -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.17 Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2"
      info        : "Audit /usr/bin/containerd-shim-runc-v2 if applicable.

    Rationale:

    As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /usr/bin/containerd-shim-runc-v2 is one such file and as such should be audited.

    Impact:

    Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for the /usr/bin/containerd-shim-runc-v2 file.
    For example:
    Add the line below to the /etc/audit/audit.rules file:

    -w /usr/bin/containerd-shim-runc-v2 -k docker

    Then restart the audit daemon.
    For example:

    systemctl restart auditd

    Default Value:

    By default, Docker related files and directories are not audited. The file /usr/bin/containerd-shim-runc-v2 may not be present on the system and in that case, this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.17,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/containerd-shim-runc-v2"
      expect      : "-w /usr/bin/containerd-shim-runc-v2 -p rwxa -k docker"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "1.1.18 Ensure auditing is configured for Docker files and directories - /usr/bin/runc"
      info        : "Audit /usr/bin/runc if applicable

Rationale:

As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. /usr/bin/runc is one such file, and as such it should be audited.

Impact:

Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition."
      solution    : "You should add a rule for /usr/bin/runc file.
For example:
Add the line below to the /etc/audit/audit.rules file:

-w /usr/bin/runc -k docker

Then restart the audit daemon.
For example:

systemctl restart auditd

Default Value:

By default, Docker related files and directories are not audited. The file /usr/bin/runc may not be present on the system and in that case this recommendation is not applicable."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,CIS_Recommendation|1.1.18,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|14.6,CSCv7|14.9,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "auditctl -l | grep /usr/bin/runc"
      expect      : "-w /usr/bin/runc -p rwxa -k docker"
    </custom_item>

    <report type:"WARNING">
      description : "1.2.1 Ensure the container host has been Hardened"
      info        : "A container host is able to run one or more containers. It is of utmost importance to harden the host to mitigate host security misconfiguration.

Rationale:

You should follow infrastructure security best practices and harden your host OS. Keeping the host system hardened will ensure that host vulnerabilities are mitigated. Not hardening the host system could lead to security exposures and breaches.

Impact:

None.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "You may consider various CIS Security Benchmarks for your container host. If you have other security guidelines or regulatory requirements to adhere to, please follow them as suitable in your environment.

Default Value:

By default, the host has factory setting and is not hardened."
      reference   : "CIS_Recommendation|1.2.1,CSCv6|3,CSCv7|5,CSCv8|16.7,LEVEL|1M,800-53|CM-6b."
      see_also    : "https://workbench.cisecurity.org/files/3353"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "1.2.2 Ensure that the version of Docker is up to date"
      info        : "Frequent releases for Docker are issued which address security vulnerabilities, resolve product bugs and bring in new functionality. You should keep a tab on these product updates and upgrade as frequently as possible in line with the general IT security policy of your organization.

Rationale:

By staying up to date on Docker updates, vulnerabilities in the software can be mitigated. An experienced attacker may be able to exploit known vulnerabilities resulting in them being able to attain inappropriate access or to elevate their privileges. If you do not ensure that Docker is running at the most current release consistent with the requirements of of your application, you may introduce unwanted behaviour and it is therefore important to ensure that you monitor software versions and upgrade in a timely fashion.

Impact:

You should perform a risk assessment regarding Docker version updates and review how they may impact your operations. You should be aware that third-party products that use Docker may require older major versions of Docker to be supported, and this should be reviewed in line with the general IT security policy of your organization, particularly where security vulnerabilities in older versions have been publicly disclosed."
      solution    : "You should monitor versions of Docker releases and make sure your software is updated as required.

Default Value:

Not Applicable"
      reference   : "800-171|3.14.1,800-53|SI-2c.,CIS_Recommendation|1.2.2,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv6|4,CSCv7|3,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "docker version --format '{{ .Server.Version }}'"
# Note: Variable @DOCKER_VERSION@ replaced with "19.[0-9]+.[0-9]+" in field "expect".
      expect      : "19.[0-9]+.[0-9]+"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "6.1 Ensure that image sprawl is avoided"
      info        : "You should not keep a large number of container images on the same host. Use only tagged images as appropriate.

Rationale:

Tagged images are useful if you need to fall back from the 'latest' version to a specific version of an image in production. Images with unused or old tags may contain vulnerabilities that might be exploited if instantiated.

Impact:

docker system prune -a removes all exited containers as well as all images and volumes that are not referenced by running containers. If any images are removed, this would result in needing to reload the images to the host.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "You should keep only the images that you actually need and establish a workflow to remove old or stale images from the host. Additionally, you should use features such as pull-by-digest to get specific images from the registry.
You can follow the steps below to find unused images on the system so they can be deleted.
Step 1 Make a list of all image IDs that are currently instantiated by executing the command below:

docker images --quiet | xargs docker inspect --format '{{ .Id }}: Image={{ .Config.Image }}'

Step 2: List all the images present on the system by executing the command below:

docker images

Step 3: Compare the list of image IDs created from Step 1 and Step 2 to find out images which are currently not being instantiated.
Step 4: Decide if you want to keep the images that are not currently in use. If they are not needed, delete them by executing the following command:

docker rmi <IMAGE ID>

Alternatively, the docker system prune command can be used to remove dangling images which are not tagged or, if necessary, all images that are not currently used by a running container when used with the -a option.

Default Value:

Images and layered filesystems remain accessible on the host until the administrator removes all tags that refer to those images or layers."
      reference   : "800-171|3.4.2,800-53|CM-6b.,CIS_Recommendation|6.1,CN-L3|8.1.10.6(d),CSCv6|18,CSCv7|5.3,CSF|PR.IP-1,ITSG-33|CM-6b.,LEVEL|1M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "docker images --quiet | xargs docker inspect --format '{{ .Id }}: Image={{ .Config.Image }}' ; docker images"
      expect      : "MANUAL_REVIEW"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "6.2 Ensure that container sprawl is avoided"
      info        : "You should not keep a large number of containers on the same host.

Rationale:

The flexibility of containers makes it easy to run multiple instances of applications and therefore indirectly leads to Docker images that can exist at varying security patch levels. It also means that you are consuming host resources that otherwise could have been used for running 'useful' containers. Having more than just an essential number of containers on a particular host makes the system vulnerable to mishandling, misconfiguration and fragmentation. You should therefore keep the number of containers on a given host to the minimum number commensurate with serving production applications.

Impact:

You should retain containers that are actively in use, and delete ones which are no longer needed.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "You should periodically check your container inventory on each host and clean up containers which are not in active use with the command below:

docker container prune

Default Value:

By default, Docker does not restrict the number of containers you may have on a host."
      reference   : "800-171|3.14.1,800-53|SI-2c.,CIS_Recommendation|6.2,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv6|18,CSCv7|5.1,CSF|ID.RA-1,CSF|PR.IP-12,ITSG-33|SI-2,LEVEL|1M,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      see_also    : "https://workbench.cisecurity.org/files/3353"
      cmd         : "echo Containers: $(docker info --format '{{ .Containers }}'); echo Stopped: $(docker info --format '{{ .ContainersStopped }}'); echo Running: $(docker info --format '{{ .ContainersRunning }}')"
      expect      : "MANUAL_REVIEW"
      severity    : MEDIUM
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Docker_v1.3.1_L1_Linux_Host_OS.audit from CIS Docker Benchmark v1.3.1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/3353"
    </report>
  </else>
</if>

</check_type>
